{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/**\n * @typedef {Object} CssTokenCallbacks\n * @property {function(string, number): boolean} isSelector\n * @property {function(string, number, number, number, number): number=} url\n * @property {function(string, number, number): number=} string\n * @property {function(string, number, number): number=} leftParenthesis\n * @property {function(string, number, number): number=} rightParenthesis\n * @property {function(string, number, number): number=} pseudoFunction\n * @property {function(string, number, number): number=} function\n * @property {function(string, number, number): number=} pseudoClass\n * @property {function(string, number, number): number=} atKeyword\n * @property {function(string, number, number): number=} class\n * @property {function(string, number, number): number=} identifier\n * @property {function(string, number, number): number=} id\n * @property {function(string, number, number): number=} leftCurlyBracket\n * @property {function(string, number, number): number=} rightCurlyBracket\n * @property {function(string, number, number): number=} semicolon\n * @property {function(string, number, number): number=} comma\n */\n\n/** @typedef {function(string, number, CssTokenCallbacks): number} CharHandler */\n\n// spec: https://drafts.csswg.org/css-syntax/\nconst CC_LINE_FEED = \"\\n\".charCodeAt(0);\nconst CC_CARRIAGE_RETURN = \"\\r\".charCodeAt(0);\nconst CC_FORM_FEED = \"\\f\".charCodeAt(0);\nconst CC_TAB = \"\\t\".charCodeAt(0);\nconst CC_SPACE = \" \".charCodeAt(0);\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_BACK_SLASH = \"\\\\\".charCodeAt(0);\nconst CC_ASTERISK = \"*\".charCodeAt(0);\nconst CC_LEFT_PARENTHESIS = \"(\".charCodeAt(0);\nconst CC_RIGHT_PARENTHESIS = \")\".charCodeAt(0);\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\nconst CC_QUOTATION_MARK = '\"'.charCodeAt(0);\nconst CC_APOSTROPHE = \"'\".charCodeAt(0);\nconst CC_FULL_STOP = \".\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0);\nconst CC_COMMA = \",\".charCodeAt(0);\nconst CC_PERCENTAGE = \"%\".charCodeAt(0);\nconst CC_AT_SIGN = \"@\".charCodeAt(0);\nconst CC_LOW_LINE = \"_\".charCodeAt(0);\nconst CC_LOWER_A = \"a\".charCodeAt(0);\nconst CC_LOWER_U = \"u\".charCodeAt(0);\nconst CC_LOWER_E = \"e\".charCodeAt(0);\nconst CC_LOWER_Z = \"z\".charCodeAt(0);\nconst CC_UPPER_A = \"A\".charCodeAt(0);\nconst CC_UPPER_E = \"E\".charCodeAt(0);\nconst CC_UPPER_Z = \"Z\".charCodeAt(0);\nconst CC_0 = \"0\".charCodeAt(0);\nconst CC_9 = \"9\".charCodeAt(0);\nconst CC_NUMBER_SIGN = \"#\".charCodeAt(0);\nconst CC_PLUS_SIGN = \"+\".charCodeAt(0);\nconst CC_HYPHEN_MINUS = \"-\".charCodeAt(0);\nconst CC_LESS_THAN_SIGN = \"<\".charCodeAt(0);\nconst CC_GREATER_THAN_SIGN = \">\".charCodeAt(0);\nconst _isNewLine = cc => {\n  return cc === CC_LINE_FEED || cc === CC_CARRIAGE_RETURN || cc === CC_FORM_FEED;\n};\n\n/** @type {CharHandler} */\nconst consumeSpace = (input, pos, callbacks) => {\n  let cc;\n  do {\n    pos++;\n    cc = input.charCodeAt(pos);\n  } while (_isWhiteSpace(cc));\n  return pos;\n};\nconst _isWhiteSpace = cc => {\n  return cc === CC_LINE_FEED || cc === CC_CARRIAGE_RETURN || cc === CC_FORM_FEED || cc === CC_TAB || cc === CC_SPACE;\n};\n\n/** @type {CharHandler} */\nconst consumeSingleCharToken = (input, pos, callbacks) => {\n  return pos + 1;\n};\n\n/** @type {CharHandler} */\nconst consumePotentialComment = (input, pos, callbacks) => {\n  pos++;\n  if (pos === input.length) return pos;\n  let cc = input.charCodeAt(pos);\n  if (cc !== CC_ASTERISK) return pos;\n  for (;;) {\n    pos++;\n    if (pos === input.length) return pos;\n    cc = input.charCodeAt(pos);\n    while (cc === CC_ASTERISK) {\n      pos++;\n      if (pos === input.length) return pos;\n      cc = input.charCodeAt(pos);\n      if (cc === CC_SLASH) return pos + 1;\n    }\n  }\n};\n\n/** @type {function(number): CharHandler} */\nconst consumeString = end => (input, pos, callbacks) => {\n  const start = pos;\n  pos = _consumeString(input, pos, end);\n  if (callbacks.string !== undefined) {\n    pos = callbacks.string(input, start, pos);\n  }\n  return pos;\n};\nconst _consumeString = (input, pos, end) => {\n  pos++;\n  for (;;) {\n    if (pos === input.length) return pos;\n    const cc = input.charCodeAt(pos);\n    if (cc === end) return pos + 1;\n    if (_isNewLine(cc)) {\n      // bad string\n      return pos;\n    }\n    if (cc === CC_BACK_SLASH) {\n      // we don't need to fully parse the escaped code point\n      // just skip over a potential new line\n      pos++;\n      if (pos === input.length) return pos;\n      pos++;\n    } else {\n      pos++;\n    }\n  }\n};\nconst _isIdentifierStartCode = cc => {\n  return cc === CC_LOW_LINE || cc >= CC_LOWER_A && cc <= CC_LOWER_Z || cc >= CC_UPPER_A && cc <= CC_UPPER_Z || cc > 0x80;\n};\nconst _isDigit = cc => {\n  return cc >= CC_0 && cc <= CC_9;\n};\nconst _startsIdentifier = (input, pos) => {\n  const cc = input.charCodeAt(pos);\n  if (cc === CC_HYPHEN_MINUS) {\n    if (pos === input.length) return false;\n    const cc = input.charCodeAt(pos + 1);\n    if (cc === CC_HYPHEN_MINUS) return true;\n    if (cc === CC_BACK_SLASH) {\n      const cc = input.charCodeAt(pos + 2);\n      return !_isNewLine(cc);\n    }\n    return _isIdentifierStartCode(cc);\n  }\n  if (cc === CC_BACK_SLASH) {\n    const cc = input.charCodeAt(pos + 1);\n    return !_isNewLine(cc);\n  }\n  return _isIdentifierStartCode(cc);\n};\n\n/** @type {CharHandler} */\nconst consumeNumberSign = (input, pos, callbacks) => {\n  const start = pos;\n  pos++;\n  if (pos === input.length) return pos;\n  if (callbacks.isSelector(input, pos) && _startsIdentifier(input, pos)) {\n    pos = _consumeIdentifier(input, pos);\n    if (callbacks.id !== undefined) {\n      return callbacks.id(input, start, pos);\n    }\n  }\n  return pos;\n};\n\n/** @type {CharHandler} */\nconst consumeMinus = (input, pos, callbacks) => {\n  const start = pos;\n  pos++;\n  if (pos === input.length) return pos;\n  const cc = input.charCodeAt(pos);\n  if (cc === CC_FULL_STOP || _isDigit(cc)) {\n    return consumeNumericToken(input, pos, callbacks);\n  } else if (cc === CC_HYPHEN_MINUS) {\n    pos++;\n    if (pos === input.length) return pos;\n    const cc = input.charCodeAt(pos);\n    if (cc === CC_GREATER_THAN_SIGN) {\n      return pos + 1;\n    } else {\n      pos = _consumeIdentifier(input, pos);\n      if (callbacks.identifier !== undefined) {\n        return callbacks.identifier(input, start, pos);\n      }\n    }\n  } else if (cc === CC_BACK_SLASH) {\n    if (pos + 1 === input.length) return pos;\n    const cc = input.charCodeAt(pos + 1);\n    if (_isNewLine(cc)) return pos;\n    pos = _consumeIdentifier(input, pos);\n    if (callbacks.identifier !== undefined) {\n      return callbacks.identifier(input, start, pos);\n    }\n  } else if (_isIdentifierStartCode(cc)) {\n    pos++;\n    pos = _consumeIdentifier(input, pos);\n    if (callbacks.identifier !== undefined) {\n      return callbacks.identifier(input, start, pos);\n    }\n  }\n  return pos;\n};\n\n/** @type {CharHandler} */\nconst consumeDot = (input, pos, callbacks) => {\n  const start = pos;\n  pos++;\n  if (pos === input.length) return pos;\n  const cc = input.charCodeAt(pos);\n  if (_isDigit(cc)) return consumeNumericToken(input, pos - 2, callbacks);\n  if (!callbacks.isSelector(input, pos) || !_startsIdentifier(input, pos)) return pos;\n  pos = _consumeIdentifier(input, pos);\n  if (callbacks.class !== undefined) return callbacks.class(input, start, pos);\n  return pos;\n};\n\n/** @type {CharHandler} */\nconst consumeNumericToken = (input, pos, callbacks) => {\n  pos = _consumeNumber(input, pos);\n  if (pos === input.length) return pos;\n  if (_startsIdentifier(input, pos)) return _consumeIdentifier(input, pos);\n  const cc = input.charCodeAt(pos);\n  if (cc === CC_PERCENTAGE) return pos + 1;\n  return pos;\n};\n\n/** @type {CharHandler} */\nconst consumeOtherIdentifier = (input, pos, callbacks) => {\n  const start = pos;\n  pos = _consumeIdentifier(input, pos);\n  if (pos !== input.length && !callbacks.isSelector(input, pos) && input.charCodeAt(pos) === CC_LEFT_PARENTHESIS) {\n    pos++;\n    if (callbacks.function !== undefined) {\n      return callbacks.function(input, start, pos);\n    }\n  } else {\n    if (callbacks.identifier !== undefined) {\n      return callbacks.identifier(input, start, pos);\n    }\n  }\n  return pos;\n};\n\n/** @type {CharHandler} */\nconst consumePotentialUrl = (input, pos, callbacks) => {\n  const start = pos;\n  pos = _consumeIdentifier(input, pos);\n  if (pos === start + 3 && input.slice(start, pos + 1) === \"url(\") {\n    pos++;\n    let cc = input.charCodeAt(pos);\n    while (_isWhiteSpace(cc)) {\n      pos++;\n      if (pos === input.length) return pos;\n      cc = input.charCodeAt(pos);\n    }\n    if (cc === CC_QUOTATION_MARK || cc === CC_APOSTROPHE) {\n      pos++;\n      const contentStart = pos;\n      pos = _consumeString(input, pos, cc);\n      const contentEnd = pos - 1;\n      cc = input.charCodeAt(pos);\n      while (_isWhiteSpace(cc)) {\n        pos++;\n        if (pos === input.length) return pos;\n        cc = input.charCodeAt(pos);\n      }\n      if (cc !== CC_RIGHT_PARENTHESIS) return pos;\n      pos++;\n      if (callbacks.url !== undefined) return callbacks.url(input, start, pos, contentStart, contentEnd);\n      return pos;\n    } else {\n      const contentStart = pos;\n      let contentEnd;\n      for (;;) {\n        if (cc === CC_BACK_SLASH) {\n          pos++;\n          if (pos === input.length) return pos;\n          pos++;\n        } else if (_isWhiteSpace(cc)) {\n          contentEnd = pos;\n          do {\n            pos++;\n            if (pos === input.length) return pos;\n            cc = input.charCodeAt(pos);\n          } while (_isWhiteSpace(cc));\n          if (cc !== CC_RIGHT_PARENTHESIS) return pos;\n          pos++;\n          if (callbacks.url !== undefined) {\n            return callbacks.url(input, start, pos, contentStart, contentEnd);\n          }\n          return pos;\n        } else if (cc === CC_RIGHT_PARENTHESIS) {\n          contentEnd = pos;\n          pos++;\n          if (callbacks.url !== undefined) {\n            return callbacks.url(input, start, pos, contentStart, contentEnd);\n          }\n          return pos;\n        } else if (cc === CC_LEFT_PARENTHESIS) {\n          return pos;\n        } else {\n          pos++;\n        }\n        if (pos === input.length) return pos;\n        cc = input.charCodeAt(pos);\n      }\n    }\n  } else {\n    if (callbacks.identifier !== undefined) {\n      return callbacks.identifier(input, start, pos);\n    }\n    return pos;\n  }\n};\n\n/** @type {CharHandler} */\nconst consumePotentialPseudo = (input, pos, callbacks) => {\n  const start = pos;\n  pos++;\n  if (!callbacks.isSelector(input, pos) || !_startsIdentifier(input, pos)) return pos;\n  pos = _consumeIdentifier(input, pos);\n  let cc = input.charCodeAt(pos);\n  if (cc === CC_LEFT_PARENTHESIS) {\n    pos++;\n    if (callbacks.pseudoFunction !== undefined) {\n      return callbacks.pseudoFunction(input, start, pos);\n    }\n    return pos;\n  }\n  if (callbacks.pseudoClass !== undefined) {\n    return callbacks.pseudoClass(input, start, pos);\n  }\n  return pos;\n};\n\n/** @type {CharHandler} */\nconst consumeLeftParenthesis = (input, pos, callbacks) => {\n  pos++;\n  if (callbacks.leftParenthesis !== undefined) {\n    return callbacks.leftParenthesis(input, pos - 1, pos);\n  }\n  return pos;\n};\n\n/** @type {CharHandler} */\nconst consumeRightParenthesis = (input, pos, callbacks) => {\n  pos++;\n  if (callbacks.rightParenthesis !== undefined) {\n    return callbacks.rightParenthesis(input, pos - 1, pos);\n  }\n  return pos;\n};\n\n/** @type {CharHandler} */\nconst consumeLeftCurlyBracket = (input, pos, callbacks) => {\n  pos++;\n  if (callbacks.leftCurlyBracket !== undefined) {\n    return callbacks.leftCurlyBracket(input, pos - 1, pos);\n  }\n  return pos;\n};\n\n/** @type {CharHandler} */\nconst consumeRightCurlyBracket = (input, pos, callbacks) => {\n  pos++;\n  if (callbacks.rightCurlyBracket !== undefined) {\n    return callbacks.rightCurlyBracket(input, pos - 1, pos);\n  }\n  return pos;\n};\n\n/** @type {CharHandler} */\nconst consumeSemicolon = (input, pos, callbacks) => {\n  pos++;\n  if (callbacks.semicolon !== undefined) {\n    return callbacks.semicolon(input, pos - 1, pos);\n  }\n  return pos;\n};\n\n/** @type {CharHandler} */\nconst consumeComma = (input, pos, callbacks) => {\n  pos++;\n  if (callbacks.comma !== undefined) {\n    return callbacks.comma(input, pos - 1, pos);\n  }\n  return pos;\n};\nconst _consumeIdentifier = (input, pos) => {\n  for (;;) {\n    const cc = input.charCodeAt(pos);\n    if (cc === CC_BACK_SLASH) {\n      pos++;\n      if (pos === input.length) return pos;\n      pos++;\n    } else if (_isIdentifierStartCode(cc) || _isDigit(cc) || cc === CC_HYPHEN_MINUS) {\n      pos++;\n    } else {\n      return pos;\n    }\n  }\n};\nconst _consumeNumber = (input, pos) => {\n  pos++;\n  if (pos === input.length) return pos;\n  let cc = input.charCodeAt(pos);\n  while (_isDigit(cc)) {\n    pos++;\n    if (pos === input.length) return pos;\n    cc = input.charCodeAt(pos);\n  }\n  if (cc === CC_FULL_STOP && pos + 1 !== input.length) {\n    const next = input.charCodeAt(pos + 1);\n    if (_isDigit(next)) {\n      pos += 2;\n      cc = input.charCodeAt(pos);\n      while (_isDigit(cc)) {\n        pos++;\n        if (pos === input.length) return pos;\n        cc = input.charCodeAt(pos);\n      }\n    }\n  }\n  if (cc === CC_LOWER_E || cc === CC_UPPER_E) {\n    if (pos + 1 !== input.length) {\n      const next = input.charCodeAt(pos + 2);\n      if (_isDigit(next)) {\n        pos += 2;\n      } else if ((next === CC_HYPHEN_MINUS || next === CC_PLUS_SIGN) && pos + 2 !== input.length) {\n        const next = input.charCodeAt(pos + 2);\n        if (_isDigit(next)) {\n          pos += 3;\n        } else {\n          return pos;\n        }\n      } else {\n        return pos;\n      }\n    }\n  } else {\n    return pos;\n  }\n  cc = input.charCodeAt(pos);\n  while (_isDigit(cc)) {\n    pos++;\n    if (pos === input.length) return pos;\n    cc = input.charCodeAt(pos);\n  }\n  return pos;\n};\n\n/** @type {CharHandler} */\nconst consumeLessThan = (input, pos, callbacks) => {\n  if (input.slice(pos + 1, pos + 4) === \"!--\") return pos + 4;\n  return pos + 1;\n};\n\n/** @type {CharHandler} */\nconst consumeAt = (input, pos, callbacks) => {\n  const start = pos;\n  pos++;\n  if (pos === input.length) return pos;\n  if (_startsIdentifier(input, pos)) {\n    pos = _consumeIdentifier(input, pos);\n    if (callbacks.atKeyword !== undefined) {\n      pos = callbacks.atKeyword(input, start, pos);\n    }\n  }\n  return pos;\n};\nconst CHAR_MAP = Array.from({\n  length: 0x80\n}, (_, cc) => {\n  // https://drafts.csswg.org/css-syntax/#consume-token\n  switch (cc) {\n    case CC_LINE_FEED:\n    case CC_CARRIAGE_RETURN:\n    case CC_FORM_FEED:\n    case CC_TAB:\n    case CC_SPACE:\n      return consumeSpace;\n    case CC_QUOTATION_MARK:\n    case CC_APOSTROPHE:\n      return consumeString(cc);\n    case CC_NUMBER_SIGN:\n      return consumeNumberSign;\n    case CC_SLASH:\n      return consumePotentialComment;\n    // case CC_LEFT_SQUARE:\n    // case CC_RIGHT_SQUARE:\n    // case CC_COMMA:\n    // case CC_COLON:\n    // \treturn consumeSingleCharToken;\n    case CC_COMMA:\n      return consumeComma;\n    case CC_SEMICOLON:\n      return consumeSemicolon;\n    case CC_LEFT_PARENTHESIS:\n      return consumeLeftParenthesis;\n    case CC_RIGHT_PARENTHESIS:\n      return consumeRightParenthesis;\n    case CC_LEFT_CURLY:\n      return consumeLeftCurlyBracket;\n    case CC_RIGHT_CURLY:\n      return consumeRightCurlyBracket;\n    case CC_COLON:\n      return consumePotentialPseudo;\n    case CC_PLUS_SIGN:\n      return consumeNumericToken;\n    case CC_FULL_STOP:\n      return consumeDot;\n    case CC_HYPHEN_MINUS:\n      return consumeMinus;\n    case CC_LESS_THAN_SIGN:\n      return consumeLessThan;\n    case CC_AT_SIGN:\n      return consumeAt;\n    case CC_LOWER_U:\n      return consumePotentialUrl;\n    case CC_LOW_LINE:\n      return consumeOtherIdentifier;\n    default:\n      if (_isDigit(cc)) return consumeNumericToken;\n      if (cc >= CC_LOWER_A && cc <= CC_LOWER_Z || cc >= CC_UPPER_A && cc <= CC_UPPER_Z) {\n        return consumeOtherIdentifier;\n      }\n      return consumeSingleCharToken;\n  }\n});\n\n/**\n * @param {string} input input css\n * @param {CssTokenCallbacks} callbacks callbacks\n * @returns {void}\n */\nmodule.exports = (input, callbacks) => {\n  let pos = 0;\n  while (pos < input.length) {\n    const cc = input.charCodeAt(pos);\n    if (cc < 0x80) {\n      pos = CHAR_MAP[cc](input, pos, callbacks);\n    } else {\n      pos++;\n    }\n  }\n};\nmodule.exports.eatComments = (input, pos) => {\n  loop: for (;;) {\n    const cc = input.charCodeAt(pos);\n    if (cc === CC_SLASH) {\n      if (pos === input.length) return pos;\n      let cc = input.charCodeAt(pos + 1);\n      if (cc !== CC_ASTERISK) return pos;\n      pos++;\n      for (;;) {\n        pos++;\n        if (pos === input.length) return pos;\n        cc = input.charCodeAt(pos);\n        while (cc === CC_ASTERISK) {\n          pos++;\n          if (pos === input.length) return pos;\n          cc = input.charCodeAt(pos);\n          if (cc === CC_SLASH) {\n            pos++;\n            continue loop;\n          }\n        }\n      }\n    }\n    return pos;\n  }\n};\nmodule.exports.eatWhitespaceAndComments = (input, pos) => {\n  loop: for (;;) {\n    const cc = input.charCodeAt(pos);\n    if (cc === CC_SLASH) {\n      if (pos === input.length) return pos;\n      let cc = input.charCodeAt(pos + 1);\n      if (cc !== CC_ASTERISK) return pos;\n      pos++;\n      for (;;) {\n        pos++;\n        if (pos === input.length) return pos;\n        cc = input.charCodeAt(pos);\n        while (cc === CC_ASTERISK) {\n          pos++;\n          if (pos === input.length) return pos;\n          cc = input.charCodeAt(pos);\n          if (cc === CC_SLASH) {\n            pos++;\n            continue loop;\n          }\n        }\n      }\n    } else if (_isWhiteSpace(cc)) {\n      pos++;\n      continue;\n    }\n    return pos;\n  }\n};","map":{"version":3,"names":["CC_LINE_FEED","charCodeAt","CC_CARRIAGE_RETURN","CC_FORM_FEED","CC_TAB","CC_SPACE","CC_SLASH","CC_BACK_SLASH","CC_ASTERISK","CC_LEFT_PARENTHESIS","CC_RIGHT_PARENTHESIS","CC_LEFT_CURLY","CC_RIGHT_CURLY","CC_QUOTATION_MARK","CC_APOSTROPHE","CC_FULL_STOP","CC_COLON","CC_SEMICOLON","CC_COMMA","CC_PERCENTAGE","CC_AT_SIGN","CC_LOW_LINE","CC_LOWER_A","CC_LOWER_U","CC_LOWER_E","CC_LOWER_Z","CC_UPPER_A","CC_UPPER_E","CC_UPPER_Z","CC_0","CC_9","CC_NUMBER_SIGN","CC_PLUS_SIGN","CC_HYPHEN_MINUS","CC_LESS_THAN_SIGN","CC_GREATER_THAN_SIGN","_isNewLine","cc","consumeSpace","input","pos","callbacks","_isWhiteSpace","consumeSingleCharToken","consumePotentialComment","length","consumeString","end","start","_consumeString","string","undefined","_isIdentifierStartCode","_isDigit","_startsIdentifier","consumeNumberSign","isSelector","_consumeIdentifier","id","consumeMinus","consumeNumericToken","identifier","consumeDot","class","_consumeNumber","consumeOtherIdentifier","function","consumePotentialUrl","slice","contentStart","contentEnd","url","consumePotentialPseudo","pseudoFunction","pseudoClass","consumeLeftParenthesis","leftParenthesis","consumeRightParenthesis","rightParenthesis","consumeLeftCurlyBracket","leftCurlyBracket","consumeRightCurlyBracket","rightCurlyBracket","consumeSemicolon","semicolon","consumeComma","comma","next","consumeLessThan","consumeAt","atKeyword","CHAR_MAP","Array","from","_","module","exports","eatComments","loop","eatWhitespaceAndComments"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/webpack/lib/css/walkCssTokens.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/**\n * @typedef {Object} CssTokenCallbacks\n * @property {function(string, number): boolean} isSelector\n * @property {function(string, number, number, number, number): number=} url\n * @property {function(string, number, number): number=} string\n * @property {function(string, number, number): number=} leftParenthesis\n * @property {function(string, number, number): number=} rightParenthesis\n * @property {function(string, number, number): number=} pseudoFunction\n * @property {function(string, number, number): number=} function\n * @property {function(string, number, number): number=} pseudoClass\n * @property {function(string, number, number): number=} atKeyword\n * @property {function(string, number, number): number=} class\n * @property {function(string, number, number): number=} identifier\n * @property {function(string, number, number): number=} id\n * @property {function(string, number, number): number=} leftCurlyBracket\n * @property {function(string, number, number): number=} rightCurlyBracket\n * @property {function(string, number, number): number=} semicolon\n * @property {function(string, number, number): number=} comma\n */\n\n/** @typedef {function(string, number, CssTokenCallbacks): number} CharHandler */\n\n// spec: https://drafts.csswg.org/css-syntax/\n\nconst CC_LINE_FEED = \"\\n\".charCodeAt(0);\nconst CC_CARRIAGE_RETURN = \"\\r\".charCodeAt(0);\nconst CC_FORM_FEED = \"\\f\".charCodeAt(0);\n\nconst CC_TAB = \"\\t\".charCodeAt(0);\nconst CC_SPACE = \" \".charCodeAt(0);\n\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_BACK_SLASH = \"\\\\\".charCodeAt(0);\nconst CC_ASTERISK = \"*\".charCodeAt(0);\n\nconst CC_LEFT_PARENTHESIS = \"(\".charCodeAt(0);\nconst CC_RIGHT_PARENTHESIS = \")\".charCodeAt(0);\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\n\nconst CC_QUOTATION_MARK = '\"'.charCodeAt(0);\nconst CC_APOSTROPHE = \"'\".charCodeAt(0);\n\nconst CC_FULL_STOP = \".\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0);\nconst CC_COMMA = \",\".charCodeAt(0);\nconst CC_PERCENTAGE = \"%\".charCodeAt(0);\nconst CC_AT_SIGN = \"@\".charCodeAt(0);\n\nconst CC_LOW_LINE = \"_\".charCodeAt(0);\nconst CC_LOWER_A = \"a\".charCodeAt(0);\nconst CC_LOWER_U = \"u\".charCodeAt(0);\nconst CC_LOWER_E = \"e\".charCodeAt(0);\nconst CC_LOWER_Z = \"z\".charCodeAt(0);\nconst CC_UPPER_A = \"A\".charCodeAt(0);\nconst CC_UPPER_E = \"E\".charCodeAt(0);\nconst CC_UPPER_Z = \"Z\".charCodeAt(0);\nconst CC_0 = \"0\".charCodeAt(0);\nconst CC_9 = \"9\".charCodeAt(0);\n\nconst CC_NUMBER_SIGN = \"#\".charCodeAt(0);\nconst CC_PLUS_SIGN = \"+\".charCodeAt(0);\nconst CC_HYPHEN_MINUS = \"-\".charCodeAt(0);\n\nconst CC_LESS_THAN_SIGN = \"<\".charCodeAt(0);\nconst CC_GREATER_THAN_SIGN = \">\".charCodeAt(0);\n\nconst _isNewLine = cc => {\n\treturn (\n\t\tcc === CC_LINE_FEED || cc === CC_CARRIAGE_RETURN || cc === CC_FORM_FEED\n\t);\n};\n\n/** @type {CharHandler} */\nconst consumeSpace = (input, pos, callbacks) => {\n\tlet cc;\n\tdo {\n\t\tpos++;\n\t\tcc = input.charCodeAt(pos);\n\t} while (_isWhiteSpace(cc));\n\treturn pos;\n};\n\nconst _isWhiteSpace = cc => {\n\treturn (\n\t\tcc === CC_LINE_FEED ||\n\t\tcc === CC_CARRIAGE_RETURN ||\n\t\tcc === CC_FORM_FEED ||\n\t\tcc === CC_TAB ||\n\t\tcc === CC_SPACE\n\t);\n};\n\n/** @type {CharHandler} */\nconst consumeSingleCharToken = (input, pos, callbacks) => {\n\treturn pos + 1;\n};\n\n/** @type {CharHandler} */\nconst consumePotentialComment = (input, pos, callbacks) => {\n\tpos++;\n\tif (pos === input.length) return pos;\n\tlet cc = input.charCodeAt(pos);\n\tif (cc !== CC_ASTERISK) return pos;\n\tfor (;;) {\n\t\tpos++;\n\t\tif (pos === input.length) return pos;\n\t\tcc = input.charCodeAt(pos);\n\t\twhile (cc === CC_ASTERISK) {\n\t\t\tpos++;\n\t\t\tif (pos === input.length) return pos;\n\t\t\tcc = input.charCodeAt(pos);\n\t\t\tif (cc === CC_SLASH) return pos + 1;\n\t\t}\n\t}\n};\n\n/** @type {function(number): CharHandler} */\nconst consumeString = end => (input, pos, callbacks) => {\n\tconst start = pos;\n\tpos = _consumeString(input, pos, end);\n\tif (callbacks.string !== undefined) {\n\t\tpos = callbacks.string(input, start, pos);\n\t}\n\treturn pos;\n};\n\nconst _consumeString = (input, pos, end) => {\n\tpos++;\n\tfor (;;) {\n\t\tif (pos === input.length) return pos;\n\t\tconst cc = input.charCodeAt(pos);\n\t\tif (cc === end) return pos + 1;\n\t\tif (_isNewLine(cc)) {\n\t\t\t// bad string\n\t\t\treturn pos;\n\t\t}\n\t\tif (cc === CC_BACK_SLASH) {\n\t\t\t// we don't need to fully parse the escaped code point\n\t\t\t// just skip over a potential new line\n\t\t\tpos++;\n\t\t\tif (pos === input.length) return pos;\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t}\n\t}\n};\n\nconst _isIdentifierStartCode = cc => {\n\treturn (\n\t\tcc === CC_LOW_LINE ||\n\t\t(cc >= CC_LOWER_A && cc <= CC_LOWER_Z) ||\n\t\t(cc >= CC_UPPER_A && cc <= CC_UPPER_Z) ||\n\t\tcc > 0x80\n\t);\n};\n\nconst _isDigit = cc => {\n\treturn cc >= CC_0 && cc <= CC_9;\n};\n\nconst _startsIdentifier = (input, pos) => {\n\tconst cc = input.charCodeAt(pos);\n\tif (cc === CC_HYPHEN_MINUS) {\n\t\tif (pos === input.length) return false;\n\t\tconst cc = input.charCodeAt(pos + 1);\n\t\tif (cc === CC_HYPHEN_MINUS) return true;\n\t\tif (cc === CC_BACK_SLASH) {\n\t\t\tconst cc = input.charCodeAt(pos + 2);\n\t\t\treturn !_isNewLine(cc);\n\t\t}\n\t\treturn _isIdentifierStartCode(cc);\n\t}\n\tif (cc === CC_BACK_SLASH) {\n\t\tconst cc = input.charCodeAt(pos + 1);\n\t\treturn !_isNewLine(cc);\n\t}\n\treturn _isIdentifierStartCode(cc);\n};\n\n/** @type {CharHandler} */\nconst consumeNumberSign = (input, pos, callbacks) => {\n\tconst start = pos;\n\tpos++;\n\tif (pos === input.length) return pos;\n\tif (callbacks.isSelector(input, pos) && _startsIdentifier(input, pos)) {\n\t\tpos = _consumeIdentifier(input, pos);\n\t\tif (callbacks.id !== undefined) {\n\t\t\treturn callbacks.id(input, start, pos);\n\t\t}\n\t}\n\treturn pos;\n};\n\n/** @type {CharHandler} */\nconst consumeMinus = (input, pos, callbacks) => {\n\tconst start = pos;\n\tpos++;\n\tif (pos === input.length) return pos;\n\tconst cc = input.charCodeAt(pos);\n\tif (cc === CC_FULL_STOP || _isDigit(cc)) {\n\t\treturn consumeNumericToken(input, pos, callbacks);\n\t} else if (cc === CC_HYPHEN_MINUS) {\n\t\tpos++;\n\t\tif (pos === input.length) return pos;\n\t\tconst cc = input.charCodeAt(pos);\n\t\tif (cc === CC_GREATER_THAN_SIGN) {\n\t\t\treturn pos + 1;\n\t\t} else {\n\t\t\tpos = _consumeIdentifier(input, pos);\n\t\t\tif (callbacks.identifier !== undefined) {\n\t\t\t\treturn callbacks.identifier(input, start, pos);\n\t\t\t}\n\t\t}\n\t} else if (cc === CC_BACK_SLASH) {\n\t\tif (pos + 1 === input.length) return pos;\n\t\tconst cc = input.charCodeAt(pos + 1);\n\t\tif (_isNewLine(cc)) return pos;\n\t\tpos = _consumeIdentifier(input, pos);\n\t\tif (callbacks.identifier !== undefined) {\n\t\t\treturn callbacks.identifier(input, start, pos);\n\t\t}\n\t} else if (_isIdentifierStartCode(cc)) {\n\t\tpos++;\n\t\tpos = _consumeIdentifier(input, pos);\n\t\tif (callbacks.identifier !== undefined) {\n\t\t\treturn callbacks.identifier(input, start, pos);\n\t\t}\n\t}\n\treturn pos;\n};\n\n/** @type {CharHandler} */\nconst consumeDot = (input, pos, callbacks) => {\n\tconst start = pos;\n\tpos++;\n\tif (pos === input.length) return pos;\n\tconst cc = input.charCodeAt(pos);\n\tif (_isDigit(cc)) return consumeNumericToken(input, pos - 2, callbacks);\n\tif (!callbacks.isSelector(input, pos) || !_startsIdentifier(input, pos))\n\t\treturn pos;\n\tpos = _consumeIdentifier(input, pos);\n\tif (callbacks.class !== undefined) return callbacks.class(input, start, pos);\n\treturn pos;\n};\n\n/** @type {CharHandler} */\nconst consumeNumericToken = (input, pos, callbacks) => {\n\tpos = _consumeNumber(input, pos);\n\tif (pos === input.length) return pos;\n\tif (_startsIdentifier(input, pos)) return _consumeIdentifier(input, pos);\n\tconst cc = input.charCodeAt(pos);\n\tif (cc === CC_PERCENTAGE) return pos + 1;\n\treturn pos;\n};\n\n/** @type {CharHandler} */\nconst consumeOtherIdentifier = (input, pos, callbacks) => {\n\tconst start = pos;\n\tpos = _consumeIdentifier(input, pos);\n\tif (\n\t\tpos !== input.length &&\n\t\t!callbacks.isSelector(input, pos) &&\n\t\tinput.charCodeAt(pos) === CC_LEFT_PARENTHESIS\n\t) {\n\t\tpos++;\n\t\tif (callbacks.function !== undefined) {\n\t\t\treturn callbacks.function(input, start, pos);\n\t\t}\n\t} else {\n\t\tif (callbacks.identifier !== undefined) {\n\t\t\treturn callbacks.identifier(input, start, pos);\n\t\t}\n\t}\n\treturn pos;\n};\n\n/** @type {CharHandler} */\nconst consumePotentialUrl = (input, pos, callbacks) => {\n\tconst start = pos;\n\tpos = _consumeIdentifier(input, pos);\n\tif (pos === start + 3 && input.slice(start, pos + 1) === \"url(\") {\n\t\tpos++;\n\t\tlet cc = input.charCodeAt(pos);\n\t\twhile (_isWhiteSpace(cc)) {\n\t\t\tpos++;\n\t\t\tif (pos === input.length) return pos;\n\t\t\tcc = input.charCodeAt(pos);\n\t\t}\n\t\tif (cc === CC_QUOTATION_MARK || cc === CC_APOSTROPHE) {\n\t\t\tpos++;\n\t\t\tconst contentStart = pos;\n\t\t\tpos = _consumeString(input, pos, cc);\n\t\t\tconst contentEnd = pos - 1;\n\t\t\tcc = input.charCodeAt(pos);\n\t\t\twhile (_isWhiteSpace(cc)) {\n\t\t\t\tpos++;\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tcc = input.charCodeAt(pos);\n\t\t\t}\n\t\t\tif (cc !== CC_RIGHT_PARENTHESIS) return pos;\n\t\t\tpos++;\n\t\t\tif (callbacks.url !== undefined)\n\t\t\t\treturn callbacks.url(input, start, pos, contentStart, contentEnd);\n\t\t\treturn pos;\n\t\t} else {\n\t\t\tconst contentStart = pos;\n\t\t\tlet contentEnd;\n\t\t\tfor (;;) {\n\t\t\t\tif (cc === CC_BACK_SLASH) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tpos++;\n\t\t\t\t} else if (_isWhiteSpace(cc)) {\n\t\t\t\t\tcontentEnd = pos;\n\t\t\t\t\tdo {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\t\tcc = input.charCodeAt(pos);\n\t\t\t\t\t} while (_isWhiteSpace(cc));\n\t\t\t\t\tif (cc !== CC_RIGHT_PARENTHESIS) return pos;\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (callbacks.url !== undefined) {\n\t\t\t\t\t\treturn callbacks.url(input, start, pos, contentStart, contentEnd);\n\t\t\t\t\t}\n\t\t\t\t\treturn pos;\n\t\t\t\t} else if (cc === CC_RIGHT_PARENTHESIS) {\n\t\t\t\t\tcontentEnd = pos;\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (callbacks.url !== undefined) {\n\t\t\t\t\t\treturn callbacks.url(input, start, pos, contentStart, contentEnd);\n\t\t\t\t\t}\n\t\t\t\t\treturn pos;\n\t\t\t\t} else if (cc === CC_LEFT_PARENTHESIS) {\n\t\t\t\t\treturn pos;\n\t\t\t\t} else {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tcc = input.charCodeAt(pos);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (callbacks.identifier !== undefined) {\n\t\t\treturn callbacks.identifier(input, start, pos);\n\t\t}\n\t\treturn pos;\n\t}\n};\n\n/** @type {CharHandler} */\nconst consumePotentialPseudo = (input, pos, callbacks) => {\n\tconst start = pos;\n\tpos++;\n\tif (!callbacks.isSelector(input, pos) || !_startsIdentifier(input, pos))\n\t\treturn pos;\n\tpos = _consumeIdentifier(input, pos);\n\tlet cc = input.charCodeAt(pos);\n\tif (cc === CC_LEFT_PARENTHESIS) {\n\t\tpos++;\n\t\tif (callbacks.pseudoFunction !== undefined) {\n\t\t\treturn callbacks.pseudoFunction(input, start, pos);\n\t\t}\n\t\treturn pos;\n\t}\n\tif (callbacks.pseudoClass !== undefined) {\n\t\treturn callbacks.pseudoClass(input, start, pos);\n\t}\n\treturn pos;\n};\n\n/** @type {CharHandler} */\nconst consumeLeftParenthesis = (input, pos, callbacks) => {\n\tpos++;\n\tif (callbacks.leftParenthesis !== undefined) {\n\t\treturn callbacks.leftParenthesis(input, pos - 1, pos);\n\t}\n\treturn pos;\n};\n\n/** @type {CharHandler} */\nconst consumeRightParenthesis = (input, pos, callbacks) => {\n\tpos++;\n\tif (callbacks.rightParenthesis !== undefined) {\n\t\treturn callbacks.rightParenthesis(input, pos - 1, pos);\n\t}\n\treturn pos;\n};\n\n/** @type {CharHandler} */\nconst consumeLeftCurlyBracket = (input, pos, callbacks) => {\n\tpos++;\n\tif (callbacks.leftCurlyBracket !== undefined) {\n\t\treturn callbacks.leftCurlyBracket(input, pos - 1, pos);\n\t}\n\treturn pos;\n};\n\n/** @type {CharHandler} */\nconst consumeRightCurlyBracket = (input, pos, callbacks) => {\n\tpos++;\n\tif (callbacks.rightCurlyBracket !== undefined) {\n\t\treturn callbacks.rightCurlyBracket(input, pos - 1, pos);\n\t}\n\treturn pos;\n};\n\n/** @type {CharHandler} */\nconst consumeSemicolon = (input, pos, callbacks) => {\n\tpos++;\n\tif (callbacks.semicolon !== undefined) {\n\t\treturn callbacks.semicolon(input, pos - 1, pos);\n\t}\n\treturn pos;\n};\n\n/** @type {CharHandler} */\nconst consumeComma = (input, pos, callbacks) => {\n\tpos++;\n\tif (callbacks.comma !== undefined) {\n\t\treturn callbacks.comma(input, pos - 1, pos);\n\t}\n\treturn pos;\n};\n\nconst _consumeIdentifier = (input, pos) => {\n\tfor (;;) {\n\t\tconst cc = input.charCodeAt(pos);\n\t\tif (cc === CC_BACK_SLASH) {\n\t\t\tpos++;\n\t\t\tif (pos === input.length) return pos;\n\t\t\tpos++;\n\t\t} else if (\n\t\t\t_isIdentifierStartCode(cc) ||\n\t\t\t_isDigit(cc) ||\n\t\t\tcc === CC_HYPHEN_MINUS\n\t\t) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\treturn pos;\n\t\t}\n\t}\n};\n\nconst _consumeNumber = (input, pos) => {\n\tpos++;\n\tif (pos === input.length) return pos;\n\tlet cc = input.charCodeAt(pos);\n\twhile (_isDigit(cc)) {\n\t\tpos++;\n\t\tif (pos === input.length) return pos;\n\t\tcc = input.charCodeAt(pos);\n\t}\n\tif (cc === CC_FULL_STOP && pos + 1 !== input.length) {\n\t\tconst next = input.charCodeAt(pos + 1);\n\t\tif (_isDigit(next)) {\n\t\t\tpos += 2;\n\t\t\tcc = input.charCodeAt(pos);\n\t\t\twhile (_isDigit(cc)) {\n\t\t\t\tpos++;\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tcc = input.charCodeAt(pos);\n\t\t\t}\n\t\t}\n\t}\n\tif (cc === CC_LOWER_E || cc === CC_UPPER_E) {\n\t\tif (pos + 1 !== input.length) {\n\t\t\tconst next = input.charCodeAt(pos + 2);\n\t\t\tif (_isDigit(next)) {\n\t\t\t\tpos += 2;\n\t\t\t} else if (\n\t\t\t\t(next === CC_HYPHEN_MINUS || next === CC_PLUS_SIGN) &&\n\t\t\t\tpos + 2 !== input.length\n\t\t\t) {\n\t\t\t\tconst next = input.charCodeAt(pos + 2);\n\t\t\t\tif (_isDigit(next)) {\n\t\t\t\t\tpos += 3;\n\t\t\t\t} else {\n\t\t\t\t\treturn pos;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn pos;\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn pos;\n\t}\n\tcc = input.charCodeAt(pos);\n\twhile (_isDigit(cc)) {\n\t\tpos++;\n\t\tif (pos === input.length) return pos;\n\t\tcc = input.charCodeAt(pos);\n\t}\n\treturn pos;\n};\n\n/** @type {CharHandler} */\nconst consumeLessThan = (input, pos, callbacks) => {\n\tif (input.slice(pos + 1, pos + 4) === \"!--\") return pos + 4;\n\treturn pos + 1;\n};\n\n/** @type {CharHandler} */\nconst consumeAt = (input, pos, callbacks) => {\n\tconst start = pos;\n\tpos++;\n\tif (pos === input.length) return pos;\n\tif (_startsIdentifier(input, pos)) {\n\t\tpos = _consumeIdentifier(input, pos);\n\t\tif (callbacks.atKeyword !== undefined) {\n\t\t\tpos = callbacks.atKeyword(input, start, pos);\n\t\t}\n\t}\n\treturn pos;\n};\n\nconst CHAR_MAP = Array.from({ length: 0x80 }, (_, cc) => {\n\t// https://drafts.csswg.org/css-syntax/#consume-token\n\tswitch (cc) {\n\t\tcase CC_LINE_FEED:\n\t\tcase CC_CARRIAGE_RETURN:\n\t\tcase CC_FORM_FEED:\n\t\tcase CC_TAB:\n\t\tcase CC_SPACE:\n\t\t\treturn consumeSpace;\n\t\tcase CC_QUOTATION_MARK:\n\t\tcase CC_APOSTROPHE:\n\t\t\treturn consumeString(cc);\n\t\tcase CC_NUMBER_SIGN:\n\t\t\treturn consumeNumberSign;\n\t\tcase CC_SLASH:\n\t\t\treturn consumePotentialComment;\n\t\t// case CC_LEFT_SQUARE:\n\t\t// case CC_RIGHT_SQUARE:\n\t\t// case CC_COMMA:\n\t\t// case CC_COLON:\n\t\t// \treturn consumeSingleCharToken;\n\t\tcase CC_COMMA:\n\t\t\treturn consumeComma;\n\t\tcase CC_SEMICOLON:\n\t\t\treturn consumeSemicolon;\n\t\tcase CC_LEFT_PARENTHESIS:\n\t\t\treturn consumeLeftParenthesis;\n\t\tcase CC_RIGHT_PARENTHESIS:\n\t\t\treturn consumeRightParenthesis;\n\t\tcase CC_LEFT_CURLY:\n\t\t\treturn consumeLeftCurlyBracket;\n\t\tcase CC_RIGHT_CURLY:\n\t\t\treturn consumeRightCurlyBracket;\n\t\tcase CC_COLON:\n\t\t\treturn consumePotentialPseudo;\n\t\tcase CC_PLUS_SIGN:\n\t\t\treturn consumeNumericToken;\n\t\tcase CC_FULL_STOP:\n\t\t\treturn consumeDot;\n\t\tcase CC_HYPHEN_MINUS:\n\t\t\treturn consumeMinus;\n\t\tcase CC_LESS_THAN_SIGN:\n\t\t\treturn consumeLessThan;\n\t\tcase CC_AT_SIGN:\n\t\t\treturn consumeAt;\n\t\tcase CC_LOWER_U:\n\t\t\treturn consumePotentialUrl;\n\t\tcase CC_LOW_LINE:\n\t\t\treturn consumeOtherIdentifier;\n\t\tdefault:\n\t\t\tif (_isDigit(cc)) return consumeNumericToken;\n\t\t\tif (\n\t\t\t\t(cc >= CC_LOWER_A && cc <= CC_LOWER_Z) ||\n\t\t\t\t(cc >= CC_UPPER_A && cc <= CC_UPPER_Z)\n\t\t\t) {\n\t\t\t\treturn consumeOtherIdentifier;\n\t\t\t}\n\t\t\treturn consumeSingleCharToken;\n\t}\n});\n\n/**\n * @param {string} input input css\n * @param {CssTokenCallbacks} callbacks callbacks\n * @returns {void}\n */\nmodule.exports = (input, callbacks) => {\n\tlet pos = 0;\n\twhile (pos < input.length) {\n\t\tconst cc = input.charCodeAt(pos);\n\t\tif (cc < 0x80) {\n\t\t\tpos = CHAR_MAP[cc](input, pos, callbacks);\n\t\t} else {\n\t\t\tpos++;\n\t\t}\n\t}\n};\n\nmodule.exports.eatComments = (input, pos) => {\n\tloop: for (;;) {\n\t\tconst cc = input.charCodeAt(pos);\n\t\tif (cc === CC_SLASH) {\n\t\t\tif (pos === input.length) return pos;\n\t\t\tlet cc = input.charCodeAt(pos + 1);\n\t\t\tif (cc !== CC_ASTERISK) return pos;\n\t\t\tpos++;\n\t\t\tfor (;;) {\n\t\t\t\tpos++;\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tcc = input.charCodeAt(pos);\n\t\t\t\twhile (cc === CC_ASTERISK) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tcc = input.charCodeAt(pos);\n\t\t\t\t\tif (cc === CC_SLASH) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tcontinue loop;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pos;\n\t}\n};\n\nmodule.exports.eatWhitespaceAndComments = (input, pos) => {\n\tloop: for (;;) {\n\t\tconst cc = input.charCodeAt(pos);\n\t\tif (cc === CC_SLASH) {\n\t\t\tif (pos === input.length) return pos;\n\t\t\tlet cc = input.charCodeAt(pos + 1);\n\t\t\tif (cc !== CC_ASTERISK) return pos;\n\t\t\tpos++;\n\t\t\tfor (;;) {\n\t\t\t\tpos++;\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tcc = input.charCodeAt(pos);\n\t\t\t\twhile (cc === CC_ASTERISK) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tcc = input.charCodeAt(pos);\n\t\t\t\t\tif (cc === CC_SLASH) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tcontinue loop;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (_isWhiteSpace(cc)) {\n\t\t\tpos++;\n\t\t\tcontinue;\n\t\t}\n\t\treturn pos;\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}