{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst {\n  toConstantDependency\n} = require(\"./javascript/JavascriptParserHelpers\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nmodule.exports = class RequireJsStuffPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"RequireJsStuffPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.requireJs === undefined || !parserOptions.requireJs) {\n          return;\n        }\n        parser.hooks.call.for(\"require.config\").tap(\"RequireJsStuffPlugin\", toConstantDependency(parser, \"undefined\"));\n        parser.hooks.call.for(\"requirejs.config\").tap(\"RequireJsStuffPlugin\", toConstantDependency(parser, \"undefined\"));\n        parser.hooks.expression.for(\"require.version\").tap(\"RequireJsStuffPlugin\", toConstantDependency(parser, JSON.stringify(\"0.0.0\")));\n        parser.hooks.expression.for(\"requirejs.onError\").tap(\"RequireJsStuffPlugin\", toConstantDependency(parser, RuntimeGlobals.uncaughtErrorHandler, [RuntimeGlobals.uncaughtErrorHandler]));\n      };\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"RequireJsStuffPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"RequireJsStuffPlugin\", handler);\n    });\n  }\n};","map":{"version":3,"names":["RuntimeGlobals","require","ConstDependency","toConstantDependency","module","exports","RequireJsStuffPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyTemplates","set","Template","handler","parser","parserOptions","requireJs","undefined","call","for","expression","JSON","stringify","uncaughtErrorHandler"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/webpack/lib/RequireJsStuffPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst {\n\ttoConstantDependency\n} = require(\"./javascript/JavascriptParserHelpers\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nmodule.exports = class RequireJsStuffPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"RequireJsStuffPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.requireJs === undefined ||\n\t\t\t\t\t\t!parserOptions.requireJs\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tparser.hooks.call\n\t\t\t\t\t\t.for(\"require.config\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireJsStuffPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, \"undefined\")\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.call\n\t\t\t\t\t\t.for(\"requirejs.config\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireJsStuffPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, \"undefined\")\n\t\t\t\t\t\t);\n\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"require.version\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireJsStuffPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"0.0.0\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"requirejs.onError\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireJsStuffPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tRuntimeGlobals.uncaughtErrorHandler,\n\t\t\t\t\t\t\t\t[RuntimeGlobals.uncaughtErrorHandler]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"RequireJsStuffPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"RequireJsStuffPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAClD,MAAMC,eAAe,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AACjE,MAAM;EACLE;AACD,CAAC,GAAGF,OAAO,CAAC,sCAAsC,CAAC;;AAEnD;;AAEAG,MAAM,CAACC,OAAO,GAAG,MAAMC,oBAAoB,CAAC;EAC3C;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,sBAAsB,EACtB,CAACD,WAAW,WAA8B;MAAA,IAA5B;QAAEE;MAAoB,CAAC;MACpCF,WAAW,CAACG,mBAAmB,CAACC,GAAG,CAClCZ,eAAe,EACf,IAAIA,eAAe,CAACa,QAAQ,EAAE,CAC9B;MACD,MAAMC,OAAO,GAAG,CAACC,MAAM,EAAEC,aAAa,KAAK;QAC1C,IACCA,aAAa,CAACC,SAAS,KAAKC,SAAS,IACrC,CAACF,aAAa,CAACC,SAAS,EACvB;UACD;QACD;QAEAF,MAAM,CAACR,KAAK,CAACY,IAAI,CACfC,GAAG,CAAC,gBAAgB,CAAC,CACrBX,GAAG,CACH,sBAAsB,EACtBR,oBAAoB,CAACc,MAAM,EAAE,WAAW,CAAC,CACzC;QACFA,MAAM,CAACR,KAAK,CAACY,IAAI,CACfC,GAAG,CAAC,kBAAkB,CAAC,CACvBX,GAAG,CACH,sBAAsB,EACtBR,oBAAoB,CAACc,MAAM,EAAE,WAAW,CAAC,CACzC;QAEFA,MAAM,CAACR,KAAK,CAACc,UAAU,CACrBD,GAAG,CAAC,iBAAiB,CAAC,CACtBX,GAAG,CACH,sBAAsB,EACtBR,oBAAoB,CAACc,MAAM,EAAEO,IAAI,CAACC,SAAS,CAAC,OAAO,CAAC,CAAC,CACrD;QACFR,MAAM,CAACR,KAAK,CAACc,UAAU,CACrBD,GAAG,CAAC,mBAAmB,CAAC,CACxBX,GAAG,CACH,sBAAsB,EACtBR,oBAAoB,CACnBc,MAAM,EACNjB,cAAc,CAAC0B,oBAAoB,EACnC,CAAC1B,cAAc,CAAC0B,oBAAoB,CAAC,CACrC,CACD;MACH,CAAC;MACDd,mBAAmB,CAACH,KAAK,CAACQ,MAAM,CAC9BK,GAAG,CAAC,iBAAiB,CAAC,CACtBX,GAAG,CAAC,sBAAsB,EAAEK,OAAO,CAAC;MACtCJ,mBAAmB,CAACH,KAAK,CAACQ,MAAM,CAC9BK,GAAG,CAAC,oBAAoB,CAAC,CACzBX,GAAG,CAAC,sBAAsB,EAAEK,OAAO,CAAC;IACvC,CAAC,CACD;EACF;AACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}