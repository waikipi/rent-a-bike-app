{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galia\\\\OneDrive\\\\Escritorio\\\\rent-a-bike-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*import Bikes from './components/Bikes'\nimport { Component } from 'react';\nimport CartBox from './components/CartBox';\n  \nclass App extends Component{\n\n\tstate = {\n\t\tbikes: [\n\t\t{time: '09:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true},\n\t\t{time: '10:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true},\n\t\t{time: '11:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true},\n\t\t{time: '12:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true},\n\t\t{time: '13:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true},\n\t\t{time: '14:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true},\n\t\t{time: '15:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true},\n\t\t{time: '16:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true}],\n\t\tcart: [],\n\t\tisCartVisible: false,\n\t\ttotalPrice: 0\n\t}\n\n\trunOutStock = (bike) => {\n\t\tconst styles = {\n\t\t\tbike: {\n\t\t\t\tposition: 'relative',\n\t\t\t\tbackgroundColor: '#FCFCFC',\n\t\t\t\tborder: 'solid 1px grey',\n\t\t\t\tmarginTop: 10,\n\t\t\t\tmarginLeft: 50,\n\t\t\t\tboxShadow: '1px 5px 5px rgb(0,0,0,0.3)',\n\t\t\t\tborderRadius: '5px',\n\t\t\t\twidth: '600px',\n\t\t\t\theight: '50px',\n\t\t\t\tdisplay: 'flex',\n\t\t\t\talignItems: 'center'\n\t\t\t}\n\t\t}\n\t\tif(bike.stock === 0){\n\t\t\treturn {...styles.bike, border: 'solid 3px red'}\n\t\t}\n\t\treturn ({...styles.bike})\n\t}\n\n\taddToCart = (bike) => {\n\t\tconst {cart, totalPrice} = this.state\n\t\tif(bike.stock <= 1){\n\t\t\tbike.isButtonVisible = false\n\t\t}\n\t\t\n\t\tif(cart.find(element => element.time === bike.time)){\n\t\t\tif(bike.stock > 0){\n\t\t\t\tconst newCart = cart.map(element => element.time === bike.time ? \n\t\t\t\t\t({...element, quantity: element.quantity + 1, isBikeInCart:true}) : element)\n\t\t\t\treturn this.setState({cart: newCart, totalPrice: totalPrice + 10}) \n\t\t\t}\t\t\n\t\t}\n\t\treturn this.setState({cart: this.state.cart.concat({...bike, stock: bike.stock - 1, quantity: 1}), totalPrice: totalPrice + 10})\n\t}\n\n\tupdateStock = (bike) => {\n\t\tconst {bikes} = this.state\n\t\tif(bikes.find(element => element.time === bike.time)){\n\t\t\tconst newStock = bikes.map(element => element.time === bike.time ? \n\t\t\t\t({...element, stock: element.stock - 1}) : element)\n\t\t\treturn this.setState({bikes: newStock}) \n\t\t}\n\t}\n\n\tshowCart = () => {\t\n\t\tthis.setState({isCartVisible:true})\t\n\t}\n\n\tdeleteBike = (cartBike) => {\n\t\tlet {cart, totalPrice} = this.state\n\t\t\n\t\tconst indexBike = cart.indexOf(cartBike)\n\t\tcart.splice(indexBike, 1)\n\t\t\n\t\tconst {bikes} = this.state\n\t\tif(bikes.find(element => element.time === cartBike.time)){\n\t\t\tconst replaceStock = bikes.map(element => element.time === cartBike.time ? \n\t\t\t\t({...element, stock: 8, isButtonVisible: true}) : element)\n\t\t\t\tthis.setState({bikes: replaceStock, totalPrice: totalPrice - (10 * cartBike.quantity)}) \t\t\n\t\t}\n\t\tcartBike.quantity = 0;\n\t\tif(!cart.length) this.setState({isCartVisible: false})\t\n\t}\n\n\n\trender(){\n\t\tconst {isCartVisible, totalPrice} = this.state\n\t\tconst {cartBike} = this.props\n\t\t\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{isCartVisible?<CartBox \n\t\t\t\tcart={this.state.cart}\n\t\t\t\tshowCart={this.state.showCart}\n\t\t\t\tisCartVisible={this.state.isCartVisible}\n\t\t\t\tdeleteBike={this.deleteBike}\n\t\t\t\tisBikeInCart={this.state.isBikeInCart}\n\t\t\t\tcartBike={cartBike}\n\t\t\t\ttotalPrice={totalPrice}/>:null}\n\n\t\t\t\t<Bikes\n\t\t\t\taddToCart = {this.addToCart}\n\t\t\t\tshowCart = {this.showCart}\n\t\t\t\tbikes = {this.state.bikes}\n\t\t\t\tupdateStock = {this.updateStock}\n\t\t\t\tisButtonVisible = {this.state.isButtonVisible}\n\t\t\t\tisBikeInCart = {this.state.isBikeInCart}\n\t\t\t\trunOutStock = {this.runOutStock}\n\t\t\t\t/>\n\n\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\t\t)\n\t}\n}\n\nexport default App*/\n\nimport React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport CheckoutForm from \"./CheckoutForm\";\nimport \"./App.css\";\n\n// Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// This is your test publishable API key.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(\"pk_test_51MLyLWJDKVz9SMmjW6sFyIGxCdbJWHvoNtVCTgv6lP5Ct1fyDvJAkGXTy8JrptI3DFVONCY5TpW138I0pD7ykRLX00qoCV9YGx\");\nexport default function App() {\n  _s();\n  const [clientSecret, setClientSecret] = useState(\"\");\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    fetch(\"/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        items: [{\n          id: \"xl-tshirt\"\n        }]\n      })\n    }).then(res => res.json()).then(data => setClientSecret(data.clientSecret));\n  }, []);\n  const appearance = {\n    theme: 'stripe'\n  };\n  const options = {\n    clientSecret,\n    appearance\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: clientSecret && /*#__PURE__*/_jsxDEV(Elements, {\n      options: options,\n      stripe: stripePromise,\n      children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jqw4P0KD6AlEQm6tlb46UlrlFAA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","loadStripe","Elements","CheckoutForm","stripePromise","App","clientSecret","setClientSecret","fetch","method","headers","body","JSON","stringify","items","id","then","res","json","data","appearance","theme","options"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/src/App.js"],"sourcesContent":["/*import Bikes from './components/Bikes'\nimport { Component } from 'react';\nimport CartBox from './components/CartBox';\n  \nclass App extends Component{\n\n\tstate = {\n\t\tbikes: [\n\t\t{time: '09:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true},\n\t\t{time: '10:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true},\n\t\t{time: '11:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true},\n\t\t{time: '12:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true},\n\t\t{time: '13:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true},\n\t\t{time: '14:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true},\n\t\t{time: '15:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true},\n\t\t{time: '16:00', stock: 8, price: '10€', isButtonVisible: true, isBikeInCart: true}],\n\t\tcart: [],\n\t\tisCartVisible: false,\n\t\ttotalPrice: 0\n\t}\n\n\trunOutStock = (bike) => {\n\t\tconst styles = {\n\t\t\tbike: {\n\t\t\t\tposition: 'relative',\n\t\t\t\tbackgroundColor: '#FCFCFC',\n\t\t\t\tborder: 'solid 1px grey',\n\t\t\t\tmarginTop: 10,\n\t\t\t\tmarginLeft: 50,\n\t\t\t\tboxShadow: '1px 5px 5px rgb(0,0,0,0.3)',\n\t\t\t\tborderRadius: '5px',\n\t\t\t\twidth: '600px',\n\t\t\t\theight: '50px',\n\t\t\t\tdisplay: 'flex',\n\t\t\t\talignItems: 'center'\n\t\t\t}\n\t\t}\n\t\tif(bike.stock === 0){\n\t\t\treturn {...styles.bike, border: 'solid 3px red'}\n\t\t}\n\t\treturn ({...styles.bike})\n\t}\n\n\taddToCart = (bike) => {\n\t\tconst {cart, totalPrice} = this.state\n\t\tif(bike.stock <= 1){\n\t\t\tbike.isButtonVisible = false\n\t\t}\n\t\t\n\t\tif(cart.find(element => element.time === bike.time)){\n\t\t\tif(bike.stock > 0){\n\t\t\t\tconst newCart = cart.map(element => element.time === bike.time ? \n\t\t\t\t\t({...element, quantity: element.quantity + 1, isBikeInCart:true}) : element)\n\t\t\t\treturn this.setState({cart: newCart, totalPrice: totalPrice + 10}) \n\t\t\t}\t\t\n\t\t}\n\t\treturn this.setState({cart: this.state.cart.concat({...bike, stock: bike.stock - 1, quantity: 1}), totalPrice: totalPrice + 10})\n\t}\n\n\tupdateStock = (bike) => {\n\t\tconst {bikes} = this.state\n\t\tif(bikes.find(element => element.time === bike.time)){\n\t\t\tconst newStock = bikes.map(element => element.time === bike.time ? \n\t\t\t\t({...element, stock: element.stock - 1}) : element)\n\t\t\treturn this.setState({bikes: newStock}) \n\t\t}\n\t}\n\n\tshowCart = () => {\t\n\t\tthis.setState({isCartVisible:true})\t\n\t}\n\n\tdeleteBike = (cartBike) => {\n\t\tlet {cart, totalPrice} = this.state\n\t\t\n\t\tconst indexBike = cart.indexOf(cartBike)\n\t\tcart.splice(indexBike, 1)\n\t\t\n\t\tconst {bikes} = this.state\n\t\tif(bikes.find(element => element.time === cartBike.time)){\n\t\t\tconst replaceStock = bikes.map(element => element.time === cartBike.time ? \n\t\t\t\t({...element, stock: 8, isButtonVisible: true}) : element)\n\t\t\t\tthis.setState({bikes: replaceStock, totalPrice: totalPrice - (10 * cartBike.quantity)}) \t\t\n\t\t}\n\t\tcartBike.quantity = 0;\n\t\tif(!cart.length) this.setState({isCartVisible: false})\t\n\t}\n\n\n\trender(){\n\t\tconst {isCartVisible, totalPrice} = this.state\n\t\tconst {cartBike} = this.props\n\t\t\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{isCartVisible?<CartBox \n\t\t\t\tcart={this.state.cart}\n\t\t\t\tshowCart={this.state.showCart}\n\t\t\t\tisCartVisible={this.state.isCartVisible}\n\t\t\t\tdeleteBike={this.deleteBike}\n\t\t\t\tisBikeInCart={this.state.isBikeInCart}\n\t\t\t\tcartBike={cartBike}\n\t\t\t\ttotalPrice={totalPrice}/>:null}\n\n\t\t\t\t<Bikes\n\t\t\t\taddToCart = {this.addToCart}\n\t\t\t\tshowCart = {this.showCart}\n\t\t\t\tbikes = {this.state.bikes}\n\t\t\t\tupdateStock = {this.updateStock}\n\t\t\t\tisButtonVisible = {this.state.isButtonVisible}\n\t\t\t\tisBikeInCart = {this.state.isBikeInCart}\n\t\t\t\trunOutStock = {this.runOutStock}\n\t\t\t\t/>\n\n\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\t\t)\n\t}\n}\n\nexport default App*/\n\nimport React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\n\nimport CheckoutForm from \"./CheckoutForm\";\nimport \"./App.css\";\n\n// Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// This is your test publishable API key.\nconst stripePromise = loadStripe(\"pk_test_51MLyLWJDKVz9SMmjW6sFyIGxCdbJWHvoNtVCTgv6lP5Ct1fyDvJAkGXTy8JrptI3DFVONCY5TpW138I0pD7ykRLX00qoCV9YGx\");\n\nexport default function App() {\n  const [clientSecret, setClientSecret] = useState(\"\");\n\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    fetch(\"/create-payment-intent\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ items: [{ id: \"xl-tshirt\" }] }),\n    })\n      .then((res) => res.json())\n      .then((data) => setClientSecret(data.clientSecret));\n  }, []);\n\n  const appearance = {\n    theme: 'stripe',\n  };\n  const options = {\n    clientSecret,\n    appearance,\n  };\n\n  return (\n    <div className=\"App\">\n      {clientSecret && (\n        <Elements options={options} stripe={stripePromise}>\n          <CheckoutForm />\n        </Elements>\n      )}\n    </div>\n  );\n}\n\n\n"],"mappingslD,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,QAAQ,QAAQ,yBAAyB;AAElD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,WAAW;;AAElB;AACA;AACA;AAAA;AACA,MAAMC,aAAa,GAAGH,UAAU,CAAC,6GAA6G,CAAC;AAE/I,eAAe,SAASI,GAAG,GAAG;EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,wBAAwB,EAAE;MAC9BC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAE,CAAC;UAAEC,EAAE,EAAE;QAAY,CAAC;MAAE,CAAC;IACvD,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKZ,eAAe,CAACY,IAAI,CAACb,YAAY,CAAC,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,UAAU,GAAG;IACjBC,KAAK,EAAE;EACT,CAAC;EACD,MAAMC,OAAO,GAAG;IACdhB,YAAY;IACZc;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,UACjBd,YAAY,iBACX,QAAC,QAAQ;MAAC,OAAO,EAAEgB,OAAQ;MAAC,MAAM,EAAElB,aAAc;MAAA,uBAChD,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EAEnB;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GA/BuBC,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}