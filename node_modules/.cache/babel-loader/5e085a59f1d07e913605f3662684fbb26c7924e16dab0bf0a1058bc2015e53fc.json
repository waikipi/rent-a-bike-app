{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\nclass LocalModuleDependency extends NullDependency {\n  constructor(localModule, range, callNew) {\n    super();\n    this.localModule = localModule;\n    this.range = range;\n    this.callNew = callNew;\n  }\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.localModule);\n    write(this.range);\n    write(this.callNew);\n    super.serialize(context);\n  }\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.localModule = read();\n    this.range = read();\n    this.callNew = read();\n    super.deserialize(context);\n  }\n}\nmakeSerializable(LocalModuleDependency, \"webpack/lib/dependencies/LocalModuleDependency\");\nLocalModuleDependency.Template = class LocalModuleDependencyTemplate extends NullDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, templateContext) {\n    const dep = /** @type {LocalModuleDependency} */dependency;\n    if (!dep.range) return;\n    const moduleInstance = dep.callNew ? `new (function () { return ${dep.localModule.variableName()}; })()` : dep.localModule.variableName();\n    source.replace(dep.range[0], dep.range[1] - 1, moduleInstance);\n  }\n};\nmodule.exports = LocalModuleDependency;","map":{"version":3,"names":["makeSerializable","require","NullDependency","LocalModuleDependency","constructor","localModule","range","callNew","serialize","context","write","deserialize","read","Template","LocalModuleDependencyTemplate","apply","dependency","source","templateContext","dep","moduleInstance","variableName","replace","module","exports"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/webpack/lib/dependencies/LocalModuleDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\nclass LocalModuleDependency extends NullDependency {\n\tconstructor(localModule, range, callNew) {\n\t\tsuper();\n\n\t\tthis.localModule = localModule;\n\t\tthis.range = range;\n\t\tthis.callNew = callNew;\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.localModule);\n\t\twrite(this.range);\n\t\twrite(this.callNew);\n\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.localModule = read();\n\t\tthis.range = read();\n\t\tthis.callNew = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tLocalModuleDependency,\n\t\"webpack/lib/dependencies/LocalModuleDependency\"\n);\n\nLocalModuleDependency.Template = class LocalModuleDependencyTemplate extends (\n\tNullDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tconst dep = /** @type {LocalModuleDependency} */ (dependency);\n\t\tif (!dep.range) return;\n\t\tconst moduleInstance = dep.callNew\n\t\t\t? `new (function () { return ${dep.localModule.variableName()}; })()`\n\t\t\t: dep.localModule.variableName();\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, moduleInstance);\n\t}\n};\n\nmodule.exports = LocalModuleDependency;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAC5D,MAAMC,cAAc,GAAGD,OAAO,CAAC,kBAAkB,CAAC;;AAElD;AACA;AACA;;AAEA,MAAME,qBAAqB,SAASD,cAAc,CAAC;EAClDE,WAAW,CAACC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAE;IACxC,KAAK,EAAE;IAEP,IAAI,CAACF,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,OAAO,GAAGA,OAAO;EACvB;EAEAC,SAAS,CAACC,OAAO,EAAE;IAClB,MAAM;MAAEC;IAAM,CAAC,GAAGD,OAAO;IAEzBC,KAAK,CAAC,IAAI,CAACL,WAAW,CAAC;IACvBK,KAAK,CAAC,IAAI,CAACJ,KAAK,CAAC;IACjBI,KAAK,CAAC,IAAI,CAACH,OAAO,CAAC;IAEnB,KAAK,CAACC,SAAS,CAACC,OAAO,CAAC;EACzB;EAEAE,WAAW,CAACF,OAAO,EAAE;IACpB,MAAM;MAAEG;IAAK,CAAC,GAAGH,OAAO;IAExB,IAAI,CAACJ,WAAW,GAAGO,IAAI,EAAE;IACzB,IAAI,CAACN,KAAK,GAAGM,IAAI,EAAE;IACnB,IAAI,CAACL,OAAO,GAAGK,IAAI,EAAE;IAErB,KAAK,CAACD,WAAW,CAACF,OAAO,CAAC;EAC3B;AACD;AAEAT,gBAAgB,CACfG,qBAAqB,EACrB,gDAAgD,CAChD;AAEDA,qBAAqB,CAACU,QAAQ,GAAG,MAAMC,6BAA6B,SACnEZ,cAAc,CAACW,QAAQ,CACtB;EACD;AACD;AACA;AACA;AACA;AACA;EACCE,KAAK,CAACC,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAE;IAC1C,MAAMC,GAAG,GAAG,oCAAsCH,UAAW;IAC7D,IAAI,CAACG,GAAG,CAACb,KAAK,EAAE;IAChB,MAAMc,cAAc,GAAGD,GAAG,CAACZ,OAAO,GAC9B,6BAA4BY,GAAG,CAACd,WAAW,CAACgB,YAAY,EAAG,QAAO,GACnEF,GAAG,CAACd,WAAW,CAACgB,YAAY,EAAE;IACjCJ,MAAM,CAACK,OAAO,CAACH,GAAG,CAACb,KAAK,CAAC,CAAC,CAAC,EAAEa,GAAG,CAACb,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAEc,cAAc,CAAC;EAC/D;AACD,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAGrB,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}