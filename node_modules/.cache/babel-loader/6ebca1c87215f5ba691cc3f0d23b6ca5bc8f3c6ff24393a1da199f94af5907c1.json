{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\nconst NormalModule = require(\"./NormalModule\");\nconst createSchemaValidation = require(\"./util/create-schema-validation\");\n\n/** @typedef {import(\"../declarations/plugins/LoaderOptionsPlugin\").LoaderOptionsPluginOptions} LoaderOptionsPluginOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(require(\"../schemas/plugins/LoaderOptionsPlugin.check.js\"), () => require(\"../schemas/plugins/LoaderOptionsPlugin.json\"), {\n  name: \"Loader Options Plugin\",\n  baseDataPath: \"options\"\n});\nclass LoaderOptionsPlugin {\n  /**\n   * @param {LoaderOptionsPluginOptions} options options object\n   */\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    validate(options);\n    if (typeof options !== \"object\") options = {};\n    if (!options.test) {\n      options.test = {\n        test: () => true\n      };\n    }\n    this.options = options;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    const options = this.options;\n    compiler.hooks.compilation.tap(\"LoaderOptionsPlugin\", compilation => {\n      NormalModule.getCompilationHooks(compilation).loader.tap(\"LoaderOptionsPlugin\", (context, module) => {\n        const resource = module.resource;\n        if (!resource) return;\n        const i = resource.indexOf(\"?\");\n        if (ModuleFilenameHelpers.matchObject(options, i < 0 ? resource : resource.slice(0, i))) {\n          for (const key of Object.keys(options)) {\n            if (key === \"include\" || key === \"exclude\" || key === \"test\") {\n              continue;\n            }\n            context[key] = options[key];\n          }\n        }\n      });\n    });\n  }\n}\nmodule.exports = LoaderOptionsPlugin;","map":{"version":3,"names":["ModuleFilenameHelpers","require","NormalModule","createSchemaValidation","validate","name","baseDataPath","LoaderOptionsPlugin","constructor","options","test","apply","compiler","hooks","compilation","tap","getCompilationHooks","loader","context","module","resource","i","indexOf","matchObject","slice","key","Object","keys","exports"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/webpack/lib/LoaderOptionsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\nconst NormalModule = require(\"./NormalModule\");\nconst createSchemaValidation = require(\"./util/create-schema-validation\");\n\n/** @typedef {import(\"../declarations/plugins/LoaderOptionsPlugin\").LoaderOptionsPluginOptions} LoaderOptionsPluginOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(\n\trequire(\"../schemas/plugins/LoaderOptionsPlugin.check.js\"),\n\t() => require(\"../schemas/plugins/LoaderOptionsPlugin.json\"),\n\t{\n\t\tname: \"Loader Options Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\nclass LoaderOptionsPlugin {\n\t/**\n\t * @param {LoaderOptionsPluginOptions} options options object\n\t */\n\tconstructor(options = {}) {\n\t\tvalidate(options);\n\t\tif (typeof options !== \"object\") options = {};\n\t\tif (!options.test) {\n\t\t\toptions.test = {\n\t\t\t\ttest: () => true\n\t\t\t};\n\t\t}\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\"LoaderOptionsPlugin\", compilation => {\n\t\t\tNormalModule.getCompilationHooks(compilation).loader.tap(\n\t\t\t\t\"LoaderOptionsPlugin\",\n\t\t\t\t(context, module) => {\n\t\t\t\t\tconst resource = module.resource;\n\t\t\t\t\tif (!resource) return;\n\t\t\t\t\tconst i = resource.indexOf(\"?\");\n\t\t\t\t\tif (\n\t\t\t\t\t\tModuleFilenameHelpers.matchObject(\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\ti < 0 ? resource : resource.slice(0, i)\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfor (const key of Object.keys(options)) {\n\t\t\t\t\t\t\tif (key === \"include\" || key === \"exclude\" || key === \"test\") {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontext[key] = options[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = LoaderOptionsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,qBAAqB,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAChE,MAAMC,YAAY,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC9C,MAAME,sBAAsB,GAAGF,OAAO,CAAC,iCAAiC,CAAC;;AAEzE;AACA;;AAEA,MAAMG,QAAQ,GAAGD,sBAAsB,CACtCF,OAAO,CAAC,iDAAiD,CAAC,EAC1D,MAAMA,OAAO,CAAC,6CAA6C,CAAC,EAC5D;EACCI,IAAI,EAAE,uBAAuB;EAC7BC,YAAY,EAAE;AACf,CAAC,CACD;AACD,MAAMC,mBAAmB,CAAC;EACzB;AACD;AACA;EACCC,WAAW,GAAe;IAAA,IAAdC,OAAO,uEAAG,CAAC,CAAC;IACvBL,QAAQ,CAACK,OAAO,CAAC;IACjB,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAEA,OAAO,GAAG,CAAC,CAAC;IAC7C,IAAI,CAACA,OAAO,CAACC,IAAI,EAAE;MAClBD,OAAO,CAACC,IAAI,GAAG;QACdA,IAAI,EAAE,MAAM;MACb,CAAC;IACF;IACA,IAAI,CAACD,OAAO,GAAGA,OAAO;EACvB;;EAEA;AACD;AACA;AACA;AACA;EACCE,KAAK,CAACC,QAAQ,EAAE;IACf,MAAMH,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5BG,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,qBAAqB,EAAED,WAAW,IAAI;MACpEZ,YAAY,CAACc,mBAAmB,CAACF,WAAW,CAAC,CAACG,MAAM,CAACF,GAAG,CACvD,qBAAqB,EACrB,CAACG,OAAO,EAAEC,MAAM,KAAK;QACpB,MAAMC,QAAQ,GAAGD,MAAM,CAACC,QAAQ;QAChC,IAAI,CAACA,QAAQ,EAAE;QACf,MAAMC,CAAC,GAAGD,QAAQ,CAACE,OAAO,CAAC,GAAG,CAAC;QAC/B,IACCtB,qBAAqB,CAACuB,WAAW,CAChCd,OAAO,EACPY,CAAC,GAAG,CAAC,GAAGD,QAAQ,GAAGA,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAEH,CAAC,CAAC,CACvC,EACA;UACD,KAAK,MAAMI,GAAG,IAAIC,MAAM,CAACC,IAAI,CAAClB,OAAO,CAAC,EAAE;YACvC,IAAIgB,GAAG,KAAK,SAAS,IAAIA,GAAG,KAAK,SAAS,IAAIA,GAAG,KAAK,MAAM,EAAE;cAC7D;YACD;YACAP,OAAO,CAACO,GAAG,CAAC,GAAGhB,OAAO,CAACgB,GAAG,CAAC;UAC5B;QACD;MACD,CAAC,CACD;IACF,CAAC,CAAC;EACH;AACD;AAEAN,MAAM,CAACS,OAAO,GAAGrB,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}