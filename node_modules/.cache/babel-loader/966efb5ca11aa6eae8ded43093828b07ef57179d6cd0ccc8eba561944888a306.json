{"ast":null,"code":"'use strict';\n\nconst crypto = require('crypto');\nconst CryptoProvider = require('./CryptoProvider');\n/**\n * `CryptoProvider which uses the Node `crypto` package for its computations.\n */\nclass NodeCryptoProvider extends CryptoProvider {\n  /** @override */\n  computeHMACSignature(payload, secret) {\n    return crypto.createHmac('sha256', secret).update(payload, 'utf8').digest('hex');\n  }\n  /** @override */\n  async computeHMACSignatureAsync(payload, secret) {\n    const signature = await this.computeHMACSignature(payload, secret);\n    return signature;\n  }\n}\nmodule.exports = NodeCryptoProvider;","map":{"version":3,"names":["crypto","require","CryptoProvider","NodeCryptoProvider","computeHMACSignature","payload","secret","createHmac","update","digest","computeHMACSignatureAsync","signature","module","exports"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/stripe/lib/crypto/NodeCryptoProvider.js"],"sourcesContent":["'use strict';\nconst crypto = require('crypto');\nconst CryptoProvider = require('./CryptoProvider');\n/**\n * `CryptoProvider which uses the Node `crypto` package for its computations.\n */\nclass NodeCryptoProvider extends CryptoProvider {\n  /** @override */\n  computeHMACSignature(payload, secret) {\n    return crypto\n      .createHmac('sha256', secret)\n      .update(payload, 'utf8')\n      .digest('hex');\n  }\n  /** @override */\n  async computeHMACSignatureAsync(payload, secret) {\n    const signature = await this.computeHMACSignature(payload, secret);\n    return signature;\n  }\n}\nmodule.exports = NodeCryptoProvider;\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,cAAc,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAClD;AACA;AACA;AACA,MAAME,kBAAkB,SAASD,cAAc,CAAC;EAC9C;EACAE,oBAAoB,CAACC,OAAO,EAAEC,MAAM,EAAE;IACpC,OAAON,MAAM,CACVO,UAAU,CAAC,QAAQ,EAAED,MAAM,CAAC,CAC5BE,MAAM,CAACH,OAAO,EAAE,MAAM,CAAC,CACvBI,MAAM,CAAC,KAAK,CAAC;EAClB;EACA;EACA,MAAMC,yBAAyB,CAACL,OAAO,EAAEC,MAAM,EAAE;IAC/C,MAAMK,SAAS,GAAG,MAAM,IAAI,CAACP,oBAAoB,CAACC,OAAO,EAAEC,MAAM,CAAC;IAClE,OAAOK,SAAS;EAClB;AACF;AACAC,MAAM,CAACC,OAAO,GAAGV,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}