{"ast":null,"code":"const webpack = require('webpack');\nmodule.exports = function override(config) {\n  const fallback = config.resolve.fallback || {};\n  Object.assign(fallback, {\n    \"crypto\": require.resolve(\"crypto-browserify\"),\n    \"stream\": require.resolve(\"stream-browserify\"),\n    \"zlib\": require.resolve(\"browserify-zlib\"),\n    \"http\": require.resolve(\"stream-http\"),\n    \"querystring\": require.resolve(\"querystring-es3\"),\n    \"path\": require.resolve(\"path-browserify\"),\n    \"url\": require.resolve(\"url\"),\n    \"util\": require.resolve(\"util\")\n  });\n  config.resolve.fallback = fallback;\n  config.plugins = (config.plugins || []).concat([new webpack.ProvidePlugin({\n    process: 'process/browser',\n    Buffer: ['buffer', 'Buffer']\n  })]);\n  return config;\n};\n\n/*module.exports = {\r\n\tresolve: {\r\n\t\tfallback: {\r\n\t\t\tutil: require.resolve(\"util\"),\r\n\t\t\turl: require.resolve(\"url\"),\r\n\t\t\tpath: require.resolve(\"path-browserify\"),\r\n\t\t\tcrypto: require.resolve(\"crypto-browserify\"),\r\n\t\t\tstream: require.resolve(\"stream-browserify\"), \r\n\t\t\tzlib: require.resolve(\"browserify-zlib\"),\r\n\t\t\thttp: require.resolve(\"stream-http\"), \r\n\t\t\tquerystring: require.resolve(\"querystring-es3\"), \r\n\t\t}\r\n\t}\r\n}*/","map":{"version":3,"names":["webpack","require","module","exports","override","config","fallback","resolve","Object","assign","plugins","concat","ProvidePlugin","process","Buffer"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/src/config-overrides.js"],"sourcesContent":["const webpack = require('webpack'); \r\nmodule.exports = function override(config) { \r\n\t\tconst fallback = config.resolve.fallback || {}; \r\n\t\tObject.assign(fallback, { \r\n    \t\"crypto\": require.resolve(\"crypto-browserify\"), \r\n\t\t\"stream\": require.resolve(\"stream-browserify\"), \r\n\t\t\"zlib\": require.resolve(\"browserify-zlib\"), \r\n\t\t\"http\": require.resolve(\"stream-http\"), \r\n\t\t\"querystring\": require.resolve(\"querystring-es3\"), \r\n\t\t\"path\": require.resolve(\"path-browserify\"), \r\n\t\t\"url\": require.resolve(\"url\"), \r\n\t\t\"util\": require.resolve(\"util\") \r\n      }) \r\n   config.resolve.fallback = fallback; \r\n   config.plugins = (config.plugins || []).concat([ \r\n   \tnew webpack.ProvidePlugin({ \r\n    \tprocess: 'process/browser', \r\n      Buffer: ['buffer', 'Buffer'] \r\n    }) \r\n   ]) \r\n   return config; }\r\n\r\n\r\n/*module.exports = {\r\n\tresolve: {\r\n\t\tfallback: {\r\n\t\t\tutil: require.resolve(\"util\"),\r\n\t\t\turl: require.resolve(\"url\"),\r\n\t\t\tpath: require.resolve(\"path-browserify\"),\r\n\t\t\tcrypto: require.resolve(\"crypto-browserify\"),\r\n\t\t\tstream: require.resolve(\"stream-browserify\"), \r\n\t\t\tzlib: require.resolve(\"browserify-zlib\"),\r\n\t\t\thttp: require.resolve(\"stream-http\"), \r\n\t\t\tquerystring: require.resolve(\"querystring-es3\"), \r\n\t\t}\r\n\t}\r\n}*/\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClCC,MAAM,CAACC,OAAO,GAAG,SAASC,QAAQ,CAACC,MAAM,EAAE;EACzC,MAAMC,QAAQ,GAAGD,MAAM,CAACE,OAAO,CAACD,QAAQ,IAAI,CAAC,CAAC;EAC9CE,MAAM,CAACC,MAAM,CAACH,QAAQ,EAAE;IACrB,QAAQ,EAAEL,OAAO,CAACM,OAAO,CAAC,mBAAmB,CAAC;IACjD,QAAQ,EAAEN,OAAO,CAACM,OAAO,CAAC,mBAAmB,CAAC;IAC9C,MAAM,EAAEN,OAAO,CAACM,OAAO,CAAC,iBAAiB,CAAC;IAC1C,MAAM,EAAEN,OAAO,CAACM,OAAO,CAAC,aAAa,CAAC;IACtC,aAAa,EAAEN,OAAO,CAACM,OAAO,CAAC,iBAAiB,CAAC;IACjD,MAAM,EAAEN,OAAO,CAACM,OAAO,CAAC,iBAAiB,CAAC;IAC1C,KAAK,EAAEN,OAAO,CAACM,OAAO,CAAC,KAAK,CAAC;IAC7B,MAAM,EAAEN,OAAO,CAACM,OAAO,CAAC,MAAM;EAC1B,CAAC,CAAC;EACLF,MAAM,CAACE,OAAO,CAACD,QAAQ,GAAGA,QAAQ;EAClCD,MAAM,CAACK,OAAO,GAAG,CAACL,MAAM,CAACK,OAAO,IAAI,EAAE,EAAEC,MAAM,CAAC,CAC9C,IAAIX,OAAO,CAACY,aAAa,CAAC;IACzBC,OAAO,EAAE,iBAAiB;IACzBC,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ;EAC7B,CAAC,CAAC,CACF,CAAC;EACF,OAAOT,MAAM;AAAE,CAAC;;AAGnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}