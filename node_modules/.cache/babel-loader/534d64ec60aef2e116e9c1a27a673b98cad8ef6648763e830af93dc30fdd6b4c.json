{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  ConcatSource\n} = require(\"webpack-sources\");\nconst HotUpdateChunk = require(\"../HotUpdateChunk\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst SelfModuleFactory = require(\"../SelfModuleFactory\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst {\n  compareModulesByIdentifier\n} = require(\"../util/comparators\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst createHash = require(\"../util/createHash\");\nconst memoize = require(\"../util/memoize\");\nconst nonNumericOnlyHash = require(\"../util/nonNumericOnlyHash\");\nconst CssExportsGenerator = require(\"./CssExportsGenerator\");\nconst CssGenerator = require(\"./CssGenerator\");\nconst CssParser = require(\"./CssParser\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").CssExperimentOptions} CssExperimentOptions */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nconst getCssLoadingRuntimeModule = memoize(() => require(\"./CssLoadingRuntimeModule\"));\nconst getSchema = name => {\n  const {\n    definitions\n  } = require(\"../../schemas/WebpackOptions.json\");\n  return {\n    definitions,\n    oneOf: [{\n      $ref: `#/definitions/${name}`\n    }]\n  };\n};\nconst validateGeneratorOptions = createSchemaValidation(require(\"../../schemas/plugins/css/CssGeneratorOptions.check.js\"), () => getSchema(\"CssGeneratorOptions\"), {\n  name: \"Css Modules Plugin\",\n  baseDataPath: \"parser\"\n});\nconst validateParserOptions = createSchemaValidation(require(\"../../schemas/plugins/css/CssParserOptions.check.js\"), () => getSchema(\"CssParserOptions\"), {\n  name: \"Css Modules Plugin\",\n  baseDataPath: \"parser\"\n});\nconst escapeCss = (str, omitOptionalUnderscore) => {\n  const escaped = `${str}`.replace(\n  // cspell:word uffff\n  /[^a-zA-Z0-9_\\u0081-\\uffff-]/g, s => `\\\\${s}`);\n  return !omitOptionalUnderscore && /^(?!--)[0-9_-]/.test(escaped) ? `_${escaped}` : escaped;\n};\nconst plugin = \"CssModulesPlugin\";\nclass CssModulesPlugin {\n  /**\n   * @param {CssExperimentOptions} options options\n   */\n  constructor(_ref) {\n    let {\n      exportsOnly = false\n    } = _ref;\n    this._exportsOnly = exportsOnly;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(plugin, (compilation, _ref2) => {\n      let {\n        normalModuleFactory\n      } = _ref2;\n      const selfFactory = new SelfModuleFactory(compilation.moduleGraph);\n      compilation.dependencyFactories.set(CssUrlDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(CssUrlDependency, new CssUrlDependency.Template());\n      compilation.dependencyTemplates.set(CssLocalIdentifierDependency, new CssLocalIdentifierDependency.Template());\n      compilation.dependencyFactories.set(CssSelfLocalIdentifierDependency, selfFactory);\n      compilation.dependencyTemplates.set(CssSelfLocalIdentifierDependency, new CssSelfLocalIdentifierDependency.Template());\n      compilation.dependencyTemplates.set(CssExportDependency, new CssExportDependency.Template());\n      compilation.dependencyFactories.set(CssImportDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(CssImportDependency, new CssImportDependency.Template());\n      compilation.dependencyTemplates.set(StaticExportsDependency, new StaticExportsDependency.Template());\n      normalModuleFactory.hooks.createParser.for(\"css\").tap(plugin, parserOptions => {\n        validateParserOptions(parserOptions);\n        return new CssParser();\n      });\n      normalModuleFactory.hooks.createParser.for(\"css/global\").tap(plugin, parserOptions => {\n        validateParserOptions(parserOptions);\n        return new CssParser({\n          allowPseudoBlocks: false,\n          allowModeSwitch: false\n        });\n      });\n      normalModuleFactory.hooks.createParser.for(\"css/module\").tap(plugin, parserOptions => {\n        validateParserOptions(parserOptions);\n        return new CssParser({\n          defaultMode: \"local\"\n        });\n      });\n      normalModuleFactory.hooks.createGenerator.for(\"css\").tap(plugin, generatorOptions => {\n        validateGeneratorOptions(generatorOptions);\n        return this._exportsOnly ? new CssExportsGenerator() : new CssGenerator();\n      });\n      normalModuleFactory.hooks.createGenerator.for(\"css/global\").tap(plugin, generatorOptions => {\n        validateGeneratorOptions(generatorOptions);\n        return this._exportsOnly ? new CssExportsGenerator() : new CssGenerator();\n      });\n      normalModuleFactory.hooks.createGenerator.for(\"css/module\").tap(plugin, generatorOptions => {\n        validateGeneratorOptions(generatorOptions);\n        return this._exportsOnly ? new CssExportsGenerator() : new CssGenerator();\n      });\n      const orderedCssModulesPerChunk = new WeakMap();\n      compilation.hooks.afterCodeGeneration.tap(\"CssModulesPlugin\", () => {\n        const {\n          chunkGraph\n        } = compilation;\n        for (const chunk of compilation.chunks) {\n          if (CssModulesPlugin.chunkHasCss(chunk, chunkGraph)) {\n            orderedCssModulesPerChunk.set(chunk, this.getOrderedChunkCssModules(chunk, chunkGraph, compilation));\n          }\n        }\n      });\n      compilation.hooks.contentHash.tap(\"CssModulesPlugin\", chunk => {\n        const {\n          chunkGraph,\n          outputOptions: {\n            hashSalt,\n            hashDigest,\n            hashDigestLength,\n            hashFunction\n          }\n        } = compilation;\n        const modules = orderedCssModulesPerChunk.get(chunk);\n        if (modules === undefined) return;\n        const hash = createHash(hashFunction);\n        if (hashSalt) hash.update(hashSalt);\n        for (const module of modules) {\n          hash.update(chunkGraph.getModuleHash(module, chunk.runtime));\n        }\n        const digest = /** @type {string} */hash.digest(hashDigest);\n        chunk.contentHash.css = nonNumericOnlyHash(digest, hashDigestLength);\n      });\n      compilation.hooks.renderManifest.tap(plugin, (result, options) => {\n        const {\n          chunkGraph\n        } = compilation;\n        const {\n          hash,\n          chunk,\n          codeGenerationResults\n        } = options;\n        if (chunk instanceof HotUpdateChunk) return result;\n        const modules = orderedCssModulesPerChunk.get(chunk);\n        if (modules !== undefined) {\n          result.push({\n            render: () => this.renderChunk({\n              chunk,\n              chunkGraph,\n              codeGenerationResults,\n              uniqueName: compilation.outputOptions.uniqueName,\n              modules\n            }),\n            filenameTemplate: CssModulesPlugin.getChunkFilenameTemplate(chunk, compilation.outputOptions),\n            pathOptions: {\n              hash,\n              runtime: chunk.runtime,\n              chunk,\n              contentHashType: \"css\"\n            },\n            identifier: `css${chunk.id}`,\n            hash: chunk.contentHash.css\n          });\n        }\n        return result;\n      });\n      const enabledChunks = new WeakSet();\n      const handler = (chunk, set) => {\n        if (enabledChunks.has(chunk)) {\n          return;\n        }\n        enabledChunks.add(chunk);\n        set.add(RuntimeGlobals.publicPath);\n        set.add(RuntimeGlobals.getChunkCssFilename);\n        set.add(RuntimeGlobals.hasOwnProperty);\n        set.add(RuntimeGlobals.moduleFactoriesAddOnly);\n        set.add(RuntimeGlobals.makeNamespaceObject);\n        const CssLoadingRuntimeModule = getCssLoadingRuntimeModule();\n        compilation.addRuntimeModule(chunk, new CssLoadingRuntimeModule(set));\n      };\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hasCssModules).tap(plugin, handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkHandlers).tap(plugin, handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hmrDownloadUpdateHandlers).tap(plugin, handler);\n    });\n  }\n  getModulesInOrder(chunk, modules, compilation) {\n    if (!modules) return [];\n    const modulesList = [...modules];\n\n    // Get ordered list of modules per chunk group\n    // Lists are in reverse order to allow to use Array.pop()\n    const modulesByChunkGroup = Array.from(chunk.groupsIterable, chunkGroup => {\n      const sortedModules = modulesList.map(module => {\n        return {\n          module,\n          index: chunkGroup.getModulePostOrderIndex(module)\n        };\n      }).filter(item => item.index !== undefined).sort((a, b) => b.index - a.index).map(item => item.module);\n      return {\n        list: sortedModules,\n        set: new Set(sortedModules)\n      };\n    });\n    if (modulesByChunkGroup.length === 1) return modulesByChunkGroup[0].list.reverse();\n    const compareModuleLists = (_ref3, _ref4) => {\n      let {\n        list: a\n      } = _ref3;\n      let {\n        list: b\n      } = _ref4;\n      if (a.length === 0) {\n        return b.length === 0 ? 0 : 1;\n      } else {\n        if (b.length === 0) return -1;\n        return compareModulesByIdentifier(a[a.length - 1], b[b.length - 1]);\n      }\n    };\n    modulesByChunkGroup.sort(compareModuleLists);\n    const finalModules = [];\n    for (;;) {\n      const failedModules = new Set();\n      const list = modulesByChunkGroup[0].list;\n      if (list.length === 0) {\n        // done, everything empty\n        break;\n      }\n      let selectedModule = list[list.length - 1];\n      let hasFailed = undefined;\n      outer: for (;;) {\n        for (const {\n          list,\n          set\n        } of modulesByChunkGroup) {\n          if (list.length === 0) continue;\n          const lastModule = list[list.length - 1];\n          if (lastModule === selectedModule) continue;\n          if (!set.has(selectedModule)) continue;\n          failedModules.add(selectedModule);\n          if (failedModules.has(lastModule)) {\n            // There is a conflict, try other alternatives\n            hasFailed = lastModule;\n            continue;\n          }\n          selectedModule = lastModule;\n          hasFailed = false;\n          continue outer; // restart\n        }\n\n        break;\n      }\n      if (hasFailed) {\n        // There is a not resolve-able conflict with the selectedModule\n        if (compilation) {\n          // TODO print better warning\n          compilation.warnings.push(new Error(`chunk ${chunk.name || chunk.id}\\nConflicting order between ${hasFailed.readableIdentifier(compilation.requestShortener)} and ${selectedModule.readableIdentifier(compilation.requestShortener)}`));\n        }\n        selectedModule = hasFailed;\n      }\n      // Insert the selected module into the final modules list\n      finalModules.push(selectedModule);\n      // Remove the selected module from all lists\n      for (const {\n        list,\n        set\n      } of modulesByChunkGroup) {\n        const lastModule = list[list.length - 1];\n        if (lastModule === selectedModule) list.pop();else if (hasFailed && set.has(selectedModule)) {\n          const idx = list.indexOf(selectedModule);\n          if (idx >= 0) list.splice(idx, 1);\n        }\n      }\n      modulesByChunkGroup.sort(compareModuleLists);\n    }\n    return finalModules;\n  }\n  getOrderedChunkCssModules(chunk, chunkGraph, compilation) {\n    return [...this.getModulesInOrder(chunk, chunkGraph.getOrderedChunkModulesIterableBySourceType(chunk, \"css-import\", compareModulesByIdentifier), compilation), ...this.getModulesInOrder(chunk, chunkGraph.getOrderedChunkModulesIterableBySourceType(chunk, \"css\", compareModulesByIdentifier), compilation)];\n  }\n  renderChunk(_ref5) {\n    let {\n      uniqueName,\n      chunk,\n      chunkGraph,\n      codeGenerationResults,\n      modules\n    } = _ref5;\n    const source = new ConcatSource();\n    const metaData = [];\n    for (const module of modules) {\n      try {\n        const codeGenResult = codeGenerationResults.get(module, chunk.runtime);\n        const s = codeGenResult.sources.get(\"css\") || codeGenResult.sources.get(\"css-import\");\n        if (s) {\n          source.add(s);\n          source.add(\"\\n\");\n        }\n        const exports = codeGenResult.data && codeGenResult.data.get(\"css-exports\");\n        const moduleId = chunkGraph.getModuleId(module) + \"\";\n        metaData.push(`${exports ? Array.from(exports, _ref6 => {\n          let [n, v] = _ref6;\n          const shortcutValue = `${uniqueName ? uniqueName + \"-\" : \"\"}${moduleId}-${n}`;\n          return v === shortcutValue ? `${escapeCss(n)}/` : v === \"--\" + shortcutValue ? `${escapeCss(n)}%` : `${escapeCss(n)}(${escapeCss(v)})`;\n        }).join(\"\") : \"\"}${escapeCss(moduleId)}`);\n      } catch (e) {\n        e.message += `\\nduring rendering of css ${module.identifier()}`;\n        throw e;\n      }\n    }\n    source.add(`head{--webpack-${escapeCss((uniqueName ? uniqueName + \"-\" : \"\") + chunk.id, true)}:${metaData.join(\",\")};}`);\n    return source;\n  }\n  static getChunkFilenameTemplate(chunk, outputOptions) {\n    if (chunk.cssFilenameTemplate) {\n      return chunk.cssFilenameTemplate;\n    } else if (chunk.canBeInitial()) {\n      return outputOptions.cssFilename;\n    } else {\n      return outputOptions.cssChunkFilename;\n    }\n  }\n  static chunkHasCss(chunk, chunkGraph) {\n    return !!chunkGraph.getChunkModulesIterableBySourceType(chunk, \"css\") || !!chunkGraph.getChunkModulesIterableBySourceType(chunk, \"css-import\");\n  }\n}\nmodule.exports = CssModulesPlugin;","map":{"version":3,"names":["ConcatSource","require","HotUpdateChunk","RuntimeGlobals","SelfModuleFactory","CssExportDependency","CssImportDependency","CssLocalIdentifierDependency","CssSelfLocalIdentifierDependency","CssUrlDependency","StaticExportsDependency","compareModulesByIdentifier","createSchemaValidation","createHash","memoize","nonNumericOnlyHash","CssExportsGenerator","CssGenerator","CssParser","getCssLoadingRuntimeModule","getSchema","name","definitions","oneOf","$ref","validateGeneratorOptions","baseDataPath","validateParserOptions","escapeCss","str","omitOptionalUnderscore","escaped","replace","s","test","plugin","CssModulesPlugin","constructor","exportsOnly","_exportsOnly","apply","compiler","hooks","compilation","tap","normalModuleFactory","selfFactory","moduleGraph","dependencyFactories","set","dependencyTemplates","Template","createParser","for","parserOptions","allowPseudoBlocks","allowModeSwitch","defaultMode","createGenerator","generatorOptions","orderedCssModulesPerChunk","WeakMap","afterCodeGeneration","chunkGraph","chunk","chunks","chunkHasCss","getOrderedChunkCssModules","contentHash","outputOptions","hashSalt","hashDigest","hashDigestLength","hashFunction","modules","get","undefined","hash","update","module","getModuleHash","runtime","digest","css","renderManifest","result","options","codeGenerationResults","push","render","renderChunk","uniqueName","filenameTemplate","getChunkFilenameTemplate","pathOptions","contentHashType","identifier","id","enabledChunks","WeakSet","handler","has","add","publicPath","getChunkCssFilename","hasOwnProperty","moduleFactoriesAddOnly","makeNamespaceObject","CssLoadingRuntimeModule","addRuntimeModule","runtimeRequirementInTree","hasCssModules","ensureChunkHandlers","hmrDownloadUpdateHandlers","getModulesInOrder","modulesList","modulesByChunkGroup","Array","from","groupsIterable","chunkGroup","sortedModules","map","index","getModulePostOrderIndex","filter","item","sort","a","b","list","Set","length","reverse","compareModuleLists","finalModules","failedModules","selectedModule","hasFailed","outer","lastModule","warnings","Error","readableIdentifier","requestShortener","pop","idx","indexOf","splice","getOrderedChunkModulesIterableBySourceType","source","metaData","codeGenResult","sources","exports","data","moduleId","getModuleId","n","v","shortcutValue","join","e","message","cssFilenameTemplate","canBeInitial","cssFilename","cssChunkFilename","getChunkModulesIterableBySourceType"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/webpack/lib/css/CssModulesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst HotUpdateChunk = require(\"../HotUpdateChunk\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst SelfModuleFactory = require(\"../SelfModuleFactory\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst { compareModulesByIdentifier } = require(\"../util/comparators\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst createHash = require(\"../util/createHash\");\nconst memoize = require(\"../util/memoize\");\nconst nonNumericOnlyHash = require(\"../util/nonNumericOnlyHash\");\nconst CssExportsGenerator = require(\"./CssExportsGenerator\");\nconst CssGenerator = require(\"./CssGenerator\");\nconst CssParser = require(\"./CssParser\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").CssExperimentOptions} CssExperimentOptions */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nconst getCssLoadingRuntimeModule = memoize(() =>\n\trequire(\"./CssLoadingRuntimeModule\")\n);\n\nconst getSchema = name => {\n\tconst { definitions } = require(\"../../schemas/WebpackOptions.json\");\n\treturn {\n\t\tdefinitions,\n\t\toneOf: [{ $ref: `#/definitions/${name}` }]\n\t};\n};\n\nconst validateGeneratorOptions = createSchemaValidation(\n\trequire(\"../../schemas/plugins/css/CssGeneratorOptions.check.js\"),\n\t() => getSchema(\"CssGeneratorOptions\"),\n\t{\n\t\tname: \"Css Modules Plugin\",\n\t\tbaseDataPath: \"parser\"\n\t}\n);\nconst validateParserOptions = createSchemaValidation(\n\trequire(\"../../schemas/plugins/css/CssParserOptions.check.js\"),\n\t() => getSchema(\"CssParserOptions\"),\n\t{\n\t\tname: \"Css Modules Plugin\",\n\t\tbaseDataPath: \"parser\"\n\t}\n);\n\nconst escapeCss = (str, omitOptionalUnderscore) => {\n\tconst escaped = `${str}`.replace(\n\t\t// cspell:word uffff\n\t\t/[^a-zA-Z0-9_\\u0081-\\uffff-]/g,\n\t\ts => `\\\\${s}`\n\t);\n\treturn !omitOptionalUnderscore && /^(?!--)[0-9_-]/.test(escaped)\n\t\t? `_${escaped}`\n\t\t: escaped;\n};\n\nconst plugin = \"CssModulesPlugin\";\n\nclass CssModulesPlugin {\n\t/**\n\t * @param {CssExperimentOptions} options options\n\t */\n\tconstructor({ exportsOnly = false }) {\n\t\tthis._exportsOnly = exportsOnly;\n\t}\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tplugin,\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst selfFactory = new SelfModuleFactory(compilation.moduleGraph);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tCssUrlDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCssUrlDependency,\n\t\t\t\t\tnew CssUrlDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCssLocalIdentifierDependency,\n\t\t\t\t\tnew CssLocalIdentifierDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tCssSelfLocalIdentifierDependency,\n\t\t\t\t\tselfFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCssSelfLocalIdentifierDependency,\n\t\t\t\t\tnew CssSelfLocalIdentifierDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCssExportDependency,\n\t\t\t\t\tnew CssExportDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tCssImportDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCssImportDependency,\n\t\t\t\t\tnew CssImportDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tStaticExportsDependency,\n\t\t\t\t\tnew StaticExportsDependency.Template()\n\t\t\t\t);\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"css\")\n\t\t\t\t\t.tap(plugin, parserOptions => {\n\t\t\t\t\t\tvalidateParserOptions(parserOptions);\n\t\t\t\t\t\treturn new CssParser();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"css/global\")\n\t\t\t\t\t.tap(plugin, parserOptions => {\n\t\t\t\t\t\tvalidateParserOptions(parserOptions);\n\t\t\t\t\t\treturn new CssParser({\n\t\t\t\t\t\t\tallowPseudoBlocks: false,\n\t\t\t\t\t\t\tallowModeSwitch: false\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"css/module\")\n\t\t\t\t\t.tap(plugin, parserOptions => {\n\t\t\t\t\t\tvalidateParserOptions(parserOptions);\n\t\t\t\t\t\treturn new CssParser({\n\t\t\t\t\t\t\tdefaultMode: \"local\"\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"css\")\n\t\t\t\t\t.tap(plugin, generatorOptions => {\n\t\t\t\t\t\tvalidateGeneratorOptions(generatorOptions);\n\t\t\t\t\t\treturn this._exportsOnly\n\t\t\t\t\t\t\t? new CssExportsGenerator()\n\t\t\t\t\t\t\t: new CssGenerator();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"css/global\")\n\t\t\t\t\t.tap(plugin, generatorOptions => {\n\t\t\t\t\t\tvalidateGeneratorOptions(generatorOptions);\n\t\t\t\t\t\treturn this._exportsOnly\n\t\t\t\t\t\t\t? new CssExportsGenerator()\n\t\t\t\t\t\t\t: new CssGenerator();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"css/module\")\n\t\t\t\t\t.tap(plugin, generatorOptions => {\n\t\t\t\t\t\tvalidateGeneratorOptions(generatorOptions);\n\t\t\t\t\t\treturn this._exportsOnly\n\t\t\t\t\t\t\t? new CssExportsGenerator()\n\t\t\t\t\t\t\t: new CssGenerator();\n\t\t\t\t\t});\n\t\t\t\tconst orderedCssModulesPerChunk = new WeakMap();\n\t\t\t\tcompilation.hooks.afterCodeGeneration.tap(\"CssModulesPlugin\", () => {\n\t\t\t\t\tconst { chunkGraph } = compilation;\n\t\t\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\t\t\tif (CssModulesPlugin.chunkHasCss(chunk, chunkGraph)) {\n\t\t\t\t\t\t\torderedCssModulesPerChunk.set(\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tthis.getOrderedChunkCssModules(chunk, chunkGraph, compilation)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tcompilation.hooks.contentHash.tap(\"CssModulesPlugin\", chunk => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\toutputOptions: {\n\t\t\t\t\t\t\thashSalt,\n\t\t\t\t\t\t\thashDigest,\n\t\t\t\t\t\t\thashDigestLength,\n\t\t\t\t\t\t\thashFunction\n\t\t\t\t\t\t}\n\t\t\t\t\t} = compilation;\n\t\t\t\t\tconst modules = orderedCssModulesPerChunk.get(chunk);\n\t\t\t\t\tif (modules === undefined) return;\n\t\t\t\t\tconst hash = createHash(hashFunction);\n\t\t\t\t\tif (hashSalt) hash.update(hashSalt);\n\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\thash.update(chunkGraph.getModuleHash(module, chunk.runtime));\n\t\t\t\t\t}\n\t\t\t\t\tconst digest = /** @type {string} */ (hash.digest(hashDigest));\n\t\t\t\t\tchunk.contentHash.css = nonNumericOnlyHash(digest, hashDigestLength);\n\t\t\t\t});\n\t\t\t\tcompilation.hooks.renderManifest.tap(plugin, (result, options) => {\n\t\t\t\t\tconst { chunkGraph } = compilation;\n\t\t\t\t\tconst { hash, chunk, codeGenerationResults } = options;\n\n\t\t\t\t\tif (chunk instanceof HotUpdateChunk) return result;\n\n\t\t\t\t\tconst modules = orderedCssModulesPerChunk.get(chunk);\n\t\t\t\t\tif (modules !== undefined) {\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trender: () =>\n\t\t\t\t\t\t\t\tthis.renderChunk({\n\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\t\t\tcodeGenerationResults,\n\t\t\t\t\t\t\t\t\tuniqueName: compilation.outputOptions.uniqueName,\n\t\t\t\t\t\t\t\t\tmodules\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tfilenameTemplate: CssModulesPlugin.getChunkFilenameTemplate(\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tcompilation.outputOptions\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tpathOptions: {\n\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\truntime: chunk.runtime,\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tcontentHashType: \"css\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tidentifier: `css${chunk.id}`,\n\t\t\t\t\t\t\thash: chunk.contentHash.css\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t});\n\t\t\t\tconst enabledChunks = new WeakSet();\n\t\t\t\tconst handler = (chunk, set) => {\n\t\t\t\t\tif (enabledChunks.has(chunk)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tenabledChunks.add(chunk);\n\n\t\t\t\t\tset.add(RuntimeGlobals.publicPath);\n\t\t\t\t\tset.add(RuntimeGlobals.getChunkCssFilename);\n\t\t\t\t\tset.add(RuntimeGlobals.hasOwnProperty);\n\t\t\t\t\tset.add(RuntimeGlobals.moduleFactoriesAddOnly);\n\t\t\t\t\tset.add(RuntimeGlobals.makeNamespaceObject);\n\n\t\t\t\t\tconst CssLoadingRuntimeModule = getCssLoadingRuntimeModule();\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new CssLoadingRuntimeModule(set));\n\t\t\t\t};\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.hasCssModules)\n\t\t\t\t\t.tap(plugin, handler);\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.ensureChunkHandlers)\n\t\t\t\t\t.tap(plugin, handler);\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.hmrDownloadUpdateHandlers)\n\t\t\t\t\t.tap(plugin, handler);\n\t\t\t}\n\t\t);\n\t}\n\n\tgetModulesInOrder(chunk, modules, compilation) {\n\t\tif (!modules) return [];\n\n\t\tconst modulesList = [...modules];\n\n\t\t// Get ordered list of modules per chunk group\n\t\t// Lists are in reverse order to allow to use Array.pop()\n\t\tconst modulesByChunkGroup = Array.from(chunk.groupsIterable, chunkGroup => {\n\t\t\tconst sortedModules = modulesList\n\t\t\t\t.map(module => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tindex: chunkGroup.getModulePostOrderIndex(module)\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t\t.filter(item => item.index !== undefined)\n\t\t\t\t.sort((a, b) => b.index - a.index)\n\t\t\t\t.map(item => item.module);\n\n\t\t\treturn { list: sortedModules, set: new Set(sortedModules) };\n\t\t});\n\n\t\tif (modulesByChunkGroup.length === 1)\n\t\t\treturn modulesByChunkGroup[0].list.reverse();\n\n\t\tconst compareModuleLists = ({ list: a }, { list: b }) => {\n\t\t\tif (a.length === 0) {\n\t\t\t\treturn b.length === 0 ? 0 : 1;\n\t\t\t} else {\n\t\t\t\tif (b.length === 0) return -1;\n\t\t\t\treturn compareModulesByIdentifier(a[a.length - 1], b[b.length - 1]);\n\t\t\t}\n\t\t};\n\n\t\tmodulesByChunkGroup.sort(compareModuleLists);\n\n\t\tconst finalModules = [];\n\n\t\tfor (;;) {\n\t\t\tconst failedModules = new Set();\n\t\t\tconst list = modulesByChunkGroup[0].list;\n\t\t\tif (list.length === 0) {\n\t\t\t\t// done, everything empty\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet selectedModule = list[list.length - 1];\n\t\t\tlet hasFailed = undefined;\n\t\t\touter: for (;;) {\n\t\t\t\tfor (const { list, set } of modulesByChunkGroup) {\n\t\t\t\t\tif (list.length === 0) continue;\n\t\t\t\t\tconst lastModule = list[list.length - 1];\n\t\t\t\t\tif (lastModule === selectedModule) continue;\n\t\t\t\t\tif (!set.has(selectedModule)) continue;\n\t\t\t\t\tfailedModules.add(selectedModule);\n\t\t\t\t\tif (failedModules.has(lastModule)) {\n\t\t\t\t\t\t// There is a conflict, try other alternatives\n\t\t\t\t\t\thasFailed = lastModule;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tselectedModule = lastModule;\n\t\t\t\t\thasFailed = false;\n\t\t\t\t\tcontinue outer; // restart\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (hasFailed) {\n\t\t\t\t// There is a not resolve-able conflict with the selectedModule\n\t\t\t\tif (compilation) {\n\t\t\t\t\t// TODO print better warning\n\t\t\t\t\tcompilation.warnings.push(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`chunk ${\n\t\t\t\t\t\t\t\tchunk.name || chunk.id\n\t\t\t\t\t\t\t}\\nConflicting order between ${hasFailed.readableIdentifier(\n\t\t\t\t\t\t\t\tcompilation.requestShortener\n\t\t\t\t\t\t\t)} and ${selectedModule.readableIdentifier(\n\t\t\t\t\t\t\t\tcompilation.requestShortener\n\t\t\t\t\t\t\t)}`\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tselectedModule = hasFailed;\n\t\t\t}\n\t\t\t// Insert the selected module into the final modules list\n\t\t\tfinalModules.push(selectedModule);\n\t\t\t// Remove the selected module from all lists\n\t\t\tfor (const { list, set } of modulesByChunkGroup) {\n\t\t\t\tconst lastModule = list[list.length - 1];\n\t\t\t\tif (lastModule === selectedModule) list.pop();\n\t\t\t\telse if (hasFailed && set.has(selectedModule)) {\n\t\t\t\t\tconst idx = list.indexOf(selectedModule);\n\t\t\t\t\tif (idx >= 0) list.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmodulesByChunkGroup.sort(compareModuleLists);\n\t\t}\n\t\treturn finalModules;\n\t}\n\n\tgetOrderedChunkCssModules(chunk, chunkGraph, compilation) {\n\t\treturn [\n\t\t\t...this.getModulesInOrder(\n\t\t\t\tchunk,\n\t\t\t\tchunkGraph.getOrderedChunkModulesIterableBySourceType(\n\t\t\t\t\tchunk,\n\t\t\t\t\t\"css-import\",\n\t\t\t\t\tcompareModulesByIdentifier\n\t\t\t\t),\n\t\t\t\tcompilation\n\t\t\t),\n\t\t\t...this.getModulesInOrder(\n\t\t\t\tchunk,\n\t\t\t\tchunkGraph.getOrderedChunkModulesIterableBySourceType(\n\t\t\t\t\tchunk,\n\t\t\t\t\t\"css\",\n\t\t\t\t\tcompareModulesByIdentifier\n\t\t\t\t),\n\t\t\t\tcompilation\n\t\t\t)\n\t\t];\n\t}\n\n\trenderChunk({\n\t\tuniqueName,\n\t\tchunk,\n\t\tchunkGraph,\n\t\tcodeGenerationResults,\n\t\tmodules\n\t}) {\n\t\tconst source = new ConcatSource();\n\t\tconst metaData = [];\n\t\tfor (const module of modules) {\n\t\t\ttry {\n\t\t\t\tconst codeGenResult = codeGenerationResults.get(module, chunk.runtime);\n\n\t\t\t\tconst s =\n\t\t\t\t\tcodeGenResult.sources.get(\"css\") ||\n\t\t\t\t\tcodeGenResult.sources.get(\"css-import\");\n\t\t\t\tif (s) {\n\t\t\t\t\tsource.add(s);\n\t\t\t\t\tsource.add(\"\\n\");\n\t\t\t\t}\n\t\t\t\tconst exports =\n\t\t\t\t\tcodeGenResult.data && codeGenResult.data.get(\"css-exports\");\n\t\t\t\tconst moduleId = chunkGraph.getModuleId(module) + \"\";\n\t\t\t\tmetaData.push(\n\t\t\t\t\t`${\n\t\t\t\t\t\texports\n\t\t\t\t\t\t\t? Array.from(exports, ([n, v]) => {\n\t\t\t\t\t\t\t\t\tconst shortcutValue = `${\n\t\t\t\t\t\t\t\t\t\tuniqueName ? uniqueName + \"-\" : \"\"\n\t\t\t\t\t\t\t\t\t}${moduleId}-${n}`;\n\t\t\t\t\t\t\t\t\treturn v === shortcutValue\n\t\t\t\t\t\t\t\t\t\t? `${escapeCss(n)}/`\n\t\t\t\t\t\t\t\t\t\t: v === \"--\" + shortcutValue\n\t\t\t\t\t\t\t\t\t\t? `${escapeCss(n)}%`\n\t\t\t\t\t\t\t\t\t\t: `${escapeCss(n)}(${escapeCss(v)})`;\n\t\t\t\t\t\t\t  }).join(\"\")\n\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t}${escapeCss(moduleId)}`\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\te.message += `\\nduring rendering of css ${module.identifier()}`;\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t\tsource.add(\n\t\t\t`head{--webpack-${escapeCss(\n\t\t\t\t(uniqueName ? uniqueName + \"-\" : \"\") + chunk.id,\n\t\t\t\ttrue\n\t\t\t)}:${metaData.join(\",\")};}`\n\t\t);\n\t\treturn source;\n\t}\n\n\tstatic getChunkFilenameTemplate(chunk, outputOptions) {\n\t\tif (chunk.cssFilenameTemplate) {\n\t\t\treturn chunk.cssFilenameTemplate;\n\t\t} else if (chunk.canBeInitial()) {\n\t\t\treturn outputOptions.cssFilename;\n\t\t} else {\n\t\t\treturn outputOptions.cssChunkFilename;\n\t\t}\n\t}\n\n\tstatic chunkHasCss(chunk, chunkGraph) {\n\t\treturn (\n\t\t\t!!chunkGraph.getChunkModulesIterableBySourceType(chunk, \"css\") ||\n\t\t\t!!chunkGraph.getChunkModulesIterableBySourceType(chunk, \"css-import\")\n\t\t);\n\t}\n}\n\nmodule.exports = CssModulesPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}