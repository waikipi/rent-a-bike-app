{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\nconst Module = require(\"../Module\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst FallbackDependency = require(\"./FallbackDependency\");\nconst RemoteToExternalDependency = require(\"./RemoteToExternalDependency\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\nconst TYPES = new Set([\"remote\", \"share-init\"]);\nconst RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\nclass RemoteModule extends Module {\n  /**\n   * @param {string} request request string\n   * @param {string[]} externalRequests list of external requests to containers\n   * @param {string} internalRequest name of exposed module in container\n   * @param {string} shareScope the used share scope name\n   */\n  constructor(request, externalRequests, internalRequest, shareScope) {\n    super(\"remote-module\");\n    this.request = request;\n    this.externalRequests = externalRequests;\n    this.internalRequest = internalRequest;\n    this.shareScope = shareScope;\n    this._identifier = `remote (${shareScope}) ${this.externalRequests.join(\" \")} ${this.internalRequest}`;\n  }\n\n  /**\n   * @returns {string} a unique identifier of the module\n   */\n  identifier() {\n    return this._identifier;\n  }\n\n  /**\n   * @param {RequestShortener} requestShortener the request shortener\n   * @returns {string} a user readable identifier of the module\n   */\n  readableIdentifier(requestShortener) {\n    return `remote ${this.request}`;\n  }\n\n  /**\n   * @param {LibIdentOptions} options options\n   * @returns {string | null} an identifier for library inclusion\n   */\n  libIdent(options) {\n    return `${this.layer ? `(${this.layer})/` : \"\"}webpack/container/remote/${this.request}`;\n  }\n\n  /**\n   * @param {NeedBuildContext} context context info\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n   * @returns {void}\n   */\n  needBuild(context, callback) {\n    callback(null, !this.buildInfo);\n  }\n\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {function(WebpackError=): void} callback callback function\n   * @returns {void}\n   */\n  build(options, compilation, resolver, fs, callback) {\n    this.buildMeta = {};\n    this.buildInfo = {\n      strict: true\n    };\n    this.clearDependenciesAndBlocks();\n    if (this.externalRequests.length === 1) {\n      this.addDependency(new RemoteToExternalDependency(this.externalRequests[0]));\n    } else {\n      this.addDependency(new FallbackDependency(this.externalRequests));\n    }\n    callback();\n  }\n\n  /**\n   * @param {string=} type the source type for which the size should be estimated\n   * @returns {number} the estimated size of the module (must be non-zero)\n   */\n  size(type) {\n    return 6;\n  }\n\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n  getSourceTypes() {\n    return TYPES;\n  }\n\n  /**\n   * @returns {string | null} absolute path which should be used for condition matching (usually the resource path)\n   */\n  nameForCondition() {\n    return this.request;\n  }\n\n  /**\n   * @param {CodeGenerationContext} context context for code generation\n   * @returns {CodeGenerationResult} result\n   */\n  codeGeneration(_ref) {\n    let {\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph\n    } = _ref;\n    const module = moduleGraph.getModule(this.dependencies[0]);\n    const id = module && chunkGraph.getModuleId(module);\n    const sources = new Map();\n    sources.set(\"remote\", new RawSource(\"\"));\n    const data = new Map();\n    data.set(\"share-init\", [{\n      shareScope: this.shareScope,\n      initStage: 20,\n      init: id === undefined ? \"\" : `initExternal(${JSON.stringify(id)});`\n    }]);\n    return {\n      sources,\n      data,\n      runtimeRequirements: RUNTIME_REQUIREMENTS\n    };\n  }\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.request);\n    write(this.externalRequests);\n    write(this.internalRequest);\n    write(this.shareScope);\n    super.serialize(context);\n  }\n  static deserialize(context) {\n    const {\n      read\n    } = context;\n    const obj = new RemoteModule(read(), read(), read(), read());\n    obj.deserialize(context);\n    return obj;\n  }\n}\nmakeSerializable(RemoteModule, \"webpack/lib/container/RemoteModule\");\nmodule.exports = RemoteModule;","map":{"version":3,"names":["RawSource","require","Module","RuntimeGlobals","makeSerializable","FallbackDependency","RemoteToExternalDependency","TYPES","Set","RUNTIME_REQUIREMENTS","module","RemoteModule","constructor","request","externalRequests","internalRequest","shareScope","_identifier","join","identifier","readableIdentifier","requestShortener","libIdent","options","layer","needBuild","context","callback","buildInfo","build","compilation","resolver","fs","buildMeta","strict","clearDependenciesAndBlocks","length","addDependency","size","type","getSourceTypes","nameForCondition","codeGeneration","runtimeTemplate","moduleGraph","chunkGraph","getModule","dependencies","id","getModuleId","sources","Map","set","data","initStage","init","undefined","JSON","stringify","runtimeRequirements","serialize","write","deserialize","read","obj","exports"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/webpack/lib/container/RemoteModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nconst { RawSource } = require(\"webpack-sources\");\nconst Module = require(\"../Module\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst FallbackDependency = require(\"./FallbackDependency\");\nconst RemoteToExternalDependency = require(\"./RemoteToExternalDependency\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\nconst TYPES = new Set([\"remote\", \"share-init\"]);\nconst RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\n\nclass RemoteModule extends Module {\n\t/**\n\t * @param {string} request request string\n\t * @param {string[]} externalRequests list of external requests to containers\n\t * @param {string} internalRequest name of exposed module in container\n\t * @param {string} shareScope the used share scope name\n\t */\n\tconstructor(request, externalRequests, internalRequest, shareScope) {\n\t\tsuper(\"remote-module\");\n\t\tthis.request = request;\n\t\tthis.externalRequests = externalRequests;\n\t\tthis.internalRequest = internalRequest;\n\t\tthis.shareScope = shareScope;\n\t\tthis._identifier = `remote (${shareScope}) ${this.externalRequests.join(\n\t\t\t\" \"\n\t\t)} ${this.internalRequest}`;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\treturn this._identifier;\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn `remote ${this.request}`;\n\t}\n\n\t/**\n\t * @param {LibIdentOptions} options options\n\t * @returns {string | null} an identifier for library inclusion\n\t */\n\tlibIdent(options) {\n\t\treturn `${this.layer ? `(${this.layer})/` : \"\"}webpack/container/remote/${\n\t\t\tthis.request\n\t\t}`;\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\tcallback(null, !this.buildInfo);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {\n\t\t\tstrict: true\n\t\t};\n\n\t\tthis.clearDependenciesAndBlocks();\n\t\tif (this.externalRequests.length === 1) {\n\t\t\tthis.addDependency(\n\t\t\t\tnew RemoteToExternalDependency(this.externalRequests[0])\n\t\t\t);\n\t\t} else {\n\t\t\tthis.addDependency(new FallbackDependency(this.externalRequests));\n\t\t}\n\n\t\tcallback();\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\treturn 6;\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @returns {string | null} absolute path which should be used for condition matching (usually the resource path)\n\t */\n\tnameForCondition() {\n\t\treturn this.request;\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration({ runtimeTemplate, moduleGraph, chunkGraph }) {\n\t\tconst module = moduleGraph.getModule(this.dependencies[0]);\n\t\tconst id = module && chunkGraph.getModuleId(module);\n\t\tconst sources = new Map();\n\t\tsources.set(\"remote\", new RawSource(\"\"));\n\t\tconst data = new Map();\n\t\tdata.set(\"share-init\", [\n\t\t\t{\n\t\t\t\tshareScope: this.shareScope,\n\t\t\t\tinitStage: 20,\n\t\t\t\tinit: id === undefined ? \"\" : `initExternal(${JSON.stringify(id)});`\n\t\t\t}\n\t\t]);\n\t\treturn { sources, data, runtimeRequirements: RUNTIME_REQUIREMENTS };\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.request);\n\t\twrite(this.externalRequests);\n\t\twrite(this.internalRequest);\n\t\twrite(this.shareScope);\n\t\tsuper.serialize(context);\n\t}\n\n\tstatic deserialize(context) {\n\t\tconst { read } = context;\n\t\tconst obj = new RemoteModule(read(), read(), read(), read());\n\t\tobj.deserialize(context);\n\t\treturn obj;\n\t}\n}\n\nmakeSerializable(RemoteModule, \"webpack/lib/container/RemoteModule\");\n\nmodule.exports = RemoteModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}