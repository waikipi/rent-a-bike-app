{"ast":null,"code":"'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\nconst utils = require('../utils');\nconst oAuthHost = 'connect.stripe.com';\nmodule.exports = StripeResource.extend({\n  basePath: '/',\n  authorizeUrl(params, options) {\n    params = params || {};\n    options = options || {};\n    let path = 'oauth/authorize';\n    // For Express accounts, the path changes\n    if (options.express) {\n      path = `express/${path}`;\n    }\n    if (!params.response_type) {\n      params.response_type = 'code';\n    }\n    if (!params.client_id) {\n      params.client_id = this._stripe.getClientId();\n    }\n    if (!params.scope) {\n      params.scope = 'read_write';\n    }\n    return `https://${oAuthHost}/${path}?${utils.stringifyRequestData(params)}`;\n  },\n  token: stripeMethod({\n    method: 'POST',\n    path: 'oauth/token',\n    host: oAuthHost\n  }),\n  deauthorize(spec) {\n    if (!spec.client_id) {\n      spec.client_id = this._stripe.getClientId();\n    }\n    return stripeMethod({\n      method: 'POST',\n      path: 'oauth/deauthorize',\n      host: oAuthHost\n    }).apply(this, arguments);\n  }\n});","map":{"version":3,"names":["StripeResource","require","stripeMethod","method","utils","oAuthHost","module","exports","extend","basePath","authorizeUrl","params","options","path","express","response_type","client_id","_stripe","getClientId","scope","stringifyRequestData","token","host","deauthorize","spec","apply","arguments"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/stripe/lib/resources/OAuth.js"],"sourcesContent":["'use strict';\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\nconst utils = require('../utils');\nconst oAuthHost = 'connect.stripe.com';\nmodule.exports = StripeResource.extend({\n  basePath: '/',\n  authorizeUrl(params, options) {\n    params = params || {};\n    options = options || {};\n    let path = 'oauth/authorize';\n    // For Express accounts, the path changes\n    if (options.express) {\n      path = `express/${path}`;\n    }\n    if (!params.response_type) {\n      params.response_type = 'code';\n    }\n    if (!params.client_id) {\n      params.client_id = this._stripe.getClientId();\n    }\n    if (!params.scope) {\n      params.scope = 'read_write';\n    }\n    return `https://${oAuthHost}/${path}?${utils.stringifyRequestData(params)}`;\n  },\n  token: stripeMethod({\n    method: 'POST',\n    path: 'oauth/token',\n    host: oAuthHost,\n  }),\n  deauthorize(spec) {\n    if (!spec.client_id) {\n      spec.client_id = this._stripe.getClientId();\n    }\n    return stripeMethod({\n      method: 'POST',\n      path: 'oauth/deauthorize',\n      host: oAuthHost,\n    }).apply(this, arguments);\n  },\n});\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,YAAY,GAAGF,cAAc,CAACG,MAAM;AAC1C,MAAMC,KAAK,GAAGH,OAAO,CAAC,UAAU,CAAC;AACjC,MAAMI,SAAS,GAAG,oBAAoB;AACtCC,MAAM,CAACC,OAAO,GAAGP,cAAc,CAACQ,MAAM,CAAC;EACrCC,QAAQ,EAAE,GAAG;EACbC,YAAY,CAACC,MAAM,EAAEC,OAAO,EAAE;IAC5BD,MAAM,GAAGA,MAAM,IAAI,CAAC,CAAC;IACrBC,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,IAAIC,IAAI,GAAG,iBAAiB;IAC5B;IACA,IAAID,OAAO,CAACE,OAAO,EAAE;MACnBD,IAAI,GAAI,WAAUA,IAAK,EAAC;IAC1B;IACA,IAAI,CAACF,MAAM,CAACI,aAAa,EAAE;MACzBJ,MAAM,CAACI,aAAa,GAAG,MAAM;IAC/B;IACA,IAAI,CAACJ,MAAM,CAACK,SAAS,EAAE;MACrBL,MAAM,CAACK,SAAS,GAAG,IAAI,CAACC,OAAO,CAACC,WAAW,EAAE;IAC/C;IACA,IAAI,CAACP,MAAM,CAACQ,KAAK,EAAE;MACjBR,MAAM,CAACQ,KAAK,GAAG,YAAY;IAC7B;IACA,OAAQ,WAAUd,SAAU,IAAGQ,IAAK,IAAGT,KAAK,CAACgB,oBAAoB,CAACT,MAAM,CAAE,EAAC;EAC7E,CAAC;EACDU,KAAK,EAAEnB,YAAY,CAAC;IAClBC,MAAM,EAAE,MAAM;IACdU,IAAI,EAAE,aAAa;IACnBS,IAAI,EAAEjB;EACR,CAAC,CAAC;EACFkB,WAAW,CAACC,IAAI,EAAE;IAChB,IAAI,CAACA,IAAI,CAACR,SAAS,EAAE;MACnBQ,IAAI,CAACR,SAAS,GAAG,IAAI,CAACC,OAAO,CAACC,WAAW,EAAE;IAC7C;IACA,OAAOhB,YAAY,CAAC;MAClBC,MAAM,EAAE,MAAM;MACdU,IAAI,EAAE,mBAAmB;MACzBS,IAAI,EAAEjB;IACR,CAAC,CAAC,CAACoB,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EAC3B;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}