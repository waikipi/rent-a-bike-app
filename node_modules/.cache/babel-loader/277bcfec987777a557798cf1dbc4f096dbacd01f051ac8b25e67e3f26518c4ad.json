{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  ConcatSource,\n  RawSource\n} = require(\"webpack-sources\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst {\n  getChunkFilenameTemplate,\n  getCompilationHooks\n} = require(\"./JavascriptModulesPlugin\");\nconst {\n  generateEntryStartup,\n  updateHashForEntryStartup\n} = require(\"./StartupHelpers\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass CommonJsChunkFormatPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.thisCompilation.tap(\"CommonJsChunkFormatPlugin\", compilation => {\n      compilation.hooks.additionalChunkRuntimeRequirements.tap(\"CommonJsChunkLoadingPlugin\", (chunk, set, _ref) => {\n        let {\n          chunkGraph\n        } = _ref;\n        if (chunk.hasRuntime()) return;\n        if (chunkGraph.getNumberOfEntryModules(chunk) > 0) {\n          set.add(RuntimeGlobals.require);\n          set.add(RuntimeGlobals.startupEntrypoint);\n          set.add(RuntimeGlobals.externalInstallChunk);\n        }\n      });\n      const hooks = getCompilationHooks(compilation);\n      hooks.renderChunk.tap(\"CommonJsChunkFormatPlugin\", (modules, renderContext) => {\n        const {\n          chunk,\n          chunkGraph,\n          runtimeTemplate\n        } = renderContext;\n        const source = new ConcatSource();\n        source.add(`exports.id = ${JSON.stringify(chunk.id)};\\n`);\n        source.add(`exports.ids = ${JSON.stringify(chunk.ids)};\\n`);\n        source.add(`exports.modules = `);\n        source.add(modules);\n        source.add(\";\\n\");\n        const runtimeModules = chunkGraph.getChunkRuntimeModulesInOrder(chunk);\n        if (runtimeModules.length > 0) {\n          source.add(\"exports.runtime =\\n\");\n          source.add(Template.renderChunkRuntimeModules(runtimeModules, renderContext));\n        }\n        const entries = Array.from(chunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk));\n        if (entries.length > 0) {\n          const runtimeChunk = entries[0][1].getRuntimeChunk();\n          const currentOutputName = compilation.getPath(getChunkFilenameTemplate(chunk, compilation.outputOptions), {\n            chunk,\n            contentHashType: \"javascript\"\n          }).split(\"/\");\n          const runtimeOutputName = compilation.getPath(getChunkFilenameTemplate(runtimeChunk, compilation.outputOptions), {\n            chunk: runtimeChunk,\n            contentHashType: \"javascript\"\n          }).split(\"/\");\n\n          // remove filename, we only need the directory\n          currentOutputName.pop();\n\n          // remove common parts\n          while (currentOutputName.length > 0 && runtimeOutputName.length > 0 && currentOutputName[0] === runtimeOutputName[0]) {\n            currentOutputName.shift();\n            runtimeOutputName.shift();\n          }\n\n          // create final path\n          const runtimePath = (currentOutputName.length > 0 ? \"../\".repeat(currentOutputName.length) : \"./\") + runtimeOutputName.join(\"/\");\n          const entrySource = new ConcatSource();\n          entrySource.add(`(${runtimeTemplate.supportsArrowFunction() ? \"() => \" : \"function() \"}{\\n`);\n          entrySource.add(\"var exports = {};\\n\");\n          entrySource.add(source);\n          entrySource.add(\";\\n\\n// load runtime\\n\");\n          entrySource.add(`var __webpack_require__ = require(${JSON.stringify(runtimePath)});\\n`);\n          entrySource.add(`${RuntimeGlobals.externalInstallChunk}(exports);\\n`);\n          const startupSource = new RawSource(generateEntryStartup(chunkGraph, runtimeTemplate, entries, chunk, false));\n          entrySource.add(hooks.renderStartup.call(startupSource, entries[entries.length - 1][0], {\n            ...renderContext,\n            inlined: false\n          }));\n          entrySource.add(\"\\n})()\");\n          return entrySource;\n        }\n        return source;\n      });\n      hooks.chunkHash.tap(\"CommonJsChunkFormatPlugin\", (chunk, hash, _ref2) => {\n        let {\n          chunkGraph\n        } = _ref2;\n        if (chunk.hasRuntime()) return;\n        hash.update(\"CommonJsChunkFormatPlugin\");\n        hash.update(\"1\");\n        const entries = Array.from(chunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk));\n        updateHashForEntryStartup(hash, chunkGraph, entries, chunk);\n      });\n    });\n  }\n}\nmodule.exports = CommonJsChunkFormatPlugin;","map":{"version":3,"names":["ConcatSource","RawSource","require","RuntimeGlobals","Template","getChunkFilenameTemplate","getCompilationHooks","generateEntryStartup","updateHashForEntryStartup","CommonJsChunkFormatPlugin","apply","compiler","hooks","thisCompilation","tap","compilation","additionalChunkRuntimeRequirements","chunk","set","chunkGraph","hasRuntime","getNumberOfEntryModules","add","startupEntrypoint","externalInstallChunk","renderChunk","modules","renderContext","runtimeTemplate","source","JSON","stringify","id","ids","runtimeModules","getChunkRuntimeModulesInOrder","length","renderChunkRuntimeModules","entries","Array","from","getChunkEntryModulesWithChunkGroupIterable","runtimeChunk","getRuntimeChunk","currentOutputName","getPath","outputOptions","contentHashType","split","runtimeOutputName","pop","shift","runtimePath","repeat","join","entrySource","supportsArrowFunction","startupSource","renderStartup","call","inlined","chunkHash","hash","update","module","exports"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/webpack/lib/javascript/CommonJsChunkFormatPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource, RawSource } = require(\"webpack-sources\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst {\n\tgetChunkFilenameTemplate,\n\tgetCompilationHooks\n} = require(\"./JavascriptModulesPlugin\");\nconst {\n\tgenerateEntryStartup,\n\tupdateHashForEntryStartup\n} = require(\"./StartupHelpers\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass CommonJsChunkFormatPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"CommonJsChunkFormatPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.additionalChunkRuntimeRequirements.tap(\n\t\t\t\t\t\"CommonJsChunkLoadingPlugin\",\n\t\t\t\t\t(chunk, set, { chunkGraph }) => {\n\t\t\t\t\t\tif (chunk.hasRuntime()) return;\n\t\t\t\t\t\tif (chunkGraph.getNumberOfEntryModules(chunk) > 0) {\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.require);\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.startupEntrypoint);\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.externalInstallChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst hooks = getCompilationHooks(compilation);\n\t\t\t\thooks.renderChunk.tap(\n\t\t\t\t\t\"CommonJsChunkFormatPlugin\",\n\t\t\t\t\t(modules, renderContext) => {\n\t\t\t\t\t\tconst { chunk, chunkGraph, runtimeTemplate } = renderContext;\n\t\t\t\t\t\tconst source = new ConcatSource();\n\t\t\t\t\t\tsource.add(`exports.id = ${JSON.stringify(chunk.id)};\\n`);\n\t\t\t\t\t\tsource.add(`exports.ids = ${JSON.stringify(chunk.ids)};\\n`);\n\t\t\t\t\t\tsource.add(`exports.modules = `);\n\t\t\t\t\t\tsource.add(modules);\n\t\t\t\t\t\tsource.add(\";\\n\");\n\t\t\t\t\t\tconst runtimeModules =\n\t\t\t\t\t\t\tchunkGraph.getChunkRuntimeModulesInOrder(chunk);\n\t\t\t\t\t\tif (runtimeModules.length > 0) {\n\t\t\t\t\t\t\tsource.add(\"exports.runtime =\\n\");\n\t\t\t\t\t\t\tsource.add(\n\t\t\t\t\t\t\t\tTemplate.renderChunkRuntimeModules(\n\t\t\t\t\t\t\t\t\truntimeModules,\n\t\t\t\t\t\t\t\t\trenderContext\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst entries = Array.from(\n\t\t\t\t\t\t\tchunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (entries.length > 0) {\n\t\t\t\t\t\t\tconst runtimeChunk = entries[0][1].getRuntimeChunk();\n\t\t\t\t\t\t\tconst currentOutputName = compilation\n\t\t\t\t\t\t\t\t.getPath(\n\t\t\t\t\t\t\t\t\tgetChunkFilenameTemplate(chunk, compilation.outputOptions),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.split(\"/\");\n\t\t\t\t\t\t\tconst runtimeOutputName = compilation\n\t\t\t\t\t\t\t\t.getPath(\n\t\t\t\t\t\t\t\t\tgetChunkFilenameTemplate(\n\t\t\t\t\t\t\t\t\t\truntimeChunk,\n\t\t\t\t\t\t\t\t\t\tcompilation.outputOptions\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tchunk: runtimeChunk,\n\t\t\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.split(\"/\");\n\n\t\t\t\t\t\t\t// remove filename, we only need the directory\n\t\t\t\t\t\t\tcurrentOutputName.pop();\n\n\t\t\t\t\t\t\t// remove common parts\n\t\t\t\t\t\t\twhile (\n\t\t\t\t\t\t\t\tcurrentOutputName.length > 0 &&\n\t\t\t\t\t\t\t\truntimeOutputName.length > 0 &&\n\t\t\t\t\t\t\t\tcurrentOutputName[0] === runtimeOutputName[0]\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tcurrentOutputName.shift();\n\t\t\t\t\t\t\t\truntimeOutputName.shift();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// create final path\n\t\t\t\t\t\t\tconst runtimePath =\n\t\t\t\t\t\t\t\t(currentOutputName.length > 0\n\t\t\t\t\t\t\t\t\t? \"../\".repeat(currentOutputName.length)\n\t\t\t\t\t\t\t\t\t: \"./\") + runtimeOutputName.join(\"/\");\n\n\t\t\t\t\t\t\tconst entrySource = new ConcatSource();\n\t\t\t\t\t\t\tentrySource.add(\n\t\t\t\t\t\t\t\t`(${\n\t\t\t\t\t\t\t\t\truntimeTemplate.supportsArrowFunction()\n\t\t\t\t\t\t\t\t\t\t? \"() => \"\n\t\t\t\t\t\t\t\t\t\t: \"function() \"\n\t\t\t\t\t\t\t\t}{\\n`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tentrySource.add(\"var exports = {};\\n\");\n\t\t\t\t\t\t\tentrySource.add(source);\n\t\t\t\t\t\t\tentrySource.add(\";\\n\\n// load runtime\\n\");\n\t\t\t\t\t\t\tentrySource.add(\n\t\t\t\t\t\t\t\t`var __webpack_require__ = require(${JSON.stringify(\n\t\t\t\t\t\t\t\t\truntimePath\n\t\t\t\t\t\t\t\t)});\\n`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tentrySource.add(\n\t\t\t\t\t\t\t\t`${RuntimeGlobals.externalInstallChunk}(exports);\\n`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst startupSource = new RawSource(\n\t\t\t\t\t\t\t\tgenerateEntryStartup(\n\t\t\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tentrySource.add(\n\t\t\t\t\t\t\t\thooks.renderStartup.call(\n\t\t\t\t\t\t\t\t\tstartupSource,\n\t\t\t\t\t\t\t\t\tentries[entries.length - 1][0],\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t...renderContext,\n\t\t\t\t\t\t\t\t\t\tinlined: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tentrySource.add(\"\\n})()\");\n\t\t\t\t\t\t\treturn entrySource;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn source;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\thooks.chunkHash.tap(\n\t\t\t\t\t\"CommonJsChunkFormatPlugin\",\n\t\t\t\t\t(chunk, hash, { chunkGraph }) => {\n\t\t\t\t\t\tif (chunk.hasRuntime()) return;\n\t\t\t\t\t\thash.update(\"CommonJsChunkFormatPlugin\");\n\t\t\t\t\t\thash.update(\"1\");\n\t\t\t\t\t\tconst entries = Array.from(\n\t\t\t\t\t\t\tchunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tupdateHashForEntryStartup(hash, chunkGraph, entries, chunk);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = CommonJsChunkFormatPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}