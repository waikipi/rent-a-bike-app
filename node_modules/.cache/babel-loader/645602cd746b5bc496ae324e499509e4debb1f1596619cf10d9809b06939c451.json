{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"./StatsPrinter\")} StatsPrinter */\n/** @typedef {import(\"./StatsPrinter\").StatsPrinterContext} StatsPrinterContext */\nconst DATA_URI_CONTENT_LENGTH = 16;\nconst plural = (n, singular, plural) => n === 1 ? singular : plural;\n\n/**\n * @param {Record<string, number>} sizes sizes by source type\n * @param {Object} options options\n * @param {(number) => string=} options.formatSize size formatter\n * @returns {string} text\n */\nconst printSizes = (sizes, _ref) => {\n  let {\n    formatSize = n => `${n}`\n  } = _ref;\n  const keys = Object.keys(sizes);\n  if (keys.length > 1) {\n    return keys.map(key => `${formatSize(sizes[key])} (${key})`).join(\" \");\n  } else if (keys.length === 1) {\n    return formatSize(sizes[keys[0]]);\n  }\n};\nconst getResourceName = resource => {\n  const dataUrl = /^data:[^,]+,/.exec(resource);\n  if (!dataUrl) return resource;\n  const len = dataUrl[0].length + DATA_URI_CONTENT_LENGTH;\n  if (resource.length < len) return resource;\n  return `${resource.slice(0, Math.min(resource.length - /* '..'.length */2, len))}..`;\n};\nconst getModuleName = name => {\n  const [, prefix, resource] = /^(.*!)?([^!]*)$/.exec(name);\n  return [prefix, getResourceName(resource)];\n};\nconst mapLines = (str, fn) => str.split(\"\\n\").map(fn).join(\"\\n\");\n\n/**\n * @param {number} n a number\n * @returns {string} number as two digit string, leading 0\n */\nconst twoDigit = n => n >= 10 ? `${n}` : `0${n}`;\nconst isValidId = id => {\n  return typeof id === \"number\" || id;\n};\nconst moreCount = (list, count) => {\n  return list && list.length > 0 ? `+ ${count}` : `${count}`;\n};\n\n/** @type {Record<string, (thing: any, context: StatsPrinterContext, printer: StatsPrinter) => string | void>} */\nconst SIMPLE_PRINTERS = {\n  \"compilation.summary!\": (_, _ref2) => {\n    let {\n      type,\n      bold,\n      green,\n      red,\n      yellow,\n      formatDateTime,\n      formatTime,\n      compilation: {\n        name,\n        hash,\n        version,\n        time,\n        builtAt,\n        errorsCount,\n        warningsCount\n      }\n    } = _ref2;\n    const root = type === \"compilation.summary!\";\n    const warningsMessage = warningsCount > 0 ? yellow(`${warningsCount} ${plural(warningsCount, \"warning\", \"warnings\")}`) : \"\";\n    const errorsMessage = errorsCount > 0 ? red(`${errorsCount} ${plural(errorsCount, \"error\", \"errors\")}`) : \"\";\n    const timeMessage = root && time ? ` in ${formatTime(time)}` : \"\";\n    const hashMessage = hash ? ` (${hash})` : \"\";\n    const builtAtMessage = root && builtAt ? `${formatDateTime(builtAt)}: ` : \"\";\n    const versionMessage = root && version ? `webpack ${version}` : \"\";\n    const nameMessage = root && name ? bold(name) : name ? `Child ${bold(name)}` : root ? \"\" : \"Child\";\n    const subjectMessage = nameMessage && versionMessage ? `${nameMessage} (${versionMessage})` : versionMessage || nameMessage || \"webpack\";\n    let statusMessage;\n    if (errorsMessage && warningsMessage) {\n      statusMessage = `compiled with ${errorsMessage} and ${warningsMessage}`;\n    } else if (errorsMessage) {\n      statusMessage = `compiled with ${errorsMessage}`;\n    } else if (warningsMessage) {\n      statusMessage = `compiled with ${warningsMessage}`;\n    } else if (errorsCount === 0 && warningsCount === 0) {\n      statusMessage = `compiled ${green(\"successfully\")}`;\n    } else {\n      statusMessage = `compiled`;\n    }\n    if (builtAtMessage || versionMessage || errorsMessage || warningsMessage || errorsCount === 0 && warningsCount === 0 || timeMessage || hashMessage) return `${builtAtMessage}${subjectMessage} ${statusMessage}${timeMessage}${hashMessage}`;\n  },\n  \"compilation.filteredWarningDetailsCount\": count => count ? `${count} ${plural(count, \"warning has\", \"warnings have\")} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.` : undefined,\n  \"compilation.filteredErrorDetailsCount\": (count, _ref3) => {\n    let {\n      yellow\n    } = _ref3;\n    return count ? yellow(`${count} ${plural(count, \"error has\", \"errors have\")} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.`) : undefined;\n  },\n  \"compilation.env\": (env, _ref4) => {\n    let {\n      bold\n    } = _ref4;\n    return env ? `Environment (--env): ${bold(JSON.stringify(env, null, 2))}` : undefined;\n  },\n  \"compilation.publicPath\": (publicPath, _ref5) => {\n    let {\n      bold\n    } = _ref5;\n    return `PublicPath: ${bold(publicPath || \"(none)\")}`;\n  },\n  \"compilation.entrypoints\": (entrypoints, context, printer) => Array.isArray(entrypoints) ? undefined : printer.print(context.type, Object.values(entrypoints), {\n    ...context,\n    chunkGroupKind: \"Entrypoint\"\n  }),\n  \"compilation.namedChunkGroups\": (namedChunkGroups, context, printer) => {\n    if (!Array.isArray(namedChunkGroups)) {\n      const {\n        compilation: {\n          entrypoints\n        }\n      } = context;\n      let chunkGroups = Object.values(namedChunkGroups);\n      if (entrypoints) {\n        chunkGroups = chunkGroups.filter(group => !Object.prototype.hasOwnProperty.call(entrypoints, group.name));\n      }\n      return printer.print(context.type, chunkGroups, {\n        ...context,\n        chunkGroupKind: \"Chunk Group\"\n      });\n    }\n  },\n  \"compilation.assetsByChunkName\": () => \"\",\n  \"compilation.filteredModules\": (filteredModules, _ref6) => {\n    let {\n      compilation: {\n        modules\n      }\n    } = _ref6;\n    return filteredModules > 0 ? `${moreCount(modules, filteredModules)} ${plural(filteredModules, \"module\", \"modules\")}` : undefined;\n  },\n  \"compilation.filteredAssets\": (filteredAssets, _ref7) => {\n    let {\n      compilation: {\n        assets\n      }\n    } = _ref7;\n    return filteredAssets > 0 ? `${moreCount(assets, filteredAssets)} ${plural(filteredAssets, \"asset\", \"assets\")}` : undefined;\n  },\n  \"compilation.logging\": (logging, context, printer) => Array.isArray(logging) ? undefined : printer.print(context.type, Object.entries(logging).map(_ref8 => {\n    let [name, value] = _ref8;\n    return {\n      ...value,\n      name\n    };\n  }), context),\n  \"compilation.warningsInChildren!\": (_, _ref9) => {\n    let {\n      yellow,\n      compilation\n    } = _ref9;\n    if (!compilation.children && compilation.warningsCount > 0 && compilation.warnings) {\n      const childWarnings = compilation.warningsCount - compilation.warnings.length;\n      if (childWarnings > 0) {\n        return yellow(`${childWarnings} ${plural(childWarnings, \"WARNING\", \"WARNINGS\")} in child compilations${compilation.children ? \"\" : \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"}`);\n      }\n    }\n  },\n  \"compilation.errorsInChildren!\": (_, _ref10) => {\n    let {\n      red,\n      compilation\n    } = _ref10;\n    if (!compilation.children && compilation.errorsCount > 0 && compilation.errors) {\n      const childErrors = compilation.errorsCount - compilation.errors.length;\n      if (childErrors > 0) {\n        return red(`${childErrors} ${plural(childErrors, \"ERROR\", \"ERRORS\")} in child compilations${compilation.children ? \"\" : \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"}`);\n      }\n    }\n  },\n  \"asset.type\": type => type,\n  \"asset.name\": (name, _ref11) => {\n    let {\n      formatFilename,\n      asset: {\n        isOverSizeLimit\n      }\n    } = _ref11;\n    return formatFilename(name, isOverSizeLimit);\n  },\n  \"asset.size\": (size, _ref12) => {\n    let {\n      asset: {\n        isOverSizeLimit\n      },\n      yellow,\n      green,\n      formatSize\n    } = _ref12;\n    return isOverSizeLimit ? yellow(formatSize(size)) : formatSize(size);\n  },\n  \"asset.emitted\": (emitted, _ref13) => {\n    let {\n      green,\n      formatFlag\n    } = _ref13;\n    return emitted ? green(formatFlag(\"emitted\")) : undefined;\n  },\n  \"asset.comparedForEmit\": (comparedForEmit, _ref14) => {\n    let {\n      yellow,\n      formatFlag\n    } = _ref14;\n    return comparedForEmit ? yellow(formatFlag(\"compared for emit\")) : undefined;\n  },\n  \"asset.cached\": (cached, _ref15) => {\n    let {\n      green,\n      formatFlag\n    } = _ref15;\n    return cached ? green(formatFlag(\"cached\")) : undefined;\n  },\n  \"asset.isOverSizeLimit\": (isOverSizeLimit, _ref16) => {\n    let {\n      yellow,\n      formatFlag\n    } = _ref16;\n    return isOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined;\n  },\n  \"asset.info.immutable\": (immutable, _ref17) => {\n    let {\n      green,\n      formatFlag\n    } = _ref17;\n    return immutable ? green(formatFlag(\"immutable\")) : undefined;\n  },\n  \"asset.info.javascriptModule\": (javascriptModule, _ref18) => {\n    let {\n      formatFlag\n    } = _ref18;\n    return javascriptModule ? formatFlag(\"javascript module\") : undefined;\n  },\n  \"asset.info.sourceFilename\": (sourceFilename, _ref19) => {\n    let {\n      formatFlag\n    } = _ref19;\n    return sourceFilename ? formatFlag(sourceFilename === true ? \"from source file\" : `from: ${sourceFilename}`) : undefined;\n  },\n  \"asset.info.development\": (development, _ref20) => {\n    let {\n      green,\n      formatFlag\n    } = _ref20;\n    return development ? green(formatFlag(\"dev\")) : undefined;\n  },\n  \"asset.info.hotModuleReplacement\": (hotModuleReplacement, _ref21) => {\n    let {\n      green,\n      formatFlag\n    } = _ref21;\n    return hotModuleReplacement ? green(formatFlag(\"hmr\")) : undefined;\n  },\n  \"asset.separator!\": () => \"\\n\",\n  \"asset.filteredRelated\": (filteredRelated, _ref22) => {\n    let {\n      asset: {\n        related\n      }\n    } = _ref22;\n    return filteredRelated > 0 ? `${moreCount(related, filteredRelated)} related ${plural(filteredRelated, \"asset\", \"assets\")}` : undefined;\n  },\n  \"asset.filteredChildren\": (filteredChildren, _ref23) => {\n    let {\n      asset: {\n        children\n      }\n    } = _ref23;\n    return filteredChildren > 0 ? `${moreCount(children, filteredChildren)} ${plural(filteredChildren, \"asset\", \"assets\")}` : undefined;\n  },\n  assetChunk: (id, _ref24) => {\n    let {\n      formatChunkId\n    } = _ref24;\n    return formatChunkId(id);\n  },\n  assetChunkName: name => name,\n  assetChunkIdHint: name => name,\n  \"module.type\": type => type !== \"module\" ? type : undefined,\n  \"module.id\": (id, _ref25) => {\n    let {\n      formatModuleId\n    } = _ref25;\n    return isValidId(id) ? formatModuleId(id) : undefined;\n  },\n  \"module.name\": (name, _ref26) => {\n    let {\n      bold\n    } = _ref26;\n    const [prefix, resource] = getModuleName(name);\n    return `${prefix || \"\"}${bold(resource || \"\")}`;\n  },\n  \"module.identifier\": identifier => undefined,\n  \"module.layer\": (layer, _ref27) => {\n    let {\n      formatLayer\n    } = _ref27;\n    return layer ? formatLayer(layer) : undefined;\n  },\n  \"module.sizes\": printSizes,\n  \"module.chunks[]\": (id, _ref28) => {\n    let {\n      formatChunkId\n    } = _ref28;\n    return formatChunkId(id);\n  },\n  \"module.depth\": (depth, _ref29) => {\n    let {\n      formatFlag\n    } = _ref29;\n    return depth !== null ? formatFlag(`depth ${depth}`) : undefined;\n  },\n  \"module.cacheable\": (cacheable, _ref30) => {\n    let {\n      formatFlag,\n      red\n    } = _ref30;\n    return cacheable === false ? red(formatFlag(\"not cacheable\")) : undefined;\n  },\n  \"module.orphan\": (orphan, _ref31) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref31;\n    return orphan ? yellow(formatFlag(\"orphan\")) : undefined;\n  },\n  \"module.runtime\": (runtime, _ref32) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref32;\n    return runtime ? yellow(formatFlag(\"runtime\")) : undefined;\n  },\n  \"module.optional\": (optional, _ref33) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref33;\n    return optional ? yellow(formatFlag(\"optional\")) : undefined;\n  },\n  \"module.dependent\": (dependent, _ref34) => {\n    let {\n      formatFlag,\n      cyan\n    } = _ref34;\n    return dependent ? cyan(formatFlag(\"dependent\")) : undefined;\n  },\n  \"module.built\": (built, _ref35) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref35;\n    return built ? yellow(formatFlag(\"built\")) : undefined;\n  },\n  \"module.codeGenerated\": (codeGenerated, _ref36) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref36;\n    return codeGenerated ? yellow(formatFlag(\"code generated\")) : undefined;\n  },\n  \"module.buildTimeExecuted\": (buildTimeExecuted, _ref37) => {\n    let {\n      formatFlag,\n      green\n    } = _ref37;\n    return buildTimeExecuted ? green(formatFlag(\"build time executed\")) : undefined;\n  },\n  \"module.cached\": (cached, _ref38) => {\n    let {\n      formatFlag,\n      green\n    } = _ref38;\n    return cached ? green(formatFlag(\"cached\")) : undefined;\n  },\n  \"module.assets\": (assets, _ref39) => {\n    let {\n      formatFlag,\n      magenta\n    } = _ref39;\n    return assets && assets.length ? magenta(formatFlag(`${assets.length} ${plural(assets.length, \"asset\", \"assets\")}`)) : undefined;\n  },\n  \"module.warnings\": (warnings, _ref40) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref40;\n    return warnings === true ? yellow(formatFlag(\"warnings\")) : warnings ? yellow(formatFlag(`${warnings} ${plural(warnings, \"warning\", \"warnings\")}`)) : undefined;\n  },\n  \"module.errors\": (errors, _ref41) => {\n    let {\n      formatFlag,\n      red\n    } = _ref41;\n    return errors === true ? red(formatFlag(\"errors\")) : errors ? red(formatFlag(`${errors} ${plural(errors, \"error\", \"errors\")}`)) : undefined;\n  },\n  \"module.providedExports\": (providedExports, _ref42) => {\n    let {\n      formatFlag,\n      cyan\n    } = _ref42;\n    if (Array.isArray(providedExports)) {\n      if (providedExports.length === 0) return cyan(formatFlag(\"no exports\"));\n      return cyan(formatFlag(`exports: ${providedExports.join(\", \")}`));\n    }\n  },\n  \"module.usedExports\": (usedExports, _ref43) => {\n    let {\n      formatFlag,\n      cyan,\n      module\n    } = _ref43;\n    if (usedExports !== true) {\n      if (usedExports === null) return cyan(formatFlag(\"used exports unknown\"));\n      if (usedExports === false) return cyan(formatFlag(\"module unused\"));\n      if (Array.isArray(usedExports)) {\n        if (usedExports.length === 0) return cyan(formatFlag(\"no exports used\"));\n        const providedExportsCount = Array.isArray(module.providedExports) ? module.providedExports.length : null;\n        if (providedExportsCount !== null && providedExportsCount === usedExports.length) {\n          return cyan(formatFlag(\"all exports used\"));\n        } else {\n          return cyan(formatFlag(`only some exports used: ${usedExports.join(\", \")}`));\n        }\n      }\n    }\n  },\n  \"module.optimizationBailout[]\": (optimizationBailout, _ref44) => {\n    let {\n      yellow\n    } = _ref44;\n    return yellow(optimizationBailout);\n  },\n  \"module.issuerPath\": (issuerPath, _ref45) => {\n    let {\n      module\n    } = _ref45;\n    return module.profile ? undefined : \"\";\n  },\n  \"module.profile\": profile => undefined,\n  \"module.filteredModules\": (filteredModules, _ref46) => {\n    let {\n      module: {\n        modules\n      }\n    } = _ref46;\n    return filteredModules > 0 ? `${moreCount(modules, filteredModules)} nested ${plural(filteredModules, \"module\", \"modules\")}` : undefined;\n  },\n  \"module.filteredReasons\": (filteredReasons, _ref47) => {\n    let {\n      module: {\n        reasons\n      }\n    } = _ref47;\n    return filteredReasons > 0 ? `${moreCount(reasons, filteredReasons)} ${plural(filteredReasons, \"reason\", \"reasons\")}` : undefined;\n  },\n  \"module.filteredChildren\": (filteredChildren, _ref48) => {\n    let {\n      module: {\n        children\n      }\n    } = _ref48;\n    return filteredChildren > 0 ? `${moreCount(children, filteredChildren)} ${plural(filteredChildren, \"module\", \"modules\")}` : undefined;\n  },\n  \"module.separator!\": () => \"\\n\",\n  \"moduleIssuer.id\": (id, _ref49) => {\n    let {\n      formatModuleId\n    } = _ref49;\n    return formatModuleId(id);\n  },\n  \"moduleIssuer.profile.total\": (value, _ref50) => {\n    let {\n      formatTime\n    } = _ref50;\n    return formatTime(value);\n  },\n  \"moduleReason.type\": type => type,\n  \"moduleReason.userRequest\": (userRequest, _ref51) => {\n    let {\n      cyan\n    } = _ref51;\n    return cyan(getResourceName(userRequest));\n  },\n  \"moduleReason.moduleId\": (moduleId, _ref52) => {\n    let {\n      formatModuleId\n    } = _ref52;\n    return isValidId(moduleId) ? formatModuleId(moduleId) : undefined;\n  },\n  \"moduleReason.module\": (module, _ref53) => {\n    let {\n      magenta\n    } = _ref53;\n    return magenta(module);\n  },\n  \"moduleReason.loc\": loc => loc,\n  \"moduleReason.explanation\": (explanation, _ref54) => {\n    let {\n      cyan\n    } = _ref54;\n    return cyan(explanation);\n  },\n  \"moduleReason.active\": (active, _ref55) => {\n    let {\n      formatFlag\n    } = _ref55;\n    return active ? undefined : formatFlag(\"inactive\");\n  },\n  \"moduleReason.resolvedModule\": (module, _ref56) => {\n    let {\n      magenta\n    } = _ref56;\n    return magenta(module);\n  },\n  \"moduleReason.filteredChildren\": (filteredChildren, _ref57) => {\n    let {\n      moduleReason: {\n        children\n      }\n    } = _ref57;\n    return filteredChildren > 0 ? `${moreCount(children, filteredChildren)} ${plural(filteredChildren, \"reason\", \"reasons\")}` : undefined;\n  },\n  \"module.profile.total\": (value, _ref58) => {\n    let {\n      formatTime\n    } = _ref58;\n    return formatTime(value);\n  },\n  \"module.profile.resolving\": (value, _ref59) => {\n    let {\n      formatTime\n    } = _ref59;\n    return `resolving: ${formatTime(value)}`;\n  },\n  \"module.profile.restoring\": (value, _ref60) => {\n    let {\n      formatTime\n    } = _ref60;\n    return `restoring: ${formatTime(value)}`;\n  },\n  \"module.profile.integration\": (value, _ref61) => {\n    let {\n      formatTime\n    } = _ref61;\n    return `integration: ${formatTime(value)}`;\n  },\n  \"module.profile.building\": (value, _ref62) => {\n    let {\n      formatTime\n    } = _ref62;\n    return `building: ${formatTime(value)}`;\n  },\n  \"module.profile.storing\": (value, _ref63) => {\n    let {\n      formatTime\n    } = _ref63;\n    return `storing: ${formatTime(value)}`;\n  },\n  \"module.profile.additionalResolving\": (value, _ref64) => {\n    let {\n      formatTime\n    } = _ref64;\n    return value ? `additional resolving: ${formatTime(value)}` : undefined;\n  },\n  \"module.profile.additionalIntegration\": (value, _ref65) => {\n    let {\n      formatTime\n    } = _ref65;\n    return value ? `additional integration: ${formatTime(value)}` : undefined;\n  },\n  \"chunkGroup.kind!\": (_, _ref66) => {\n    let {\n      chunkGroupKind\n    } = _ref66;\n    return chunkGroupKind;\n  },\n  \"chunkGroup.separator!\": () => \"\\n\",\n  \"chunkGroup.name\": (name, _ref67) => {\n    let {\n      bold\n    } = _ref67;\n    return bold(name);\n  },\n  \"chunkGroup.isOverSizeLimit\": (isOverSizeLimit, _ref68) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref68;\n    return isOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined;\n  },\n  \"chunkGroup.assetsSize\": (size, _ref69) => {\n    let {\n      formatSize\n    } = _ref69;\n    return size ? formatSize(size) : undefined;\n  },\n  \"chunkGroup.auxiliaryAssetsSize\": (size, _ref70) => {\n    let {\n      formatSize\n    } = _ref70;\n    return size ? `(${formatSize(size)})` : undefined;\n  },\n  \"chunkGroup.filteredAssets\": (n, _ref71) => {\n    let {\n      chunkGroup: {\n        assets\n      }\n    } = _ref71;\n    return n > 0 ? `${moreCount(assets, n)} ${plural(n, \"asset\", \"assets\")}` : undefined;\n  },\n  \"chunkGroup.filteredAuxiliaryAssets\": (n, _ref72) => {\n    let {\n      chunkGroup: {\n        auxiliaryAssets\n      }\n    } = _ref72;\n    return n > 0 ? `${moreCount(auxiliaryAssets, n)} auxiliary ${plural(n, \"asset\", \"assets\")}` : undefined;\n  },\n  \"chunkGroup.is!\": () => \"=\",\n  \"chunkGroupAsset.name\": (asset, _ref73) => {\n    let {\n      green\n    } = _ref73;\n    return green(asset);\n  },\n  \"chunkGroupAsset.size\": (size, _ref74) => {\n    let {\n      formatSize,\n      chunkGroup\n    } = _ref74;\n    return chunkGroup.assets.length > 1 || chunkGroup.auxiliaryAssets && chunkGroup.auxiliaryAssets.length > 0 ? formatSize(size) : undefined;\n  },\n  \"chunkGroup.children\": (children, context, printer) => Array.isArray(children) ? undefined : printer.print(context.type, Object.keys(children).map(key => ({\n    type: key,\n    children: children[key]\n  })), context),\n  \"chunkGroupChildGroup.type\": type => `${type}:`,\n  \"chunkGroupChild.assets[]\": (file, _ref75) => {\n    let {\n      formatFilename\n    } = _ref75;\n    return formatFilename(file);\n  },\n  \"chunkGroupChild.chunks[]\": (id, _ref76) => {\n    let {\n      formatChunkId\n    } = _ref76;\n    return formatChunkId(id);\n  },\n  \"chunkGroupChild.name\": name => name ? `(name: ${name})` : undefined,\n  \"chunk.id\": (id, _ref77) => {\n    let {\n      formatChunkId\n    } = _ref77;\n    return formatChunkId(id);\n  },\n  \"chunk.files[]\": (file, _ref78) => {\n    let {\n      formatFilename\n    } = _ref78;\n    return formatFilename(file);\n  },\n  \"chunk.names[]\": name => name,\n  \"chunk.idHints[]\": name => name,\n  \"chunk.runtime[]\": name => name,\n  \"chunk.sizes\": (sizes, context) => printSizes(sizes, context),\n  \"chunk.parents[]\": (parents, context) => context.formatChunkId(parents, \"parent\"),\n  \"chunk.siblings[]\": (siblings, context) => context.formatChunkId(siblings, \"sibling\"),\n  \"chunk.children[]\": (children, context) => context.formatChunkId(children, \"child\"),\n  \"chunk.childrenByOrder\": (childrenByOrder, context, printer) => Array.isArray(childrenByOrder) ? undefined : printer.print(context.type, Object.keys(childrenByOrder).map(key => ({\n    type: key,\n    children: childrenByOrder[key]\n  })), context),\n  \"chunk.childrenByOrder[].type\": type => `${type}:`,\n  \"chunk.childrenByOrder[].children[]\": (id, _ref79) => {\n    let {\n      formatChunkId\n    } = _ref79;\n    return isValidId(id) ? formatChunkId(id) : undefined;\n  },\n  \"chunk.entry\": (entry, _ref80) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref80;\n    return entry ? yellow(formatFlag(\"entry\")) : undefined;\n  },\n  \"chunk.initial\": (initial, _ref81) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref81;\n    return initial ? yellow(formatFlag(\"initial\")) : undefined;\n  },\n  \"chunk.rendered\": (rendered, _ref82) => {\n    let {\n      formatFlag,\n      green\n    } = _ref82;\n    return rendered ? green(formatFlag(\"rendered\")) : undefined;\n  },\n  \"chunk.recorded\": (recorded, _ref83) => {\n    let {\n      formatFlag,\n      green\n    } = _ref83;\n    return recorded ? green(formatFlag(\"recorded\")) : undefined;\n  },\n  \"chunk.reason\": (reason, _ref84) => {\n    let {\n      yellow\n    } = _ref84;\n    return reason ? yellow(reason) : undefined;\n  },\n  \"chunk.filteredModules\": (filteredModules, _ref85) => {\n    let {\n      chunk: {\n        modules\n      }\n    } = _ref85;\n    return filteredModules > 0 ? `${moreCount(modules, filteredModules)} chunk ${plural(filteredModules, \"module\", \"modules\")}` : undefined;\n  },\n  \"chunk.separator!\": () => \"\\n\",\n  \"chunkOrigin.request\": request => request,\n  \"chunkOrigin.moduleId\": (moduleId, _ref86) => {\n    let {\n      formatModuleId\n    } = _ref86;\n    return isValidId(moduleId) ? formatModuleId(moduleId) : undefined;\n  },\n  \"chunkOrigin.moduleName\": (moduleName, _ref87) => {\n    let {\n      bold\n    } = _ref87;\n    return bold(moduleName);\n  },\n  \"chunkOrigin.loc\": loc => loc,\n  \"error.compilerPath\": (compilerPath, _ref88) => {\n    let {\n      bold\n    } = _ref88;\n    return compilerPath ? bold(`(${compilerPath})`) : undefined;\n  },\n  \"error.chunkId\": (chunkId, _ref89) => {\n    let {\n      formatChunkId\n    } = _ref89;\n    return isValidId(chunkId) ? formatChunkId(chunkId) : undefined;\n  },\n  \"error.chunkEntry\": (chunkEntry, _ref90) => {\n    let {\n      formatFlag\n    } = _ref90;\n    return chunkEntry ? formatFlag(\"entry\") : undefined;\n  },\n  \"error.chunkInitial\": (chunkInitial, _ref91) => {\n    let {\n      formatFlag\n    } = _ref91;\n    return chunkInitial ? formatFlag(\"initial\") : undefined;\n  },\n  \"error.file\": (file, _ref92) => {\n    let {\n      bold\n    } = _ref92;\n    return bold(file);\n  },\n  \"error.moduleName\": (moduleName, _ref93) => {\n    let {\n      bold\n    } = _ref93;\n    return moduleName.includes(\"!\") ? `${bold(moduleName.replace(/^(\\s|\\S)*!/, \"\"))} (${moduleName})` : `${bold(moduleName)}`;\n  },\n  \"error.loc\": (loc, _ref94) => {\n    let {\n      green\n    } = _ref94;\n    return green(loc);\n  },\n  \"error.message\": (message, _ref95) => {\n    let {\n      bold,\n      formatError\n    } = _ref95;\n    return message.includes(\"\\u001b[\") ? message : bold(formatError(message));\n  },\n  \"error.details\": (details, _ref96) => {\n    let {\n      formatError\n    } = _ref96;\n    return formatError(details);\n  },\n  \"error.stack\": stack => stack,\n  \"error.moduleTrace\": moduleTrace => undefined,\n  \"error.separator!\": () => \"\\n\",\n  \"loggingEntry(error).loggingEntry.message\": (message, _ref97) => {\n    let {\n      red\n    } = _ref97;\n    return mapLines(message, x => `<e> ${red(x)}`);\n  },\n  \"loggingEntry(warn).loggingEntry.message\": (message, _ref98) => {\n    let {\n      yellow\n    } = _ref98;\n    return mapLines(message, x => `<w> ${yellow(x)}`);\n  },\n  \"loggingEntry(info).loggingEntry.message\": (message, _ref99) => {\n    let {\n      green\n    } = _ref99;\n    return mapLines(message, x => `<i> ${green(x)}`);\n  },\n  \"loggingEntry(log).loggingEntry.message\": (message, _ref100) => {\n    let {\n      bold\n    } = _ref100;\n    return mapLines(message, x => `    ${bold(x)}`);\n  },\n  \"loggingEntry(debug).loggingEntry.message\": message => mapLines(message, x => `    ${x}`),\n  \"loggingEntry(trace).loggingEntry.message\": message => mapLines(message, x => `    ${x}`),\n  \"loggingEntry(status).loggingEntry.message\": (message, _ref101) => {\n    let {\n      magenta\n    } = _ref101;\n    return mapLines(message, x => `<s> ${magenta(x)}`);\n  },\n  \"loggingEntry(profile).loggingEntry.message\": (message, _ref102) => {\n    let {\n      magenta\n    } = _ref102;\n    return mapLines(message, x => `<p> ${magenta(x)}`);\n  },\n  \"loggingEntry(profileEnd).loggingEntry.message\": (message, _ref103) => {\n    let {\n      magenta\n    } = _ref103;\n    return mapLines(message, x => `</p> ${magenta(x)}`);\n  },\n  \"loggingEntry(time).loggingEntry.message\": (message, _ref104) => {\n    let {\n      magenta\n    } = _ref104;\n    return mapLines(message, x => `<t> ${magenta(x)}`);\n  },\n  \"loggingEntry(group).loggingEntry.message\": (message, _ref105) => {\n    let {\n      cyan\n    } = _ref105;\n    return mapLines(message, x => `<-> ${cyan(x)}`);\n  },\n  \"loggingEntry(groupCollapsed).loggingEntry.message\": (message, _ref106) => {\n    let {\n      cyan\n    } = _ref106;\n    return mapLines(message, x => `<+> ${cyan(x)}`);\n  },\n  \"loggingEntry(clear).loggingEntry\": () => \"    -------\",\n  \"loggingEntry(groupCollapsed).loggingEntry.children\": () => \"\",\n  \"loggingEntry.trace[]\": trace => trace ? mapLines(trace, x => `| ${x}`) : undefined,\n  \"moduleTraceItem.originName\": originName => originName,\n  loggingGroup: loggingGroup => loggingGroup.entries.length === 0 ? \"\" : undefined,\n  \"loggingGroup.debug\": (flag, _ref107) => {\n    let {\n      red\n    } = _ref107;\n    return flag ? red(\"DEBUG\") : undefined;\n  },\n  \"loggingGroup.name\": (name, _ref108) => {\n    let {\n      bold\n    } = _ref108;\n    return bold(`LOG from ${name}`);\n  },\n  \"loggingGroup.separator!\": () => \"\\n\",\n  \"loggingGroup.filteredEntries\": filteredEntries => filteredEntries > 0 ? `+ ${filteredEntries} hidden lines` : undefined,\n  \"moduleTraceDependency.loc\": loc => loc\n};\n\n/** @type {Record<string, string | Function>} */\nconst ITEM_NAMES = {\n  \"compilation.assets[]\": \"asset\",\n  \"compilation.modules[]\": \"module\",\n  \"compilation.chunks[]\": \"chunk\",\n  \"compilation.entrypoints[]\": \"chunkGroup\",\n  \"compilation.namedChunkGroups[]\": \"chunkGroup\",\n  \"compilation.errors[]\": \"error\",\n  \"compilation.warnings[]\": \"error\",\n  \"compilation.logging[]\": \"loggingGroup\",\n  \"compilation.children[]\": \"compilation\",\n  \"asset.related[]\": \"asset\",\n  \"asset.children[]\": \"asset\",\n  \"asset.chunks[]\": \"assetChunk\",\n  \"asset.auxiliaryChunks[]\": \"assetChunk\",\n  \"asset.chunkNames[]\": \"assetChunkName\",\n  \"asset.chunkIdHints[]\": \"assetChunkIdHint\",\n  \"asset.auxiliaryChunkNames[]\": \"assetChunkName\",\n  \"asset.auxiliaryChunkIdHints[]\": \"assetChunkIdHint\",\n  \"chunkGroup.assets[]\": \"chunkGroupAsset\",\n  \"chunkGroup.auxiliaryAssets[]\": \"chunkGroupAsset\",\n  \"chunkGroupChild.assets[]\": \"chunkGroupAsset\",\n  \"chunkGroupChild.auxiliaryAssets[]\": \"chunkGroupAsset\",\n  \"chunkGroup.children[]\": \"chunkGroupChildGroup\",\n  \"chunkGroupChildGroup.children[]\": \"chunkGroupChild\",\n  \"module.modules[]\": \"module\",\n  \"module.children[]\": \"module\",\n  \"module.reasons[]\": \"moduleReason\",\n  \"moduleReason.children[]\": \"moduleReason\",\n  \"module.issuerPath[]\": \"moduleIssuer\",\n  \"chunk.origins[]\": \"chunkOrigin\",\n  \"chunk.modules[]\": \"module\",\n  \"loggingGroup.entries[]\": logEntry => `loggingEntry(${logEntry.type}).loggingEntry`,\n  \"loggingEntry.children[]\": logEntry => `loggingEntry(${logEntry.type}).loggingEntry`,\n  \"error.moduleTrace[]\": \"moduleTraceItem\",\n  \"moduleTraceItem.dependencies[]\": \"moduleTraceDependency\"\n};\nconst ERROR_PREFERRED_ORDER = [\"compilerPath\", \"chunkId\", \"chunkEntry\", \"chunkInitial\", \"file\", \"separator!\", \"moduleName\", \"loc\", \"separator!\", \"message\", \"separator!\", \"details\", \"separator!\", \"stack\", \"separator!\", \"missing\", \"separator!\", \"moduleTrace\"];\n\n/** @type {Record<string, string[]>} */\nconst PREFERRED_ORDERS = {\n  compilation: [\"name\", \"hash\", \"version\", \"time\", \"builtAt\", \"env\", \"publicPath\", \"assets\", \"filteredAssets\", \"entrypoints\", \"namedChunkGroups\", \"chunks\", \"modules\", \"filteredModules\", \"children\", \"logging\", \"warnings\", \"warningsInChildren!\", \"filteredWarningDetailsCount\", \"errors\", \"errorsInChildren!\", \"filteredErrorDetailsCount\", \"summary!\", \"needAdditionalPass\"],\n  asset: [\"type\", \"name\", \"size\", \"chunks\", \"auxiliaryChunks\", \"emitted\", \"comparedForEmit\", \"cached\", \"info\", \"isOverSizeLimit\", \"chunkNames\", \"auxiliaryChunkNames\", \"chunkIdHints\", \"auxiliaryChunkIdHints\", \"related\", \"filteredRelated\", \"children\", \"filteredChildren\"],\n  \"asset.info\": [\"immutable\", \"sourceFilename\", \"javascriptModule\", \"development\", \"hotModuleReplacement\"],\n  chunkGroup: [\"kind!\", \"name\", \"isOverSizeLimit\", \"assetsSize\", \"auxiliaryAssetsSize\", \"is!\", \"assets\", \"filteredAssets\", \"auxiliaryAssets\", \"filteredAuxiliaryAssets\", \"separator!\", \"children\"],\n  chunkGroupAsset: [\"name\", \"size\"],\n  chunkGroupChildGroup: [\"type\", \"children\"],\n  chunkGroupChild: [\"assets\", \"chunks\", \"name\"],\n  module: [\"type\", \"name\", \"identifier\", \"id\", \"layer\", \"sizes\", \"chunks\", \"depth\", \"cacheable\", \"orphan\", \"runtime\", \"optional\", \"dependent\", \"built\", \"codeGenerated\", \"cached\", \"assets\", \"failed\", \"warnings\", \"errors\", \"children\", \"filteredChildren\", \"providedExports\", \"usedExports\", \"optimizationBailout\", \"reasons\", \"filteredReasons\", \"issuerPath\", \"profile\", \"modules\", \"filteredModules\"],\n  moduleReason: [\"active\", \"type\", \"userRequest\", \"moduleId\", \"module\", \"resolvedModule\", \"loc\", \"explanation\", \"children\", \"filteredChildren\"],\n  \"module.profile\": [\"total\", \"separator!\", \"resolving\", \"restoring\", \"integration\", \"building\", \"storing\", \"additionalResolving\", \"additionalIntegration\"],\n  chunk: [\"id\", \"runtime\", \"files\", \"names\", \"idHints\", \"sizes\", \"parents\", \"siblings\", \"children\", \"childrenByOrder\", \"entry\", \"initial\", \"rendered\", \"recorded\", \"reason\", \"separator!\", \"origins\", \"separator!\", \"modules\", \"separator!\", \"filteredModules\"],\n  chunkOrigin: [\"request\", \"moduleId\", \"moduleName\", \"loc\"],\n  error: ERROR_PREFERRED_ORDER,\n  warning: ERROR_PREFERRED_ORDER,\n  \"chunk.childrenByOrder[]\": [\"type\", \"children\"],\n  loggingGroup: [\"debug\", \"name\", \"separator!\", \"entries\", \"separator!\", \"filteredEntries\"],\n  loggingEntry: [\"message\", \"trace\", \"children\"]\n};\nconst itemsJoinOneLine = items => items.filter(Boolean).join(\" \");\nconst itemsJoinOneLineBrackets = items => items.length > 0 ? `(${items.filter(Boolean).join(\" \")})` : undefined;\nconst itemsJoinMoreSpacing = items => items.filter(Boolean).join(\"\\n\\n\");\nconst itemsJoinComma = items => items.filter(Boolean).join(\", \");\nconst itemsJoinCommaBrackets = items => items.length > 0 ? `(${items.filter(Boolean).join(\", \")})` : undefined;\nconst itemsJoinCommaBracketsWithName = name => items => items.length > 0 ? `(${name}: ${items.filter(Boolean).join(\", \")})` : undefined;\n\n/** @type {Record<string, (items: string[]) => string>} */\nconst SIMPLE_ITEMS_JOINER = {\n  \"chunk.parents\": itemsJoinOneLine,\n  \"chunk.siblings\": itemsJoinOneLine,\n  \"chunk.children\": itemsJoinOneLine,\n  \"chunk.names\": itemsJoinCommaBrackets,\n  \"chunk.idHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n  \"chunk.runtime\": itemsJoinCommaBracketsWithName(\"runtime\"),\n  \"chunk.files\": itemsJoinComma,\n  \"chunk.childrenByOrder\": itemsJoinOneLine,\n  \"chunk.childrenByOrder[].children\": itemsJoinOneLine,\n  \"chunkGroup.assets\": itemsJoinOneLine,\n  \"chunkGroup.auxiliaryAssets\": itemsJoinOneLineBrackets,\n  \"chunkGroupChildGroup.children\": itemsJoinComma,\n  \"chunkGroupChild.assets\": itemsJoinOneLine,\n  \"chunkGroupChild.auxiliaryAssets\": itemsJoinOneLineBrackets,\n  \"asset.chunks\": itemsJoinComma,\n  \"asset.auxiliaryChunks\": itemsJoinCommaBrackets,\n  \"asset.chunkNames\": itemsJoinCommaBracketsWithName(\"name\"),\n  \"asset.auxiliaryChunkNames\": itemsJoinCommaBracketsWithName(\"auxiliary name\"),\n  \"asset.chunkIdHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n  \"asset.auxiliaryChunkIdHints\": itemsJoinCommaBracketsWithName(\"auxiliary id hint\"),\n  \"module.chunks\": itemsJoinOneLine,\n  \"module.issuerPath\": items => items.filter(Boolean).map(item => `${item} ->`).join(\" \"),\n  \"compilation.errors\": itemsJoinMoreSpacing,\n  \"compilation.warnings\": itemsJoinMoreSpacing,\n  \"compilation.logging\": itemsJoinMoreSpacing,\n  \"compilation.children\": items => indent(itemsJoinMoreSpacing(items), \"  \"),\n  \"moduleTraceItem.dependencies\": itemsJoinOneLine,\n  \"loggingEntry.children\": items => indent(items.filter(Boolean).join(\"\\n\"), \"  \", false)\n};\nconst joinOneLine = items => items.map(item => item.content).filter(Boolean).join(\" \");\nconst joinInBrackets = items => {\n  const res = [];\n  let mode = 0;\n  for (const item of items) {\n    if (item.element === \"separator!\") {\n      switch (mode) {\n        case 0:\n        case 1:\n          mode += 2;\n          break;\n        case 4:\n          res.push(\")\");\n          mode = 3;\n          break;\n      }\n    }\n    if (!item.content) continue;\n    switch (mode) {\n      case 0:\n        mode = 1;\n        break;\n      case 1:\n        res.push(\" \");\n        break;\n      case 2:\n        res.push(\"(\");\n        mode = 4;\n        break;\n      case 3:\n        res.push(\" (\");\n        mode = 4;\n        break;\n      case 4:\n        res.push(\", \");\n        break;\n    }\n    res.push(item.content);\n  }\n  if (mode === 4) res.push(\")\");\n  return res.join(\"\");\n};\nconst indent = (str, prefix, noPrefixInFirstLine) => {\n  const rem = str.replace(/\\n([^\\n])/g, \"\\n\" + prefix + \"$1\");\n  if (noPrefixInFirstLine) return rem;\n  const ind = str[0] === \"\\n\" ? \"\" : prefix;\n  return ind + rem;\n};\nconst joinExplicitNewLine = (items, indenter) => {\n  let firstInLine = true;\n  let first = true;\n  return items.map(item => {\n    if (!item || !item.content) return;\n    let content = indent(item.content, first ? \"\" : indenter, !firstInLine);\n    if (firstInLine) {\n      content = content.replace(/^\\n+/, \"\");\n    }\n    if (!content) return;\n    first = false;\n    const noJoiner = firstInLine || content.startsWith(\"\\n\");\n    firstInLine = content.endsWith(\"\\n\");\n    return noJoiner ? content : \" \" + content;\n  }).filter(Boolean).join(\"\").trim();\n};\nconst joinError = error => (items, _ref109) => {\n  let {\n    red,\n    yellow\n  } = _ref109;\n  return `${error ? red(\"ERROR\") : yellow(\"WARNING\")} in ${joinExplicitNewLine(items, \"\")}`;\n};\n\n/** @type {Record<string, (items: ({ element: string, content: string })[], context: StatsPrinterContext) => string>} */\nconst SIMPLE_ELEMENT_JOINERS = {\n  compilation: items => {\n    const result = [];\n    let lastNeedMore = false;\n    for (const item of items) {\n      if (!item.content) continue;\n      const needMoreSpace = item.element === \"warnings\" || item.element === \"filteredWarningDetailsCount\" || item.element === \"errors\" || item.element === \"filteredErrorDetailsCount\" || item.element === \"logging\";\n      if (result.length !== 0) {\n        result.push(needMoreSpace || lastNeedMore ? \"\\n\\n\" : \"\\n\");\n      }\n      result.push(item.content);\n      lastNeedMore = needMoreSpace;\n    }\n    if (lastNeedMore) result.push(\"\\n\");\n    return result.join(\"\");\n  },\n  asset: items => joinExplicitNewLine(items.map(item => {\n    if ((item.element === \"related\" || item.element === \"children\") && item.content) {\n      return {\n        ...item,\n        content: `\\n${item.content}\\n`\n      };\n    }\n    return item;\n  }), \"  \"),\n  \"asset.info\": joinOneLine,\n  module: (items, _ref110) => {\n    let {\n      module\n    } = _ref110;\n    let hasName = false;\n    return joinExplicitNewLine(items.map(item => {\n      switch (item.element) {\n        case \"id\":\n          if (module.id === module.name) {\n            if (hasName) return false;\n            if (item.content) hasName = true;\n          }\n          break;\n        case \"name\":\n          if (hasName) return false;\n          if (item.content) hasName = true;\n          break;\n        case \"providedExports\":\n        case \"usedExports\":\n        case \"optimizationBailout\":\n        case \"reasons\":\n        case \"issuerPath\":\n        case \"profile\":\n        case \"children\":\n        case \"modules\":\n          if (item.content) {\n            return {\n              ...item,\n              content: `\\n${item.content}\\n`\n            };\n          }\n          break;\n      }\n      return item;\n    }), \"  \");\n  },\n  chunk: items => {\n    let hasEntry = false;\n    return \"chunk \" + joinExplicitNewLine(items.filter(item => {\n      switch (item.element) {\n        case \"entry\":\n          if (item.content) hasEntry = true;\n          break;\n        case \"initial\":\n          if (hasEntry) return false;\n          break;\n      }\n      return true;\n    }), \"  \");\n  },\n  \"chunk.childrenByOrder[]\": items => `(${joinOneLine(items)})`,\n  chunkGroup: items => joinExplicitNewLine(items, \"  \"),\n  chunkGroupAsset: joinOneLine,\n  chunkGroupChildGroup: joinOneLine,\n  chunkGroupChild: joinOneLine,\n  // moduleReason: (items, { moduleReason }) => {\n  // \tlet hasName = false;\n  // \treturn joinOneLine(\n  // \t\titems.filter(item => {\n  // \t\t\tswitch (item.element) {\n  // \t\t\t\tcase \"moduleId\":\n  // \t\t\t\t\tif (moduleReason.moduleId === moduleReason.module && item.content)\n  // \t\t\t\t\t\thasName = true;\n  // \t\t\t\t\tbreak;\n  // \t\t\t\tcase \"module\":\n  // \t\t\t\t\tif (hasName) return false;\n  // \t\t\t\t\tbreak;\n  // \t\t\t\tcase \"resolvedModule\":\n  // \t\t\t\t\treturn (\n  // \t\t\t\t\t\tmoduleReason.module !== moduleReason.resolvedModule &&\n  // \t\t\t\t\t\titem.content\n  // \t\t\t\t\t);\n  // \t\t\t}\n  // \t\t\treturn true;\n  // \t\t})\n  // \t);\n  // },\n  moduleReason: (items, _ref111) => {\n    let {\n      moduleReason\n    } = _ref111;\n    let hasName = false;\n    return joinExplicitNewLine(items.map(item => {\n      switch (item.element) {\n        case \"moduleId\":\n          if (moduleReason.moduleId === moduleReason.module && item.content) hasName = true;\n          break;\n        case \"module\":\n          if (hasName) return false;\n          break;\n        case \"resolvedModule\":\n          if (moduleReason.module === moduleReason.resolvedModule) return false;\n          break;\n        case \"children\":\n          if (item.content) {\n            return {\n              ...item,\n              content: `\\n${item.content}\\n`\n            };\n          }\n          break;\n      }\n      return item;\n    }), \"  \");\n  },\n  \"module.profile\": joinInBrackets,\n  moduleIssuer: joinOneLine,\n  chunkOrigin: items => \"> \" + joinOneLine(items),\n  \"errors[].error\": joinError(true),\n  \"warnings[].error\": joinError(false),\n  loggingGroup: items => joinExplicitNewLine(items, \"\").trimEnd(),\n  moduleTraceItem: items => \" @ \" + joinOneLine(items),\n  moduleTraceDependency: joinOneLine\n};\nconst AVAILABLE_COLORS = {\n  bold: \"\\u001b[1m\",\n  yellow: \"\\u001b[1m\\u001b[33m\",\n  red: \"\\u001b[1m\\u001b[31m\",\n  green: \"\\u001b[1m\\u001b[32m\",\n  cyan: \"\\u001b[1m\\u001b[36m\",\n  magenta: \"\\u001b[1m\\u001b[35m\"\n};\nconst AVAILABLE_FORMATS = {\n  formatChunkId: (id, _ref112, direction) => {\n    let {\n      yellow\n    } = _ref112;\n    switch (direction) {\n      case \"parent\":\n        return `<{${yellow(id)}}>`;\n      case \"sibling\":\n        return `={${yellow(id)}}=`;\n      case \"child\":\n        return `>{${yellow(id)}}<`;\n      default:\n        return `{${yellow(id)}}`;\n    }\n  },\n  formatModuleId: id => `[${id}]`,\n  formatFilename: (filename, _ref113, oversize) => {\n    let {\n      green,\n      yellow\n    } = _ref113;\n    return (oversize ? yellow : green)(filename);\n  },\n  formatFlag: flag => `[${flag}]`,\n  formatLayer: layer => `(in ${layer})`,\n  formatSize: require(\"../SizeFormatHelpers\").formatSize,\n  formatDateTime: (dateTime, _ref114) => {\n    let {\n      bold\n    } = _ref114;\n    const d = new Date(dateTime);\n    const x = twoDigit;\n    const date = `${d.getFullYear()}-${x(d.getMonth() + 1)}-${x(d.getDate())}`;\n    const time = `${x(d.getHours())}:${x(d.getMinutes())}:${x(d.getSeconds())}`;\n    return `${date} ${bold(time)}`;\n  },\n  formatTime: (time, _ref115, boldQuantity) => {\n    let {\n      timeReference,\n      bold,\n      green,\n      yellow,\n      red\n    } = _ref115;\n    const unit = \" ms\";\n    if (timeReference && time !== timeReference) {\n      const times = [timeReference / 2, timeReference / 4, timeReference / 8, timeReference / 16];\n      if (time < times[3]) return `${time}${unit}`;else if (time < times[2]) return bold(`${time}${unit}`);else if (time < times[1]) return green(`${time}${unit}`);else if (time < times[0]) return yellow(`${time}${unit}`);else return red(`${time}${unit}`);\n    } else {\n      return `${boldQuantity ? bold(time) : time}${unit}`;\n    }\n  },\n  formatError: (message, _ref116) => {\n    let {\n      green,\n      yellow,\n      red\n    } = _ref116;\n    if (message.includes(\"\\u001b[\")) return message;\n    const highlights = [{\n      regExp: /(Did you mean .+)/g,\n      format: green\n    }, {\n      regExp: /(Set 'mode' option to 'development' or 'production')/g,\n      format: green\n    }, {\n      regExp: /(\\(module has no exports\\))/g,\n      format: red\n    }, {\n      regExp: /\\(possible exports: (.+)\\)/g,\n      format: green\n    }, {\n      regExp: /(?:^|\\n)(.* doesn't exist)/g,\n      format: red\n    }, {\n      regExp: /('\\w+' option has not been set)/g,\n      format: red\n    }, {\n      regExp: /(Emitted value instead of an instance of Error)/g,\n      format: yellow\n    }, {\n      regExp: /(Used? .+ instead)/gi,\n      format: yellow\n    }, {\n      regExp: /\\b(deprecated|must|required)\\b/g,\n      format: yellow\n    }, {\n      regExp: /\\b(BREAKING CHANGE)\\b/gi,\n      format: red\n    }, {\n      regExp: /\\b(error|failed|unexpected|invalid|not found|not supported|not available|not possible|not implemented|doesn't support|conflict|conflicting|not existing|duplicate)\\b/gi,\n      format: red\n    }];\n    for (const {\n      regExp,\n      format\n    } of highlights) {\n      message = message.replace(regExp, (match, content) => {\n        return match.replace(content, format(content));\n      });\n    }\n    return message;\n  }\n};\nconst RESULT_MODIFIER = {\n  \"module.modules\": result => {\n    return indent(result, \"| \");\n  }\n};\nconst createOrder = (array, preferredOrder) => {\n  const originalArray = array.slice();\n  const set = new Set(array);\n  const usedSet = new Set();\n  array.length = 0;\n  for (const element of preferredOrder) {\n    if (element.endsWith(\"!\") || set.has(element)) {\n      array.push(element);\n      usedSet.add(element);\n    }\n  }\n  for (const element of originalArray) {\n    if (!usedSet.has(element)) {\n      array.push(element);\n    }\n  }\n  return array;\n};\nclass DefaultStatsPrinterPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"DefaultStatsPrinterPlugin\", compilation => {\n      compilation.hooks.statsPrinter.tap(\"DefaultStatsPrinterPlugin\", (stats, options, context) => {\n        // Put colors into context\n        stats.hooks.print.for(\"compilation\").tap(\"DefaultStatsPrinterPlugin\", (compilation, context) => {\n          for (const color of Object.keys(AVAILABLE_COLORS)) {\n            let start;\n            if (options.colors) {\n              if (typeof options.colors === \"object\" && typeof options.colors[color] === \"string\") {\n                start = options.colors[color];\n              } else {\n                start = AVAILABLE_COLORS[color];\n              }\n            }\n            if (start) {\n              context[color] = str => `${start}${typeof str === \"string\" ? str.replace(/((\\u001b\\[39m|\\u001b\\[22m|\\u001b\\[0m)+)/g, `$1${start}`) : str}\\u001b[39m\\u001b[22m`;\n            } else {\n              context[color] = str => str;\n            }\n          }\n          for (const format of Object.keys(AVAILABLE_FORMATS)) {\n            context[format] = function (content) {\n              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                args[_key - 1] = arguments[_key];\n              }\n              return AVAILABLE_FORMATS[format](content, context, ...args);\n            };\n          }\n          context.timeReference = compilation.time;\n        });\n        for (const key of Object.keys(SIMPLE_PRINTERS)) {\n          stats.hooks.print.for(key).tap(\"DefaultStatsPrinterPlugin\", (obj, ctx) => SIMPLE_PRINTERS[key](obj, ctx, stats));\n        }\n        for (const key of Object.keys(PREFERRED_ORDERS)) {\n          const preferredOrder = PREFERRED_ORDERS[key];\n          stats.hooks.sortElements.for(key).tap(\"DefaultStatsPrinterPlugin\", (elements, context) => {\n            createOrder(elements, preferredOrder);\n          });\n        }\n        for (const key of Object.keys(ITEM_NAMES)) {\n          const itemName = ITEM_NAMES[key];\n          stats.hooks.getItemName.for(key).tap(\"DefaultStatsPrinterPlugin\", typeof itemName === \"string\" ? () => itemName : itemName);\n        }\n        for (const key of Object.keys(SIMPLE_ITEMS_JOINER)) {\n          const joiner = SIMPLE_ITEMS_JOINER[key];\n          stats.hooks.printItems.for(key).tap(\"DefaultStatsPrinterPlugin\", joiner);\n        }\n        for (const key of Object.keys(SIMPLE_ELEMENT_JOINERS)) {\n          const joiner = SIMPLE_ELEMENT_JOINERS[key];\n          stats.hooks.printElements.for(key).tap(\"DefaultStatsPrinterPlugin\", joiner);\n        }\n        for (const key of Object.keys(RESULT_MODIFIER)) {\n          const modifier = RESULT_MODIFIER[key];\n          stats.hooks.result.for(key).tap(\"DefaultStatsPrinterPlugin\", modifier);\n        }\n      });\n    });\n  }\n}\nmodule.exports = DefaultStatsPrinterPlugin;","map":{"version":3,"names":["DATA_URI_CONTENT_LENGTH","plural","n","singular","printSizes","sizes","formatSize","keys","Object","length","map","key","join","getResourceName","resource","dataUrl","exec","len","slice","Math","min","getModuleName","name","prefix","mapLines","str","fn","split","twoDigit","isValidId","id","moreCount","list","count","SIMPLE_PRINTERS","_","type","bold","green","red","yellow","formatDateTime","formatTime","compilation","hash","version","time","builtAt","errorsCount","warningsCount","root","warningsMessage","errorsMessage","timeMessage","hashMessage","builtAtMessage","versionMessage","nameMessage","subjectMessage","statusMessage","undefined","env","JSON","stringify","publicPath","entrypoints","context","printer","Array","isArray","print","values","chunkGroupKind","namedChunkGroups","chunkGroups","filter","group","prototype","hasOwnProperty","call","filteredModules","modules","filteredAssets","assets","logging","entries","value","children","warnings","childWarnings","errors","childErrors","formatFilename","asset","isOverSizeLimit","size","emitted","formatFlag","comparedForEmit","cached","immutable","javascriptModule","sourceFilename","development","hotModuleReplacement","filteredRelated","related","filteredChildren","assetChunk","formatChunkId","assetChunkName","assetChunkIdHint","formatModuleId","identifier","layer","formatLayer","depth","cacheable","orphan","runtime","optional","dependent","cyan","built","codeGenerated","buildTimeExecuted","magenta","providedExports","usedExports","module","providedExportsCount","optimizationBailout","issuerPath","profile","filteredReasons","reasons","userRequest","moduleId","loc","explanation","active","moduleReason","chunkGroup","auxiliaryAssets","file","parents","siblings","childrenByOrder","entry","initial","rendered","recorded","reason","chunk","request","moduleName","compilerPath","chunkId","chunkEntry","chunkInitial","includes","replace","message","formatError","details","stack","moduleTrace","x","trace","originName","loggingGroup","flag","filteredEntries","ITEM_NAMES","logEntry","ERROR_PREFERRED_ORDER","PREFERRED_ORDERS","chunkGroupAsset","chunkGroupChildGroup","chunkGroupChild","chunkOrigin","error","warning","loggingEntry","itemsJoinOneLine","items","Boolean","itemsJoinOneLineBrackets","itemsJoinMoreSpacing","itemsJoinComma","itemsJoinCommaBrackets","itemsJoinCommaBracketsWithName","SIMPLE_ITEMS_JOINER","item","indent","joinOneLine","content","joinInBrackets","res","mode","element","push","noPrefixInFirstLine","rem","ind","joinExplicitNewLine","indenter","firstInLine","first","noJoiner","startsWith","endsWith","trim","joinError","SIMPLE_ELEMENT_JOINERS","result","lastNeedMore","needMoreSpace","hasName","hasEntry","resolvedModule","moduleIssuer","trimEnd","moduleTraceItem","moduleTraceDependency","AVAILABLE_COLORS","AVAILABLE_FORMATS","direction","filename","oversize","require","dateTime","d","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","boldQuantity","timeReference","unit","times","highlights","regExp","format","match","RESULT_MODIFIER","createOrder","array","preferredOrder","originalArray","set","Set","usedSet","has","add","DefaultStatsPrinterPlugin","apply","compiler","hooks","tap","statsPrinter","stats","options","for","color","start","colors","args","obj","ctx","sortElements","elements","itemName","getItemName","joiner","printItems","printElements","modifier","exports"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/webpack/lib/stats/DefaultStatsPrinterPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"./StatsPrinter\")} StatsPrinter */\n/** @typedef {import(\"./StatsPrinter\").StatsPrinterContext} StatsPrinterContext */\n\nconst DATA_URI_CONTENT_LENGTH = 16;\n\nconst plural = (n, singular, plural) => (n === 1 ? singular : plural);\n\n/**\n * @param {Record<string, number>} sizes sizes by source type\n * @param {Object} options options\n * @param {(number) => string=} options.formatSize size formatter\n * @returns {string} text\n */\nconst printSizes = (sizes, { formatSize = n => `${n}` }) => {\n\tconst keys = Object.keys(sizes);\n\tif (keys.length > 1) {\n\t\treturn keys.map(key => `${formatSize(sizes[key])} (${key})`).join(\" \");\n\t} else if (keys.length === 1) {\n\t\treturn formatSize(sizes[keys[0]]);\n\t}\n};\n\nconst getResourceName = resource => {\n\tconst dataUrl = /^data:[^,]+,/.exec(resource);\n\tif (!dataUrl) return resource;\n\n\tconst len = dataUrl[0].length + DATA_URI_CONTENT_LENGTH;\n\tif (resource.length < len) return resource;\n\treturn `${resource.slice(\n\t\t0,\n\t\tMath.min(resource.length - /* '..'.length */ 2, len)\n\t)}..`;\n};\n\nconst getModuleName = name => {\n\tconst [, prefix, resource] = /^(.*!)?([^!]*)$/.exec(name);\n\treturn [prefix, getResourceName(resource)];\n};\n\nconst mapLines = (str, fn) => str.split(\"\\n\").map(fn).join(\"\\n\");\n\n/**\n * @param {number} n a number\n * @returns {string} number as two digit string, leading 0\n */\nconst twoDigit = n => (n >= 10 ? `${n}` : `0${n}`);\n\nconst isValidId = id => {\n\treturn typeof id === \"number\" || id;\n};\n\nconst moreCount = (list, count) => {\n\treturn list && list.length > 0 ? `+ ${count}` : `${count}`;\n};\n\n/** @type {Record<string, (thing: any, context: StatsPrinterContext, printer: StatsPrinter) => string | void>} */\nconst SIMPLE_PRINTERS = {\n\t\"compilation.summary!\": (\n\t\t_,\n\t\t{\n\t\t\ttype,\n\t\t\tbold,\n\t\t\tgreen,\n\t\t\tred,\n\t\t\tyellow,\n\t\t\tformatDateTime,\n\t\t\tformatTime,\n\t\t\tcompilation: {\n\t\t\t\tname,\n\t\t\t\thash,\n\t\t\t\tversion,\n\t\t\t\ttime,\n\t\t\t\tbuiltAt,\n\t\t\t\terrorsCount,\n\t\t\t\twarningsCount\n\t\t\t}\n\t\t}\n\t) => {\n\t\tconst root = type === \"compilation.summary!\";\n\t\tconst warningsMessage =\n\t\t\twarningsCount > 0\n\t\t\t\t? yellow(\n\t\t\t\t\t\t`${warningsCount} ${plural(warningsCount, \"warning\", \"warnings\")}`\n\t\t\t\t  )\n\t\t\t\t: \"\";\n\t\tconst errorsMessage =\n\t\t\terrorsCount > 0\n\t\t\t\t? red(`${errorsCount} ${plural(errorsCount, \"error\", \"errors\")}`)\n\t\t\t\t: \"\";\n\t\tconst timeMessage = root && time ? ` in ${formatTime(time)}` : \"\";\n\t\tconst hashMessage = hash ? ` (${hash})` : \"\";\n\t\tconst builtAtMessage =\n\t\t\troot && builtAt ? `${formatDateTime(builtAt)}: ` : \"\";\n\t\tconst versionMessage = root && version ? `webpack ${version}` : \"\";\n\t\tconst nameMessage =\n\t\t\troot && name\n\t\t\t\t? bold(name)\n\t\t\t\t: name\n\t\t\t\t? `Child ${bold(name)}`\n\t\t\t\t: root\n\t\t\t\t? \"\"\n\t\t\t\t: \"Child\";\n\t\tconst subjectMessage =\n\t\t\tnameMessage && versionMessage\n\t\t\t\t? `${nameMessage} (${versionMessage})`\n\t\t\t\t: versionMessage || nameMessage || \"webpack\";\n\t\tlet statusMessage;\n\t\tif (errorsMessage && warningsMessage) {\n\t\t\tstatusMessage = `compiled with ${errorsMessage} and ${warningsMessage}`;\n\t\t} else if (errorsMessage) {\n\t\t\tstatusMessage = `compiled with ${errorsMessage}`;\n\t\t} else if (warningsMessage) {\n\t\t\tstatusMessage = `compiled with ${warningsMessage}`;\n\t\t} else if (errorsCount === 0 && warningsCount === 0) {\n\t\t\tstatusMessage = `compiled ${green(\"successfully\")}`;\n\t\t} else {\n\t\t\tstatusMessage = `compiled`;\n\t\t}\n\t\tif (\n\t\t\tbuiltAtMessage ||\n\t\t\tversionMessage ||\n\t\t\terrorsMessage ||\n\t\t\twarningsMessage ||\n\t\t\t(errorsCount === 0 && warningsCount === 0) ||\n\t\t\ttimeMessage ||\n\t\t\thashMessage\n\t\t)\n\t\t\treturn `${builtAtMessage}${subjectMessage} ${statusMessage}${timeMessage}${hashMessage}`;\n\t},\n\t\"compilation.filteredWarningDetailsCount\": count =>\n\t\tcount\n\t\t\t? `${count} ${plural(\n\t\t\t\t\tcount,\n\t\t\t\t\t\"warning has\",\n\t\t\t\t\t\"warnings have\"\n\t\t\t  )} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.`\n\t\t\t: undefined,\n\t\"compilation.filteredErrorDetailsCount\": (count, { yellow }) =>\n\t\tcount\n\t\t\t? yellow(\n\t\t\t\t\t`${count} ${plural(\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\t\"error has\",\n\t\t\t\t\t\t\"errors have\"\n\t\t\t\t\t)} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.`\n\t\t\t  )\n\t\t\t: undefined,\n\t\"compilation.env\": (env, { bold }) =>\n\t\tenv\n\t\t\t? `Environment (--env): ${bold(JSON.stringify(env, null, 2))}`\n\t\t\t: undefined,\n\t\"compilation.publicPath\": (publicPath, { bold }) =>\n\t\t`PublicPath: ${bold(publicPath || \"(none)\")}`,\n\t\"compilation.entrypoints\": (entrypoints, context, printer) =>\n\t\tArray.isArray(entrypoints)\n\t\t\t? undefined\n\t\t\t: printer.print(context.type, Object.values(entrypoints), {\n\t\t\t\t\t...context,\n\t\t\t\t\tchunkGroupKind: \"Entrypoint\"\n\t\t\t  }),\n\t\"compilation.namedChunkGroups\": (namedChunkGroups, context, printer) => {\n\t\tif (!Array.isArray(namedChunkGroups)) {\n\t\t\tconst {\n\t\t\t\tcompilation: { entrypoints }\n\t\t\t} = context;\n\t\t\tlet chunkGroups = Object.values(namedChunkGroups);\n\t\t\tif (entrypoints) {\n\t\t\t\tchunkGroups = chunkGroups.filter(\n\t\t\t\t\tgroup =>\n\t\t\t\t\t\t!Object.prototype.hasOwnProperty.call(entrypoints, group.name)\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn printer.print(context.type, chunkGroups, {\n\t\t\t\t...context,\n\t\t\t\tchunkGroupKind: \"Chunk Group\"\n\t\t\t});\n\t\t}\n\t},\n\t\"compilation.assetsByChunkName\": () => \"\",\n\n\t\"compilation.filteredModules\": (\n\t\tfilteredModules,\n\t\t{ compilation: { modules } }\n\t) =>\n\t\tfilteredModules > 0\n\t\t\t? `${moreCount(modules, filteredModules)} ${plural(\n\t\t\t\t\tfilteredModules,\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"modules\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"compilation.filteredAssets\": (filteredAssets, { compilation: { assets } }) =>\n\t\tfilteredAssets > 0\n\t\t\t? `${moreCount(assets, filteredAssets)} ${plural(\n\t\t\t\t\tfilteredAssets,\n\t\t\t\t\t\"asset\",\n\t\t\t\t\t\"assets\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"compilation.logging\": (logging, context, printer) =>\n\t\tArray.isArray(logging)\n\t\t\t? undefined\n\t\t\t: printer.print(\n\t\t\t\t\tcontext.type,\n\t\t\t\t\tObject.entries(logging).map(([name, value]) => ({ ...value, name })),\n\t\t\t\t\tcontext\n\t\t\t  ),\n\t\"compilation.warningsInChildren!\": (_, { yellow, compilation }) => {\n\t\tif (\n\t\t\t!compilation.children &&\n\t\t\tcompilation.warningsCount > 0 &&\n\t\t\tcompilation.warnings\n\t\t) {\n\t\t\tconst childWarnings =\n\t\t\t\tcompilation.warningsCount - compilation.warnings.length;\n\t\t\tif (childWarnings > 0) {\n\t\t\t\treturn yellow(\n\t\t\t\t\t`${childWarnings} ${plural(\n\t\t\t\t\t\tchildWarnings,\n\t\t\t\t\t\t\"WARNING\",\n\t\t\t\t\t\t\"WARNINGS\"\n\t\t\t\t\t)} in child compilations${\n\t\t\t\t\t\tcompilation.children\n\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t: \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"\n\t\t\t\t\t}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\t\"compilation.errorsInChildren!\": (_, { red, compilation }) => {\n\t\tif (\n\t\t\t!compilation.children &&\n\t\t\tcompilation.errorsCount > 0 &&\n\t\t\tcompilation.errors\n\t\t) {\n\t\t\tconst childErrors = compilation.errorsCount - compilation.errors.length;\n\t\t\tif (childErrors > 0) {\n\t\t\t\treturn red(\n\t\t\t\t\t`${childErrors} ${plural(\n\t\t\t\t\t\tchildErrors,\n\t\t\t\t\t\t\"ERROR\",\n\t\t\t\t\t\t\"ERRORS\"\n\t\t\t\t\t)} in child compilations${\n\t\t\t\t\t\tcompilation.children\n\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t: \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"\n\t\t\t\t\t}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\n\t\"asset.type\": type => type,\n\t\"asset.name\": (name, { formatFilename, asset: { isOverSizeLimit } }) =>\n\t\tformatFilename(name, isOverSizeLimit),\n\t\"asset.size\": (\n\t\tsize,\n\t\t{ asset: { isOverSizeLimit }, yellow, green, formatSize }\n\t) => (isOverSizeLimit ? yellow(formatSize(size)) : formatSize(size)),\n\t\"asset.emitted\": (emitted, { green, formatFlag }) =>\n\t\temitted ? green(formatFlag(\"emitted\")) : undefined,\n\t\"asset.comparedForEmit\": (comparedForEmit, { yellow, formatFlag }) =>\n\t\tcomparedForEmit ? yellow(formatFlag(\"compared for emit\")) : undefined,\n\t\"asset.cached\": (cached, { green, formatFlag }) =>\n\t\tcached ? green(formatFlag(\"cached\")) : undefined,\n\t\"asset.isOverSizeLimit\": (isOverSizeLimit, { yellow, formatFlag }) =>\n\t\tisOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined,\n\n\t\"asset.info.immutable\": (immutable, { green, formatFlag }) =>\n\t\timmutable ? green(formatFlag(\"immutable\")) : undefined,\n\t\"asset.info.javascriptModule\": (javascriptModule, { formatFlag }) =>\n\t\tjavascriptModule ? formatFlag(\"javascript module\") : undefined,\n\t\"asset.info.sourceFilename\": (sourceFilename, { formatFlag }) =>\n\t\tsourceFilename\n\t\t\t? formatFlag(\n\t\t\t\t\tsourceFilename === true\n\t\t\t\t\t\t? \"from source file\"\n\t\t\t\t\t\t: `from: ${sourceFilename}`\n\t\t\t  )\n\t\t\t: undefined,\n\t\"asset.info.development\": (development, { green, formatFlag }) =>\n\t\tdevelopment ? green(formatFlag(\"dev\")) : undefined,\n\t\"asset.info.hotModuleReplacement\": (\n\t\thotModuleReplacement,\n\t\t{ green, formatFlag }\n\t) => (hotModuleReplacement ? green(formatFlag(\"hmr\")) : undefined),\n\t\"asset.separator!\": () => \"\\n\",\n\t\"asset.filteredRelated\": (filteredRelated, { asset: { related } }) =>\n\t\tfilteredRelated > 0\n\t\t\t? `${moreCount(related, filteredRelated)} related ${plural(\n\t\t\t\t\tfilteredRelated,\n\t\t\t\t\t\"asset\",\n\t\t\t\t\t\"assets\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"asset.filteredChildren\": (filteredChildren, { asset: { children } }) =>\n\t\tfilteredChildren > 0\n\t\t\t? `${moreCount(children, filteredChildren)} ${plural(\n\t\t\t\t\tfilteredChildren,\n\t\t\t\t\t\"asset\",\n\t\t\t\t\t\"assets\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\n\tassetChunk: (id, { formatChunkId }) => formatChunkId(id),\n\n\tassetChunkName: name => name,\n\tassetChunkIdHint: name => name,\n\n\t\"module.type\": type => (type !== \"module\" ? type : undefined),\n\t\"module.id\": (id, { formatModuleId }) =>\n\t\tisValidId(id) ? formatModuleId(id) : undefined,\n\t\"module.name\": (name, { bold }) => {\n\t\tconst [prefix, resource] = getModuleName(name);\n\t\treturn `${prefix || \"\"}${bold(resource || \"\")}`;\n\t},\n\t\"module.identifier\": identifier => undefined,\n\t\"module.layer\": (layer, { formatLayer }) =>\n\t\tlayer ? formatLayer(layer) : undefined,\n\t\"module.sizes\": printSizes,\n\t\"module.chunks[]\": (id, { formatChunkId }) => formatChunkId(id),\n\t\"module.depth\": (depth, { formatFlag }) =>\n\t\tdepth !== null ? formatFlag(`depth ${depth}`) : undefined,\n\t\"module.cacheable\": (cacheable, { formatFlag, red }) =>\n\t\tcacheable === false ? red(formatFlag(\"not cacheable\")) : undefined,\n\t\"module.orphan\": (orphan, { formatFlag, yellow }) =>\n\t\torphan ? yellow(formatFlag(\"orphan\")) : undefined,\n\t\"module.runtime\": (runtime, { formatFlag, yellow }) =>\n\t\truntime ? yellow(formatFlag(\"runtime\")) : undefined,\n\t\"module.optional\": (optional, { formatFlag, yellow }) =>\n\t\toptional ? yellow(formatFlag(\"optional\")) : undefined,\n\t\"module.dependent\": (dependent, { formatFlag, cyan }) =>\n\t\tdependent ? cyan(formatFlag(\"dependent\")) : undefined,\n\t\"module.built\": (built, { formatFlag, yellow }) =>\n\t\tbuilt ? yellow(formatFlag(\"built\")) : undefined,\n\t\"module.codeGenerated\": (codeGenerated, { formatFlag, yellow }) =>\n\t\tcodeGenerated ? yellow(formatFlag(\"code generated\")) : undefined,\n\t\"module.buildTimeExecuted\": (buildTimeExecuted, { formatFlag, green }) =>\n\t\tbuildTimeExecuted ? green(formatFlag(\"build time executed\")) : undefined,\n\t\"module.cached\": (cached, { formatFlag, green }) =>\n\t\tcached ? green(formatFlag(\"cached\")) : undefined,\n\t\"module.assets\": (assets, { formatFlag, magenta }) =>\n\t\tassets && assets.length\n\t\t\t? magenta(\n\t\t\t\t\tformatFlag(\n\t\t\t\t\t\t`${assets.length} ${plural(assets.length, \"asset\", \"assets\")}`\n\t\t\t\t\t)\n\t\t\t  )\n\t\t\t: undefined,\n\t\"module.warnings\": (warnings, { formatFlag, yellow }) =>\n\t\twarnings === true\n\t\t\t? yellow(formatFlag(\"warnings\"))\n\t\t\t: warnings\n\t\t\t? yellow(\n\t\t\t\t\tformatFlag(`${warnings} ${plural(warnings, \"warning\", \"warnings\")}`)\n\t\t\t  )\n\t\t\t: undefined,\n\t\"module.errors\": (errors, { formatFlag, red }) =>\n\t\terrors === true\n\t\t\t? red(formatFlag(\"errors\"))\n\t\t\t: errors\n\t\t\t? red(formatFlag(`${errors} ${plural(errors, \"error\", \"errors\")}`))\n\t\t\t: undefined,\n\t\"module.providedExports\": (providedExports, { formatFlag, cyan }) => {\n\t\tif (Array.isArray(providedExports)) {\n\t\t\tif (providedExports.length === 0) return cyan(formatFlag(\"no exports\"));\n\t\t\treturn cyan(formatFlag(`exports: ${providedExports.join(\", \")}`));\n\t\t}\n\t},\n\t\"module.usedExports\": (usedExports, { formatFlag, cyan, module }) => {\n\t\tif (usedExports !== true) {\n\t\t\tif (usedExports === null) return cyan(formatFlag(\"used exports unknown\"));\n\t\t\tif (usedExports === false) return cyan(formatFlag(\"module unused\"));\n\t\t\tif (Array.isArray(usedExports)) {\n\t\t\t\tif (usedExports.length === 0)\n\t\t\t\t\treturn cyan(formatFlag(\"no exports used\"));\n\t\t\t\tconst providedExportsCount = Array.isArray(module.providedExports)\n\t\t\t\t\t? module.providedExports.length\n\t\t\t\t\t: null;\n\t\t\t\tif (\n\t\t\t\t\tprovidedExportsCount !== null &&\n\t\t\t\t\tprovidedExportsCount === usedExports.length\n\t\t\t\t) {\n\t\t\t\t\treturn cyan(formatFlag(\"all exports used\"));\n\t\t\t\t} else {\n\t\t\t\t\treturn cyan(\n\t\t\t\t\t\tformatFlag(`only some exports used: ${usedExports.join(\", \")}`)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"module.optimizationBailout[]\": (optimizationBailout, { yellow }) =>\n\t\tyellow(optimizationBailout),\n\t\"module.issuerPath\": (issuerPath, { module }) =>\n\t\tmodule.profile ? undefined : \"\",\n\t\"module.profile\": profile => undefined,\n\t\"module.filteredModules\": (filteredModules, { module: { modules } }) =>\n\t\tfilteredModules > 0\n\t\t\t? `${moreCount(modules, filteredModules)} nested ${plural(\n\t\t\t\t\tfilteredModules,\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"modules\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"module.filteredReasons\": (filteredReasons, { module: { reasons } }) =>\n\t\tfilteredReasons > 0\n\t\t\t? `${moreCount(reasons, filteredReasons)} ${plural(\n\t\t\t\t\tfilteredReasons,\n\t\t\t\t\t\"reason\",\n\t\t\t\t\t\"reasons\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"module.filteredChildren\": (filteredChildren, { module: { children } }) =>\n\t\tfilteredChildren > 0\n\t\t\t? `${moreCount(children, filteredChildren)} ${plural(\n\t\t\t\t\tfilteredChildren,\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"modules\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"module.separator!\": () => \"\\n\",\n\n\t\"moduleIssuer.id\": (id, { formatModuleId }) => formatModuleId(id),\n\t\"moduleIssuer.profile.total\": (value, { formatTime }) => formatTime(value),\n\n\t\"moduleReason.type\": type => type,\n\t\"moduleReason.userRequest\": (userRequest, { cyan }) =>\n\t\tcyan(getResourceName(userRequest)),\n\t\"moduleReason.moduleId\": (moduleId, { formatModuleId }) =>\n\t\tisValidId(moduleId) ? formatModuleId(moduleId) : undefined,\n\t\"moduleReason.module\": (module, { magenta }) => magenta(module),\n\t\"moduleReason.loc\": loc => loc,\n\t\"moduleReason.explanation\": (explanation, { cyan }) => cyan(explanation),\n\t\"moduleReason.active\": (active, { formatFlag }) =>\n\t\tactive ? undefined : formatFlag(\"inactive\"),\n\t\"moduleReason.resolvedModule\": (module, { magenta }) => magenta(module),\n\t\"moduleReason.filteredChildren\": (\n\t\tfilteredChildren,\n\t\t{ moduleReason: { children } }\n\t) =>\n\t\tfilteredChildren > 0\n\t\t\t? `${moreCount(children, filteredChildren)} ${plural(\n\t\t\t\t\tfilteredChildren,\n\t\t\t\t\t\"reason\",\n\t\t\t\t\t\"reasons\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\n\t\"module.profile.total\": (value, { formatTime }) => formatTime(value),\n\t\"module.profile.resolving\": (value, { formatTime }) =>\n\t\t`resolving: ${formatTime(value)}`,\n\t\"module.profile.restoring\": (value, { formatTime }) =>\n\t\t`restoring: ${formatTime(value)}`,\n\t\"module.profile.integration\": (value, { formatTime }) =>\n\t\t`integration: ${formatTime(value)}`,\n\t\"module.profile.building\": (value, { formatTime }) =>\n\t\t`building: ${formatTime(value)}`,\n\t\"module.profile.storing\": (value, { formatTime }) =>\n\t\t`storing: ${formatTime(value)}`,\n\t\"module.profile.additionalResolving\": (value, { formatTime }) =>\n\t\tvalue ? `additional resolving: ${formatTime(value)}` : undefined,\n\t\"module.profile.additionalIntegration\": (value, { formatTime }) =>\n\t\tvalue ? `additional integration: ${formatTime(value)}` : undefined,\n\n\t\"chunkGroup.kind!\": (_, { chunkGroupKind }) => chunkGroupKind,\n\t\"chunkGroup.separator!\": () => \"\\n\",\n\t\"chunkGroup.name\": (name, { bold }) => bold(name),\n\t\"chunkGroup.isOverSizeLimit\": (isOverSizeLimit, { formatFlag, yellow }) =>\n\t\tisOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined,\n\t\"chunkGroup.assetsSize\": (size, { formatSize }) =>\n\t\tsize ? formatSize(size) : undefined,\n\t\"chunkGroup.auxiliaryAssetsSize\": (size, { formatSize }) =>\n\t\tsize ? `(${formatSize(size)})` : undefined,\n\t\"chunkGroup.filteredAssets\": (n, { chunkGroup: { assets } }) =>\n\t\tn > 0\n\t\t\t? `${moreCount(assets, n)} ${plural(n, \"asset\", \"assets\")}`\n\t\t\t: undefined,\n\t\"chunkGroup.filteredAuxiliaryAssets\": (\n\t\tn,\n\t\t{ chunkGroup: { auxiliaryAssets } }\n\t) =>\n\t\tn > 0\n\t\t\t? `${moreCount(auxiliaryAssets, n)} auxiliary ${plural(\n\t\t\t\t\tn,\n\t\t\t\t\t\"asset\",\n\t\t\t\t\t\"assets\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"chunkGroup.is!\": () => \"=\",\n\t\"chunkGroupAsset.name\": (asset, { green }) => green(asset),\n\t\"chunkGroupAsset.size\": (size, { formatSize, chunkGroup }) =>\n\t\tchunkGroup.assets.length > 1 ||\n\t\t(chunkGroup.auxiliaryAssets && chunkGroup.auxiliaryAssets.length > 0)\n\t\t\t? formatSize(size)\n\t\t\t: undefined,\n\t\"chunkGroup.children\": (children, context, printer) =>\n\t\tArray.isArray(children)\n\t\t\t? undefined\n\t\t\t: printer.print(\n\t\t\t\t\tcontext.type,\n\t\t\t\t\tObject.keys(children).map(key => ({\n\t\t\t\t\t\ttype: key,\n\t\t\t\t\t\tchildren: children[key]\n\t\t\t\t\t})),\n\t\t\t\t\tcontext\n\t\t\t  ),\n\t\"chunkGroupChildGroup.type\": type => `${type}:`,\n\t\"chunkGroupChild.assets[]\": (file, { formatFilename }) =>\n\t\tformatFilename(file),\n\t\"chunkGroupChild.chunks[]\": (id, { formatChunkId }) => formatChunkId(id),\n\t\"chunkGroupChild.name\": name => (name ? `(name: ${name})` : undefined),\n\n\t\"chunk.id\": (id, { formatChunkId }) => formatChunkId(id),\n\t\"chunk.files[]\": (file, { formatFilename }) => formatFilename(file),\n\t\"chunk.names[]\": name => name,\n\t\"chunk.idHints[]\": name => name,\n\t\"chunk.runtime[]\": name => name,\n\t\"chunk.sizes\": (sizes, context) => printSizes(sizes, context),\n\t\"chunk.parents[]\": (parents, context) =>\n\t\tcontext.formatChunkId(parents, \"parent\"),\n\t\"chunk.siblings[]\": (siblings, context) =>\n\t\tcontext.formatChunkId(siblings, \"sibling\"),\n\t\"chunk.children[]\": (children, context) =>\n\t\tcontext.formatChunkId(children, \"child\"),\n\t\"chunk.childrenByOrder\": (childrenByOrder, context, printer) =>\n\t\tArray.isArray(childrenByOrder)\n\t\t\t? undefined\n\t\t\t: printer.print(\n\t\t\t\t\tcontext.type,\n\t\t\t\t\tObject.keys(childrenByOrder).map(key => ({\n\t\t\t\t\t\ttype: key,\n\t\t\t\t\t\tchildren: childrenByOrder[key]\n\t\t\t\t\t})),\n\t\t\t\t\tcontext\n\t\t\t  ),\n\t\"chunk.childrenByOrder[].type\": type => `${type}:`,\n\t\"chunk.childrenByOrder[].children[]\": (id, { formatChunkId }) =>\n\t\tisValidId(id) ? formatChunkId(id) : undefined,\n\t\"chunk.entry\": (entry, { formatFlag, yellow }) =>\n\t\tentry ? yellow(formatFlag(\"entry\")) : undefined,\n\t\"chunk.initial\": (initial, { formatFlag, yellow }) =>\n\t\tinitial ? yellow(formatFlag(\"initial\")) : undefined,\n\t\"chunk.rendered\": (rendered, { formatFlag, green }) =>\n\t\trendered ? green(formatFlag(\"rendered\")) : undefined,\n\t\"chunk.recorded\": (recorded, { formatFlag, green }) =>\n\t\trecorded ? green(formatFlag(\"recorded\")) : undefined,\n\t\"chunk.reason\": (reason, { yellow }) => (reason ? yellow(reason) : undefined),\n\t\"chunk.filteredModules\": (filteredModules, { chunk: { modules } }) =>\n\t\tfilteredModules > 0\n\t\t\t? `${moreCount(modules, filteredModules)} chunk ${plural(\n\t\t\t\t\tfilteredModules,\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"modules\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"chunk.separator!\": () => \"\\n\",\n\n\t\"chunkOrigin.request\": request => request,\n\t\"chunkOrigin.moduleId\": (moduleId, { formatModuleId }) =>\n\t\tisValidId(moduleId) ? formatModuleId(moduleId) : undefined,\n\t\"chunkOrigin.moduleName\": (moduleName, { bold }) => bold(moduleName),\n\t\"chunkOrigin.loc\": loc => loc,\n\n\t\"error.compilerPath\": (compilerPath, { bold }) =>\n\t\tcompilerPath ? bold(`(${compilerPath})`) : undefined,\n\t\"error.chunkId\": (chunkId, { formatChunkId }) =>\n\t\tisValidId(chunkId) ? formatChunkId(chunkId) : undefined,\n\t\"error.chunkEntry\": (chunkEntry, { formatFlag }) =>\n\t\tchunkEntry ? formatFlag(\"entry\") : undefined,\n\t\"error.chunkInitial\": (chunkInitial, { formatFlag }) =>\n\t\tchunkInitial ? formatFlag(\"initial\") : undefined,\n\t\"error.file\": (file, { bold }) => bold(file),\n\t\"error.moduleName\": (moduleName, { bold }) => {\n\t\treturn moduleName.includes(\"!\")\n\t\t\t? `${bold(moduleName.replace(/^(\\s|\\S)*!/, \"\"))} (${moduleName})`\n\t\t\t: `${bold(moduleName)}`;\n\t},\n\t\"error.loc\": (loc, { green }) => green(loc),\n\t\"error.message\": (message, { bold, formatError }) =>\n\t\tmessage.includes(\"\\u001b[\") ? message : bold(formatError(message)),\n\t\"error.details\": (details, { formatError }) => formatError(details),\n\t\"error.stack\": stack => stack,\n\t\"error.moduleTrace\": moduleTrace => undefined,\n\t\"error.separator!\": () => \"\\n\",\n\n\t\"loggingEntry(error).loggingEntry.message\": (message, { red }) =>\n\t\tmapLines(message, x => `<e> ${red(x)}`),\n\t\"loggingEntry(warn).loggingEntry.message\": (message, { yellow }) =>\n\t\tmapLines(message, x => `<w> ${yellow(x)}`),\n\t\"loggingEntry(info).loggingEntry.message\": (message, { green }) =>\n\t\tmapLines(message, x => `<i> ${green(x)}`),\n\t\"loggingEntry(log).loggingEntry.message\": (message, { bold }) =>\n\t\tmapLines(message, x => `    ${bold(x)}`),\n\t\"loggingEntry(debug).loggingEntry.message\": message =>\n\t\tmapLines(message, x => `    ${x}`),\n\t\"loggingEntry(trace).loggingEntry.message\": message =>\n\t\tmapLines(message, x => `    ${x}`),\n\t\"loggingEntry(status).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `<s> ${magenta(x)}`),\n\t\"loggingEntry(profile).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `<p> ${magenta(x)}`),\n\t\"loggingEntry(profileEnd).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `</p> ${magenta(x)}`),\n\t\"loggingEntry(time).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `<t> ${magenta(x)}`),\n\t\"loggingEntry(group).loggingEntry.message\": (message, { cyan }) =>\n\t\tmapLines(message, x => `<-> ${cyan(x)}`),\n\t\"loggingEntry(groupCollapsed).loggingEntry.message\": (message, { cyan }) =>\n\t\tmapLines(message, x => `<+> ${cyan(x)}`),\n\t\"loggingEntry(clear).loggingEntry\": () => \"    -------\",\n\t\"loggingEntry(groupCollapsed).loggingEntry.children\": () => \"\",\n\t\"loggingEntry.trace[]\": trace =>\n\t\ttrace ? mapLines(trace, x => `| ${x}`) : undefined,\n\n\t\"moduleTraceItem.originName\": originName => originName,\n\n\tloggingGroup: loggingGroup =>\n\t\tloggingGroup.entries.length === 0 ? \"\" : undefined,\n\t\"loggingGroup.debug\": (flag, { red }) => (flag ? red(\"DEBUG\") : undefined),\n\t\"loggingGroup.name\": (name, { bold }) => bold(`LOG from ${name}`),\n\t\"loggingGroup.separator!\": () => \"\\n\",\n\t\"loggingGroup.filteredEntries\": filteredEntries =>\n\t\tfilteredEntries > 0 ? `+ ${filteredEntries} hidden lines` : undefined,\n\n\t\"moduleTraceDependency.loc\": loc => loc\n};\n\n/** @type {Record<string, string | Function>} */\nconst ITEM_NAMES = {\n\t\"compilation.assets[]\": \"asset\",\n\t\"compilation.modules[]\": \"module\",\n\t\"compilation.chunks[]\": \"chunk\",\n\t\"compilation.entrypoints[]\": \"chunkGroup\",\n\t\"compilation.namedChunkGroups[]\": \"chunkGroup\",\n\t\"compilation.errors[]\": \"error\",\n\t\"compilation.warnings[]\": \"error\",\n\t\"compilation.logging[]\": \"loggingGroup\",\n\t\"compilation.children[]\": \"compilation\",\n\t\"asset.related[]\": \"asset\",\n\t\"asset.children[]\": \"asset\",\n\t\"asset.chunks[]\": \"assetChunk\",\n\t\"asset.auxiliaryChunks[]\": \"assetChunk\",\n\t\"asset.chunkNames[]\": \"assetChunkName\",\n\t\"asset.chunkIdHints[]\": \"assetChunkIdHint\",\n\t\"asset.auxiliaryChunkNames[]\": \"assetChunkName\",\n\t\"asset.auxiliaryChunkIdHints[]\": \"assetChunkIdHint\",\n\t\"chunkGroup.assets[]\": \"chunkGroupAsset\",\n\t\"chunkGroup.auxiliaryAssets[]\": \"chunkGroupAsset\",\n\t\"chunkGroupChild.assets[]\": \"chunkGroupAsset\",\n\t\"chunkGroupChild.auxiliaryAssets[]\": \"chunkGroupAsset\",\n\t\"chunkGroup.children[]\": \"chunkGroupChildGroup\",\n\t\"chunkGroupChildGroup.children[]\": \"chunkGroupChild\",\n\t\"module.modules[]\": \"module\",\n\t\"module.children[]\": \"module\",\n\t\"module.reasons[]\": \"moduleReason\",\n\t\"moduleReason.children[]\": \"moduleReason\",\n\t\"module.issuerPath[]\": \"moduleIssuer\",\n\t\"chunk.origins[]\": \"chunkOrigin\",\n\t\"chunk.modules[]\": \"module\",\n\t\"loggingGroup.entries[]\": logEntry =>\n\t\t`loggingEntry(${logEntry.type}).loggingEntry`,\n\t\"loggingEntry.children[]\": logEntry =>\n\t\t`loggingEntry(${logEntry.type}).loggingEntry`,\n\t\"error.moduleTrace[]\": \"moduleTraceItem\",\n\t\"moduleTraceItem.dependencies[]\": \"moduleTraceDependency\"\n};\n\nconst ERROR_PREFERRED_ORDER = [\n\t\"compilerPath\",\n\t\"chunkId\",\n\t\"chunkEntry\",\n\t\"chunkInitial\",\n\t\"file\",\n\t\"separator!\",\n\t\"moduleName\",\n\t\"loc\",\n\t\"separator!\",\n\t\"message\",\n\t\"separator!\",\n\t\"details\",\n\t\"separator!\",\n\t\"stack\",\n\t\"separator!\",\n\t\"missing\",\n\t\"separator!\",\n\t\"moduleTrace\"\n];\n\n/** @type {Record<string, string[]>} */\nconst PREFERRED_ORDERS = {\n\tcompilation: [\n\t\t\"name\",\n\t\t\"hash\",\n\t\t\"version\",\n\t\t\"time\",\n\t\t\"builtAt\",\n\t\t\"env\",\n\t\t\"publicPath\",\n\t\t\"assets\",\n\t\t\"filteredAssets\",\n\t\t\"entrypoints\",\n\t\t\"namedChunkGroups\",\n\t\t\"chunks\",\n\t\t\"modules\",\n\t\t\"filteredModules\",\n\t\t\"children\",\n\t\t\"logging\",\n\t\t\"warnings\",\n\t\t\"warningsInChildren!\",\n\t\t\"filteredWarningDetailsCount\",\n\t\t\"errors\",\n\t\t\"errorsInChildren!\",\n\t\t\"filteredErrorDetailsCount\",\n\t\t\"summary!\",\n\t\t\"needAdditionalPass\"\n\t],\n\tasset: [\n\t\t\"type\",\n\t\t\"name\",\n\t\t\"size\",\n\t\t\"chunks\",\n\t\t\"auxiliaryChunks\",\n\t\t\"emitted\",\n\t\t\"comparedForEmit\",\n\t\t\"cached\",\n\t\t\"info\",\n\t\t\"isOverSizeLimit\",\n\t\t\"chunkNames\",\n\t\t\"auxiliaryChunkNames\",\n\t\t\"chunkIdHints\",\n\t\t\"auxiliaryChunkIdHints\",\n\t\t\"related\",\n\t\t\"filteredRelated\",\n\t\t\"children\",\n\t\t\"filteredChildren\"\n\t],\n\t\"asset.info\": [\n\t\t\"immutable\",\n\t\t\"sourceFilename\",\n\t\t\"javascriptModule\",\n\t\t\"development\",\n\t\t\"hotModuleReplacement\"\n\t],\n\tchunkGroup: [\n\t\t\"kind!\",\n\t\t\"name\",\n\t\t\"isOverSizeLimit\",\n\t\t\"assetsSize\",\n\t\t\"auxiliaryAssetsSize\",\n\t\t\"is!\",\n\t\t\"assets\",\n\t\t\"filteredAssets\",\n\t\t\"auxiliaryAssets\",\n\t\t\"filteredAuxiliaryAssets\",\n\t\t\"separator!\",\n\t\t\"children\"\n\t],\n\tchunkGroupAsset: [\"name\", \"size\"],\n\tchunkGroupChildGroup: [\"type\", \"children\"],\n\tchunkGroupChild: [\"assets\", \"chunks\", \"name\"],\n\tmodule: [\n\t\t\"type\",\n\t\t\"name\",\n\t\t\"identifier\",\n\t\t\"id\",\n\t\t\"layer\",\n\t\t\"sizes\",\n\t\t\"chunks\",\n\t\t\"depth\",\n\t\t\"cacheable\",\n\t\t\"orphan\",\n\t\t\"runtime\",\n\t\t\"optional\",\n\t\t\"dependent\",\n\t\t\"built\",\n\t\t\"codeGenerated\",\n\t\t\"cached\",\n\t\t\"assets\",\n\t\t\"failed\",\n\t\t\"warnings\",\n\t\t\"errors\",\n\t\t\"children\",\n\t\t\"filteredChildren\",\n\t\t\"providedExports\",\n\t\t\"usedExports\",\n\t\t\"optimizationBailout\",\n\t\t\"reasons\",\n\t\t\"filteredReasons\",\n\t\t\"issuerPath\",\n\t\t\"profile\",\n\t\t\"modules\",\n\t\t\"filteredModules\"\n\t],\n\tmoduleReason: [\n\t\t\"active\",\n\t\t\"type\",\n\t\t\"userRequest\",\n\t\t\"moduleId\",\n\t\t\"module\",\n\t\t\"resolvedModule\",\n\t\t\"loc\",\n\t\t\"explanation\",\n\t\t\"children\",\n\t\t\"filteredChildren\"\n\t],\n\t\"module.profile\": [\n\t\t\"total\",\n\t\t\"separator!\",\n\t\t\"resolving\",\n\t\t\"restoring\",\n\t\t\"integration\",\n\t\t\"building\",\n\t\t\"storing\",\n\t\t\"additionalResolving\",\n\t\t\"additionalIntegration\"\n\t],\n\tchunk: [\n\t\t\"id\",\n\t\t\"runtime\",\n\t\t\"files\",\n\t\t\"names\",\n\t\t\"idHints\",\n\t\t\"sizes\",\n\t\t\"parents\",\n\t\t\"siblings\",\n\t\t\"children\",\n\t\t\"childrenByOrder\",\n\t\t\"entry\",\n\t\t\"initial\",\n\t\t\"rendered\",\n\t\t\"recorded\",\n\t\t\"reason\",\n\t\t\"separator!\",\n\t\t\"origins\",\n\t\t\"separator!\",\n\t\t\"modules\",\n\t\t\"separator!\",\n\t\t\"filteredModules\"\n\t],\n\tchunkOrigin: [\"request\", \"moduleId\", \"moduleName\", \"loc\"],\n\terror: ERROR_PREFERRED_ORDER,\n\twarning: ERROR_PREFERRED_ORDER,\n\t\"chunk.childrenByOrder[]\": [\"type\", \"children\"],\n\tloggingGroup: [\n\t\t\"debug\",\n\t\t\"name\",\n\t\t\"separator!\",\n\t\t\"entries\",\n\t\t\"separator!\",\n\t\t\"filteredEntries\"\n\t],\n\tloggingEntry: [\"message\", \"trace\", \"children\"]\n};\n\nconst itemsJoinOneLine = items => items.filter(Boolean).join(\" \");\nconst itemsJoinOneLineBrackets = items =>\n\titems.length > 0 ? `(${items.filter(Boolean).join(\" \")})` : undefined;\nconst itemsJoinMoreSpacing = items => items.filter(Boolean).join(\"\\n\\n\");\nconst itemsJoinComma = items => items.filter(Boolean).join(\", \");\nconst itemsJoinCommaBrackets = items =>\n\titems.length > 0 ? `(${items.filter(Boolean).join(\", \")})` : undefined;\nconst itemsJoinCommaBracketsWithName = name => items =>\n\titems.length > 0\n\t\t? `(${name}: ${items.filter(Boolean).join(\", \")})`\n\t\t: undefined;\n\n/** @type {Record<string, (items: string[]) => string>} */\nconst SIMPLE_ITEMS_JOINER = {\n\t\"chunk.parents\": itemsJoinOneLine,\n\t\"chunk.siblings\": itemsJoinOneLine,\n\t\"chunk.children\": itemsJoinOneLine,\n\t\"chunk.names\": itemsJoinCommaBrackets,\n\t\"chunk.idHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n\t\"chunk.runtime\": itemsJoinCommaBracketsWithName(\"runtime\"),\n\t\"chunk.files\": itemsJoinComma,\n\t\"chunk.childrenByOrder\": itemsJoinOneLine,\n\t\"chunk.childrenByOrder[].children\": itemsJoinOneLine,\n\t\"chunkGroup.assets\": itemsJoinOneLine,\n\t\"chunkGroup.auxiliaryAssets\": itemsJoinOneLineBrackets,\n\t\"chunkGroupChildGroup.children\": itemsJoinComma,\n\t\"chunkGroupChild.assets\": itemsJoinOneLine,\n\t\"chunkGroupChild.auxiliaryAssets\": itemsJoinOneLineBrackets,\n\t\"asset.chunks\": itemsJoinComma,\n\t\"asset.auxiliaryChunks\": itemsJoinCommaBrackets,\n\t\"asset.chunkNames\": itemsJoinCommaBracketsWithName(\"name\"),\n\t\"asset.auxiliaryChunkNames\": itemsJoinCommaBracketsWithName(\"auxiliary name\"),\n\t\"asset.chunkIdHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n\t\"asset.auxiliaryChunkIdHints\":\n\t\titemsJoinCommaBracketsWithName(\"auxiliary id hint\"),\n\t\"module.chunks\": itemsJoinOneLine,\n\t\"module.issuerPath\": items =>\n\t\titems\n\t\t\t.filter(Boolean)\n\t\t\t.map(item => `${item} ->`)\n\t\t\t.join(\" \"),\n\t\"compilation.errors\": itemsJoinMoreSpacing,\n\t\"compilation.warnings\": itemsJoinMoreSpacing,\n\t\"compilation.logging\": itemsJoinMoreSpacing,\n\t\"compilation.children\": items => indent(itemsJoinMoreSpacing(items), \"  \"),\n\t\"moduleTraceItem.dependencies\": itemsJoinOneLine,\n\t\"loggingEntry.children\": items =>\n\t\tindent(items.filter(Boolean).join(\"\\n\"), \"  \", false)\n};\n\nconst joinOneLine = items =>\n\titems\n\t\t.map(item => item.content)\n\t\t.filter(Boolean)\n\t\t.join(\" \");\n\nconst joinInBrackets = items => {\n\tconst res = [];\n\tlet mode = 0;\n\tfor (const item of items) {\n\t\tif (item.element === \"separator!\") {\n\t\t\tswitch (mode) {\n\t\t\t\tcase 0:\n\t\t\t\tcase 1:\n\t\t\t\t\tmode += 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tres.push(\")\");\n\t\t\t\t\tmode = 3;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!item.content) continue;\n\t\tswitch (mode) {\n\t\t\tcase 0:\n\t\t\t\tmode = 1;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tres.push(\" \");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tres.push(\"(\");\n\t\t\t\tmode = 4;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tres.push(\" (\");\n\t\t\t\tmode = 4;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tres.push(\", \");\n\t\t\t\tbreak;\n\t\t}\n\t\tres.push(item.content);\n\t}\n\tif (mode === 4) res.push(\")\");\n\treturn res.join(\"\");\n};\n\nconst indent = (str, prefix, noPrefixInFirstLine) => {\n\tconst rem = str.replace(/\\n([^\\n])/g, \"\\n\" + prefix + \"$1\");\n\tif (noPrefixInFirstLine) return rem;\n\tconst ind = str[0] === \"\\n\" ? \"\" : prefix;\n\treturn ind + rem;\n};\n\nconst joinExplicitNewLine = (items, indenter) => {\n\tlet firstInLine = true;\n\tlet first = true;\n\treturn items\n\t\t.map(item => {\n\t\t\tif (!item || !item.content) return;\n\t\t\tlet content = indent(item.content, first ? \"\" : indenter, !firstInLine);\n\t\t\tif (firstInLine) {\n\t\t\t\tcontent = content.replace(/^\\n+/, \"\");\n\t\t\t}\n\t\t\tif (!content) return;\n\t\t\tfirst = false;\n\t\t\tconst noJoiner = firstInLine || content.startsWith(\"\\n\");\n\t\t\tfirstInLine = content.endsWith(\"\\n\");\n\t\t\treturn noJoiner ? content : \" \" + content;\n\t\t})\n\t\t.filter(Boolean)\n\t\t.join(\"\")\n\t\t.trim();\n};\n\nconst joinError =\n\terror =>\n\t(items, { red, yellow }) =>\n\t\t`${error ? red(\"ERROR\") : yellow(\"WARNING\")} in ${joinExplicitNewLine(\n\t\t\titems,\n\t\t\t\"\"\n\t\t)}`;\n\n/** @type {Record<string, (items: ({ element: string, content: string })[], context: StatsPrinterContext) => string>} */\nconst SIMPLE_ELEMENT_JOINERS = {\n\tcompilation: items => {\n\t\tconst result = [];\n\t\tlet lastNeedMore = false;\n\t\tfor (const item of items) {\n\t\t\tif (!item.content) continue;\n\t\t\tconst needMoreSpace =\n\t\t\t\titem.element === \"warnings\" ||\n\t\t\t\titem.element === \"filteredWarningDetailsCount\" ||\n\t\t\t\titem.element === \"errors\" ||\n\t\t\t\titem.element === \"filteredErrorDetailsCount\" ||\n\t\t\t\titem.element === \"logging\";\n\t\t\tif (result.length !== 0) {\n\t\t\t\tresult.push(needMoreSpace || lastNeedMore ? \"\\n\\n\" : \"\\n\");\n\t\t\t}\n\t\t\tresult.push(item.content);\n\t\t\tlastNeedMore = needMoreSpace;\n\t\t}\n\t\tif (lastNeedMore) result.push(\"\\n\");\n\t\treturn result.join(\"\");\n\t},\n\tasset: items =>\n\t\tjoinExplicitNewLine(\n\t\t\titems.map(item => {\n\t\t\t\tif (\n\t\t\t\t\t(item.element === \"related\" || item.element === \"children\") &&\n\t\t\t\t\titem.content\n\t\t\t\t) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\tcontent: `\\n${item.content}\\n`\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t}),\n\t\t\t\"  \"\n\t\t),\n\t\"asset.info\": joinOneLine,\n\tmodule: (items, { module }) => {\n\t\tlet hasName = false;\n\t\treturn joinExplicitNewLine(\n\t\t\titems.map(item => {\n\t\t\t\tswitch (item.element) {\n\t\t\t\t\tcase \"id\":\n\t\t\t\t\t\tif (module.id === module.name) {\n\t\t\t\t\t\t\tif (hasName) return false;\n\t\t\t\t\t\t\tif (item.content) hasName = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\tif (hasName) return false;\n\t\t\t\t\t\tif (item.content) hasName = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"providedExports\":\n\t\t\t\t\tcase \"usedExports\":\n\t\t\t\t\tcase \"optimizationBailout\":\n\t\t\t\t\tcase \"reasons\":\n\t\t\t\t\tcase \"issuerPath\":\n\t\t\t\t\tcase \"profile\":\n\t\t\t\t\tcase \"children\":\n\t\t\t\t\tcase \"modules\":\n\t\t\t\t\t\tif (item.content) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...item,\n\t\t\t\t\t\t\t\tcontent: `\\n${item.content}\\n`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t}),\n\t\t\t\"  \"\n\t\t);\n\t},\n\tchunk: items => {\n\t\tlet hasEntry = false;\n\t\treturn (\n\t\t\t\"chunk \" +\n\t\t\tjoinExplicitNewLine(\n\t\t\t\titems.filter(item => {\n\t\t\t\t\tswitch (item.element) {\n\t\t\t\t\t\tcase \"entry\":\n\t\t\t\t\t\t\tif (item.content) hasEntry = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"initial\":\n\t\t\t\t\t\t\tif (hasEntry) return false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}),\n\t\t\t\t\"  \"\n\t\t\t)\n\t\t);\n\t},\n\t\"chunk.childrenByOrder[]\": items => `(${joinOneLine(items)})`,\n\tchunkGroup: items => joinExplicitNewLine(items, \"  \"),\n\tchunkGroupAsset: joinOneLine,\n\tchunkGroupChildGroup: joinOneLine,\n\tchunkGroupChild: joinOneLine,\n\t// moduleReason: (items, { moduleReason }) => {\n\t// \tlet hasName = false;\n\t// \treturn joinOneLine(\n\t// \t\titems.filter(item => {\n\t// \t\t\tswitch (item.element) {\n\t// \t\t\t\tcase \"moduleId\":\n\t// \t\t\t\t\tif (moduleReason.moduleId === moduleReason.module && item.content)\n\t// \t\t\t\t\t\thasName = true;\n\t// \t\t\t\t\tbreak;\n\t// \t\t\t\tcase \"module\":\n\t// \t\t\t\t\tif (hasName) return false;\n\t// \t\t\t\t\tbreak;\n\t// \t\t\t\tcase \"resolvedModule\":\n\t// \t\t\t\t\treturn (\n\t// \t\t\t\t\t\tmoduleReason.module !== moduleReason.resolvedModule &&\n\t// \t\t\t\t\t\titem.content\n\t// \t\t\t\t\t);\n\t// \t\t\t}\n\t// \t\t\treturn true;\n\t// \t\t})\n\t// \t);\n\t// },\n\tmoduleReason: (items, { moduleReason }) => {\n\t\tlet hasName = false;\n\t\treturn joinExplicitNewLine(\n\t\t\titems.map(item => {\n\t\t\t\tswitch (item.element) {\n\t\t\t\t\tcase \"moduleId\":\n\t\t\t\t\t\tif (moduleReason.moduleId === moduleReason.module && item.content)\n\t\t\t\t\t\t\thasName = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"module\":\n\t\t\t\t\t\tif (hasName) return false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"resolvedModule\":\n\t\t\t\t\t\tif (moduleReason.module === moduleReason.resolvedModule)\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"children\":\n\t\t\t\t\t\tif (item.content) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...item,\n\t\t\t\t\t\t\t\tcontent: `\\n${item.content}\\n`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t}),\n\t\t\t\"  \"\n\t\t);\n\t},\n\t\"module.profile\": joinInBrackets,\n\tmoduleIssuer: joinOneLine,\n\tchunkOrigin: items => \"> \" + joinOneLine(items),\n\t\"errors[].error\": joinError(true),\n\t\"warnings[].error\": joinError(false),\n\tloggingGroup: items => joinExplicitNewLine(items, \"\").trimEnd(),\n\tmoduleTraceItem: items => \" @ \" + joinOneLine(items),\n\tmoduleTraceDependency: joinOneLine\n};\n\nconst AVAILABLE_COLORS = {\n\tbold: \"\\u001b[1m\",\n\tyellow: \"\\u001b[1m\\u001b[33m\",\n\tred: \"\\u001b[1m\\u001b[31m\",\n\tgreen: \"\\u001b[1m\\u001b[32m\",\n\tcyan: \"\\u001b[1m\\u001b[36m\",\n\tmagenta: \"\\u001b[1m\\u001b[35m\"\n};\n\nconst AVAILABLE_FORMATS = {\n\tformatChunkId: (id, { yellow }, direction) => {\n\t\tswitch (direction) {\n\t\t\tcase \"parent\":\n\t\t\t\treturn `<{${yellow(id)}}>`;\n\t\t\tcase \"sibling\":\n\t\t\t\treturn `={${yellow(id)}}=`;\n\t\t\tcase \"child\":\n\t\t\t\treturn `>{${yellow(id)}}<`;\n\t\t\tdefault:\n\t\t\t\treturn `{${yellow(id)}}`;\n\t\t}\n\t},\n\tformatModuleId: id => `[${id}]`,\n\tformatFilename: (filename, { green, yellow }, oversize) =>\n\t\t(oversize ? yellow : green)(filename),\n\tformatFlag: flag => `[${flag}]`,\n\tformatLayer: layer => `(in ${layer})`,\n\tformatSize: require(\"../SizeFormatHelpers\").formatSize,\n\tformatDateTime: (dateTime, { bold }) => {\n\t\tconst d = new Date(dateTime);\n\t\tconst x = twoDigit;\n\t\tconst date = `${d.getFullYear()}-${x(d.getMonth() + 1)}-${x(d.getDate())}`;\n\t\tconst time = `${x(d.getHours())}:${x(d.getMinutes())}:${x(d.getSeconds())}`;\n\t\treturn `${date} ${bold(time)}`;\n\t},\n\tformatTime: (\n\t\ttime,\n\t\t{ timeReference, bold, green, yellow, red },\n\t\tboldQuantity\n\t) => {\n\t\tconst unit = \" ms\";\n\t\tif (timeReference && time !== timeReference) {\n\t\t\tconst times = [\n\t\t\t\ttimeReference / 2,\n\t\t\t\ttimeReference / 4,\n\t\t\t\ttimeReference / 8,\n\t\t\t\ttimeReference / 16\n\t\t\t];\n\t\t\tif (time < times[3]) return `${time}${unit}`;\n\t\t\telse if (time < times[2]) return bold(`${time}${unit}`);\n\t\t\telse if (time < times[1]) return green(`${time}${unit}`);\n\t\t\telse if (time < times[0]) return yellow(`${time}${unit}`);\n\t\t\telse return red(`${time}${unit}`);\n\t\t} else {\n\t\t\treturn `${boldQuantity ? bold(time) : time}${unit}`;\n\t\t}\n\t},\n\tformatError: (message, { green, yellow, red }) => {\n\t\tif (message.includes(\"\\u001b[\")) return message;\n\t\tconst highlights = [\n\t\t\t{ regExp: /(Did you mean .+)/g, format: green },\n\t\t\t{\n\t\t\t\tregExp: /(Set 'mode' option to 'development' or 'production')/g,\n\t\t\t\tformat: green\n\t\t\t},\n\t\t\t{ regExp: /(\\(module has no exports\\))/g, format: red },\n\t\t\t{ regExp: /\\(possible exports: (.+)\\)/g, format: green },\n\t\t\t{ regExp: /(?:^|\\n)(.* doesn't exist)/g, format: red },\n\t\t\t{ regExp: /('\\w+' option has not been set)/g, format: red },\n\t\t\t{\n\t\t\t\tregExp: /(Emitted value instead of an instance of Error)/g,\n\t\t\t\tformat: yellow\n\t\t\t},\n\t\t\t{ regExp: /(Used? .+ instead)/gi, format: yellow },\n\t\t\t{ regExp: /\\b(deprecated|must|required)\\b/g, format: yellow },\n\t\t\t{\n\t\t\t\tregExp: /\\b(BREAKING CHANGE)\\b/gi,\n\t\t\t\tformat: red\n\t\t\t},\n\t\t\t{\n\t\t\t\tregExp:\n\t\t\t\t\t/\\b(error|failed|unexpected|invalid|not found|not supported|not available|not possible|not implemented|doesn't support|conflict|conflicting|not existing|duplicate)\\b/gi,\n\t\t\t\tformat: red\n\t\t\t}\n\t\t];\n\t\tfor (const { regExp, format } of highlights) {\n\t\t\tmessage = message.replace(regExp, (match, content) => {\n\t\t\t\treturn match.replace(content, format(content));\n\t\t\t});\n\t\t}\n\t\treturn message;\n\t}\n};\n\nconst RESULT_MODIFIER = {\n\t\"module.modules\": result => {\n\t\treturn indent(result, \"| \");\n\t}\n};\n\nconst createOrder = (array, preferredOrder) => {\n\tconst originalArray = array.slice();\n\tconst set = new Set(array);\n\tconst usedSet = new Set();\n\tarray.length = 0;\n\tfor (const element of preferredOrder) {\n\t\tif (element.endsWith(\"!\") || set.has(element)) {\n\t\t\tarray.push(element);\n\t\t\tusedSet.add(element);\n\t\t}\n\t}\n\tfor (const element of originalArray) {\n\t\tif (!usedSet.has(element)) {\n\t\t\tarray.push(element);\n\t\t}\n\t}\n\treturn array;\n};\n\nclass DefaultStatsPrinterPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"DefaultStatsPrinterPlugin\", compilation => {\n\t\t\tcompilation.hooks.statsPrinter.tap(\n\t\t\t\t\"DefaultStatsPrinterPlugin\",\n\t\t\t\t(stats, options, context) => {\n\t\t\t\t\t// Put colors into context\n\t\t\t\t\tstats.hooks.print\n\t\t\t\t\t\t.for(\"compilation\")\n\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", (compilation, context) => {\n\t\t\t\t\t\t\tfor (const color of Object.keys(AVAILABLE_COLORS)) {\n\t\t\t\t\t\t\t\tlet start;\n\t\t\t\t\t\t\t\tif (options.colors) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\ttypeof options.colors === \"object\" &&\n\t\t\t\t\t\t\t\t\t\ttypeof options.colors[color] === \"string\"\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tstart = options.colors[color];\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tstart = AVAILABLE_COLORS[color];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (start) {\n\t\t\t\t\t\t\t\t\tcontext[color] = str =>\n\t\t\t\t\t\t\t\t\t\t`${start}${\n\t\t\t\t\t\t\t\t\t\t\ttypeof str === \"string\"\n\t\t\t\t\t\t\t\t\t\t\t\t? str.replace(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/((\\u001b\\[39m|\\u001b\\[22m|\\u001b\\[0m)+)/g,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`$1${start}`\n\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t\t: str\n\t\t\t\t\t\t\t\t\t\t}\\u001b[39m\\u001b[22m`;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcontext[color] = str => str;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const format of Object.keys(AVAILABLE_FORMATS)) {\n\t\t\t\t\t\t\t\tcontext[format] = (content, ...args) =>\n\t\t\t\t\t\t\t\t\tAVAILABLE_FORMATS[format](content, context, ...args);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontext.timeReference = compilation.time;\n\t\t\t\t\t\t});\n\n\t\t\t\t\tfor (const key of Object.keys(SIMPLE_PRINTERS)) {\n\t\t\t\t\t\tstats.hooks.print\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", (obj, ctx) =>\n\t\t\t\t\t\t\t\tSIMPLE_PRINTERS[key](obj, ctx, stats)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(PREFERRED_ORDERS)) {\n\t\t\t\t\t\tconst preferredOrder = PREFERRED_ORDERS[key];\n\t\t\t\t\t\tstats.hooks.sortElements\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", (elements, context) => {\n\t\t\t\t\t\t\t\tcreateOrder(elements, preferredOrder);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(ITEM_NAMES)) {\n\t\t\t\t\t\tconst itemName = ITEM_NAMES[key];\n\t\t\t\t\t\tstats.hooks.getItemName\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"DefaultStatsPrinterPlugin\",\n\t\t\t\t\t\t\t\ttypeof itemName === \"string\" ? () => itemName : itemName\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(SIMPLE_ITEMS_JOINER)) {\n\t\t\t\t\t\tconst joiner = SIMPLE_ITEMS_JOINER[key];\n\t\t\t\t\t\tstats.hooks.printItems\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", joiner);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(SIMPLE_ELEMENT_JOINERS)) {\n\t\t\t\t\t\tconst joiner = SIMPLE_ELEMENT_JOINERS[key];\n\t\t\t\t\t\tstats.hooks.printElements\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", joiner);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(RESULT_MODIFIER)) {\n\t\t\t\t\t\tconst modifier = RESULT_MODIFIER[key];\n\t\t\t\t\t\tstats.hooks.result\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", modifier);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = DefaultStatsPrinterPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AAEA,MAAMA,uBAAuB,GAAG,EAAE;AAElC,MAAMC,MAAM,GAAG,CAACC,CAAC,EAAEC,QAAQ,EAAEF,MAAM,KAAMC,CAAC,KAAK,CAAC,GAAGC,QAAQ,GAAGF,MAAO;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,UAAU,GAAG,CAACC,KAAK,WAAmC;EAAA,IAAjC;IAAEC,UAAU,GAAGJ,CAAC,IAAK,GAAEA,CAAE;EAAE,CAAC;EACtD,MAAMK,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACF,KAAK,CAAC;EAC/B,IAAIE,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;IACpB,OAAOF,IAAI,CAACG,GAAG,CAACC,GAAG,IAAK,GAAEL,UAAU,CAACD,KAAK,CAACM,GAAG,CAAC,CAAE,KAAIA,GAAI,GAAE,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EACvE,CAAC,MAAM,IAAIL,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;IAC7B,OAAOH,UAAU,CAACD,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAClC;AACD,CAAC;AAED,MAAMM,eAAe,GAAGC,QAAQ,IAAI;EACnC,MAAMC,OAAO,GAAG,cAAc,CAACC,IAAI,CAACF,QAAQ,CAAC;EAC7C,IAAI,CAACC,OAAO,EAAE,OAAOD,QAAQ;EAE7B,MAAMG,GAAG,GAAGF,OAAO,CAAC,CAAC,CAAC,CAACN,MAAM,GAAGT,uBAAuB;EACvD,IAAIc,QAAQ,CAACL,MAAM,GAAGQ,GAAG,EAAE,OAAOH,QAAQ;EAC1C,OAAQ,GAAEA,QAAQ,CAACI,KAAK,CACvB,CAAC,EACDC,IAAI,CAACC,GAAG,CAACN,QAAQ,CAACL,MAAM,GAAG,iBAAkB,CAAC,EAAEQ,GAAG,CAAC,CACnD,IAAG;AACN,CAAC;AAED,MAAMI,aAAa,GAAGC,IAAI,IAAI;EAC7B,MAAM,GAAGC,MAAM,EAAET,QAAQ,CAAC,GAAG,iBAAiB,CAACE,IAAI,CAACM,IAAI,CAAC;EACzD,OAAO,CAACC,MAAM,EAAEV,eAAe,CAACC,QAAQ,CAAC,CAAC;AAC3C,CAAC;AAED,MAAMU,QAAQ,GAAG,CAACC,GAAG,EAAEC,EAAE,KAAKD,GAAG,CAACE,KAAK,CAAC,IAAI,CAAC,CAACjB,GAAG,CAACgB,EAAE,CAAC,CAACd,IAAI,CAAC,IAAI,CAAC;;AAEhE;AACA;AACA;AACA;AACA,MAAMgB,QAAQ,GAAG1B,CAAC,IAAKA,CAAC,IAAI,EAAE,GAAI,GAAEA,CAAE,EAAC,GAAI,IAAGA,CAAE,EAAE;AAElD,MAAM2B,SAAS,GAAGC,EAAE,IAAI;EACvB,OAAO,OAAOA,EAAE,KAAK,QAAQ,IAAIA,EAAE;AACpC,CAAC;AAED,MAAMC,SAAS,GAAG,CAACC,IAAI,EAAEC,KAAK,KAAK;EAClC,OAAOD,IAAI,IAAIA,IAAI,CAACvB,MAAM,GAAG,CAAC,GAAI,KAAIwB,KAAM,EAAC,GAAI,GAAEA,KAAM,EAAC;AAC3D,CAAC;;AAED;AACA,MAAMC,eAAe,GAAG;EACvB,sBAAsB,EAAE,CACvBC,CAAC,YAmBG;IAAA,IAlBJ;MACCC,IAAI;MACJC,IAAI;MACJC,KAAK;MACLC,GAAG;MACHC,MAAM;MACNC,cAAc;MACdC,UAAU;MACVC,WAAW,EAAE;QACZrB,IAAI;QACJsB,IAAI;QACJC,OAAO;QACPC,IAAI;QACJC,OAAO;QACPC,WAAW;QACXC;MACD;IACD,CAAC;IAED,MAAMC,IAAI,GAAGd,IAAI,KAAK,sBAAsB;IAC5C,MAAMe,eAAe,GACpBF,aAAa,GAAG,CAAC,GACdT,MAAM,CACL,GAAES,aAAc,IAAGhD,MAAM,CAACgD,aAAa,EAAE,SAAS,EAAE,UAAU,CAAE,EAAC,CACjE,GACD,EAAE;IACN,MAAMG,aAAa,GAClBJ,WAAW,GAAG,CAAC,GACZT,GAAG,CAAE,GAAES,WAAY,IAAG/C,MAAM,CAAC+C,WAAW,EAAE,OAAO,EAAE,QAAQ,CAAE,EAAC,CAAC,GAC/D,EAAE;IACN,MAAMK,WAAW,GAAGH,IAAI,IAAIJ,IAAI,GAAI,OAAMJ,UAAU,CAACI,IAAI,CAAE,EAAC,GAAG,EAAE;IACjE,MAAMQ,WAAW,GAAGV,IAAI,GAAI,KAAIA,IAAK,GAAE,GAAG,EAAE;IAC5C,MAAMW,cAAc,GACnBL,IAAI,IAAIH,OAAO,GAAI,GAAEN,cAAc,CAACM,OAAO,CAAE,IAAG,GAAG,EAAE;IACtD,MAAMS,cAAc,GAAGN,IAAI,IAAIL,OAAO,GAAI,WAAUA,OAAQ,EAAC,GAAG,EAAE;IAClE,MAAMY,WAAW,GAChBP,IAAI,IAAI5B,IAAI,GACTe,IAAI,CAACf,IAAI,CAAC,GACVA,IAAI,GACH,SAAQe,IAAI,CAACf,IAAI,CAAE,EAAC,GACrB4B,IAAI,GACJ,EAAE,GACF,OAAO;IACX,MAAMQ,cAAc,GACnBD,WAAW,IAAID,cAAc,GACzB,GAAEC,WAAY,KAAID,cAAe,GAAE,GACpCA,cAAc,IAAIC,WAAW,IAAI,SAAS;IAC9C,IAAIE,aAAa;IACjB,IAAIP,aAAa,IAAID,eAAe,EAAE;MACrCQ,aAAa,GAAI,iBAAgBP,aAAc,QAAOD,eAAgB,EAAC;IACxE,CAAC,MAAM,IAAIC,aAAa,EAAE;MACzBO,aAAa,GAAI,iBAAgBP,aAAc,EAAC;IACjD,CAAC,MAAM,IAAID,eAAe,EAAE;MAC3BQ,aAAa,GAAI,iBAAgBR,eAAgB,EAAC;IACnD,CAAC,MAAM,IAAIH,WAAW,KAAK,CAAC,IAAIC,aAAa,KAAK,CAAC,EAAE;MACpDU,aAAa,GAAI,YAAWrB,KAAK,CAAC,cAAc,CAAE,EAAC;IACpD,CAAC,MAAM;MACNqB,aAAa,GAAI,UAAS;IAC3B;IACA,IACCJ,cAAc,IACdC,cAAc,IACdJ,aAAa,IACbD,eAAe,IACdH,WAAW,KAAK,CAAC,IAAIC,aAAa,KAAK,CAAE,IAC1CI,WAAW,IACXC,WAAW,EAEX,OAAQ,GAAEC,cAAe,GAAEG,cAAe,IAAGC,aAAc,GAAEN,WAAY,GAAEC,WAAY,EAAC;EAC1F,CAAC;EACD,yCAAyC,EAAErB,KAAK,IAC/CA,KAAK,GACD,GAAEA,KAAM,IAAGhC,MAAM,CAClBgC,KAAK,EACL,aAAa,EACb,eAAe,CACb,oHAAmH,GACrH2B,SAAS;EACb,uCAAuC,EAAE,CAAC3B,KAAK;IAAA,IAAE;MAAEO;IAAO,CAAC;IAAA,OAC1DP,KAAK,GACFO,MAAM,CACL,GAAEP,KAAM,IAAGhC,MAAM,CACjBgC,KAAK,EACL,WAAW,EACX,aAAa,CACZ,oHAAmH,CACpH,GACD2B,SAAS;EAAA;EACb,iBAAiB,EAAE,CAACC,GAAG;IAAA,IAAE;MAAExB;IAAK,CAAC;IAAA,OAChCwB,GAAG,GACC,wBAAuBxB,IAAI,CAACyB,IAAI,CAACC,SAAS,CAACF,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAE,EAAC,GAC5DD,SAAS;EAAA;EACb,wBAAwB,EAAE,CAACI,UAAU;IAAA,IAAE;MAAE3B;IAAK,CAAC;IAAA,OAC7C,eAAcA,IAAI,CAAC2B,UAAU,IAAI,QAAQ,CAAE,EAAC;EAAA;EAC9C,yBAAyB,EAAE,CAACC,WAAW,EAAEC,OAAO,EAAEC,OAAO,KACxDC,KAAK,CAACC,OAAO,CAACJ,WAAW,CAAC,GACvBL,SAAS,GACTO,OAAO,CAACG,KAAK,CAACJ,OAAO,CAAC9B,IAAI,EAAE5B,MAAM,CAAC+D,MAAM,CAACN,WAAW,CAAC,EAAE;IACxD,GAAGC,OAAO;IACVM,cAAc,EAAE;EAChB,CAAC,CAAC;EACN,8BAA8B,EAAE,CAACC,gBAAgB,EAAEP,OAAO,EAAEC,OAAO,KAAK;IACvE,IAAI,CAACC,KAAK,CAACC,OAAO,CAACI,gBAAgB,CAAC,EAAE;MACrC,MAAM;QACL9B,WAAW,EAAE;UAAEsB;QAAY;MAC5B,CAAC,GAAGC,OAAO;MACX,IAAIQ,WAAW,GAAGlE,MAAM,CAAC+D,MAAM,CAACE,gBAAgB,CAAC;MACjD,IAAIR,WAAW,EAAE;QAChBS,WAAW,GAAGA,WAAW,CAACC,MAAM,CAC/BC,KAAK,IACJ,CAACpE,MAAM,CAACqE,SAAS,CAACC,cAAc,CAACC,IAAI,CAACd,WAAW,EAAEW,KAAK,CAACtD,IAAI,CAAC,CAC/D;MACF;MACA,OAAO6C,OAAO,CAACG,KAAK,CAACJ,OAAO,CAAC9B,IAAI,EAAEsC,WAAW,EAAE;QAC/C,GAAGR,OAAO;QACVM,cAAc,EAAE;MACjB,CAAC,CAAC;IACH;EACD,CAAC;EACD,+BAA+B,EAAE,MAAM,EAAE;EAEzC,6BAA6B,EAAE,CAC9BQ,eAAe;IAAA,IACf;MAAErC,WAAW,EAAE;QAAEsC;MAAQ;IAAE,CAAC;IAAA,OAE5BD,eAAe,GAAG,CAAC,GACf,GAAEjD,SAAS,CAACkD,OAAO,EAAED,eAAe,CAAE,IAAG/E,MAAM,CAChD+E,eAAe,EACf,QAAQ,EACR,SAAS,CACP,EAAC,GACHpB,SAAS;EAAA;EACb,4BAA4B,EAAE,CAACsB,cAAc;IAAA,IAAE;MAAEvC,WAAW,EAAE;QAAEwC;MAAO;IAAE,CAAC;IAAA,OACzED,cAAc,GAAG,CAAC,GACd,GAAEnD,SAAS,CAACoD,MAAM,EAAED,cAAc,CAAE,IAAGjF,MAAM,CAC9CiF,cAAc,EACd,OAAO,EACP,QAAQ,CACN,EAAC,GACHtB,SAAS;EAAA;EACb,qBAAqB,EAAE,CAACwB,OAAO,EAAElB,OAAO,EAAEC,OAAO,KAChDC,KAAK,CAACC,OAAO,CAACe,OAAO,CAAC,GACnBxB,SAAS,GACTO,OAAO,CAACG,KAAK,CACbJ,OAAO,CAAC9B,IAAI,EACZ5B,MAAM,CAAC6E,OAAO,CAACD,OAAO,CAAC,CAAC1E,GAAG,CAAC;IAAA,IAAC,CAACY,IAAI,EAAEgE,KAAK,CAAC;IAAA,OAAM;MAAE,GAAGA,KAAK;MAAEhE;IAAK,CAAC;EAAA,CAAC,CAAC,EACpE4C,OAAO,CACN;EACL,iCAAiC,EAAE,CAAC/B,CAAC,YAA8B;IAAA,IAA5B;MAAEK,MAAM;MAAEG;IAAY,CAAC;IAC7D,IACC,CAACA,WAAW,CAAC4C,QAAQ,IACrB5C,WAAW,CAACM,aAAa,GAAG,CAAC,IAC7BN,WAAW,CAAC6C,QAAQ,EACnB;MACD,MAAMC,aAAa,GAClB9C,WAAW,CAACM,aAAa,GAAGN,WAAW,CAAC6C,QAAQ,CAAC/E,MAAM;MACxD,IAAIgF,aAAa,GAAG,CAAC,EAAE;QACtB,OAAOjD,MAAM,CACX,GAAEiD,aAAc,IAAGxF,MAAM,CACzBwF,aAAa,EACb,SAAS,EACT,UAAU,CACT,yBACD9C,WAAW,CAAC4C,QAAQ,GACjB,EAAE,GACF,yEACH,EAAC,CACF;MACF;IACD;EACD,CAAC;EACD,+BAA+B,EAAE,CAACpD,CAAC,aAA2B;IAAA,IAAzB;MAAEI,GAAG;MAAEI;IAAY,CAAC;IACxD,IACC,CAACA,WAAW,CAAC4C,QAAQ,IACrB5C,WAAW,CAACK,WAAW,GAAG,CAAC,IAC3BL,WAAW,CAAC+C,MAAM,EACjB;MACD,MAAMC,WAAW,GAAGhD,WAAW,CAACK,WAAW,GAAGL,WAAW,CAAC+C,MAAM,CAACjF,MAAM;MACvE,IAAIkF,WAAW,GAAG,CAAC,EAAE;QACpB,OAAOpD,GAAG,CACR,GAAEoD,WAAY,IAAG1F,MAAM,CACvB0F,WAAW,EACX,OAAO,EACP,QAAQ,CACP,yBACDhD,WAAW,CAAC4C,QAAQ,GACjB,EAAE,GACF,yEACH,EAAC,CACF;MACF;IACD;EACD,CAAC;EAED,YAAY,EAAEnD,IAAI,IAAIA,IAAI;EAC1B,YAAY,EAAE,CAACd,IAAI;IAAA,IAAE;MAAEsE,cAAc;MAAEC,KAAK,EAAE;QAAEC;MAAgB;IAAE,CAAC;IAAA,OAClEF,cAAc,CAACtE,IAAI,EAAEwE,eAAe,CAAC;EAAA;EACtC,YAAY,EAAE,CACbC,IAAI;IAAA,IACJ;MAAEF,KAAK,EAAE;QAAEC;MAAgB,CAAC;MAAEtD,MAAM;MAAEF,KAAK;MAAEhC;IAAW,CAAC;IAAA,OACpDwF,eAAe,GAAGtD,MAAM,CAAClC,UAAU,CAACyF,IAAI,CAAC,CAAC,GAAGzF,UAAU,CAACyF,IAAI,CAAC;EAAA,CAAC;EACpE,eAAe,EAAE,CAACC,OAAO;IAAA,IAAE;MAAE1D,KAAK;MAAE2D;IAAW,CAAC;IAAA,OAC/CD,OAAO,GAAG1D,KAAK,CAAC2D,UAAU,CAAC,SAAS,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACnD,uBAAuB,EAAE,CAACsC,eAAe;IAAA,IAAE;MAAE1D,MAAM;MAAEyD;IAAW,CAAC;IAAA,OAChEC,eAAe,GAAG1D,MAAM,CAACyD,UAAU,CAAC,mBAAmB,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACtE,cAAc,EAAE,CAACuC,MAAM;IAAA,IAAE;MAAE7D,KAAK;MAAE2D;IAAW,CAAC;IAAA,OAC7CE,MAAM,GAAG7D,KAAK,CAAC2D,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACjD,uBAAuB,EAAE,CAACkC,eAAe;IAAA,IAAE;MAAEtD,MAAM;MAAEyD;IAAW,CAAC;IAAA,OAChEH,eAAe,GAAGtD,MAAM,CAACyD,UAAU,CAAC,KAAK,CAAC,CAAC,GAAGrC,SAAS;EAAA;EAExD,sBAAsB,EAAE,CAACwC,SAAS;IAAA,IAAE;MAAE9D,KAAK;MAAE2D;IAAW,CAAC;IAAA,OACxDG,SAAS,GAAG9D,KAAK,CAAC2D,UAAU,CAAC,WAAW,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACvD,6BAA6B,EAAE,CAACyC,gBAAgB;IAAA,IAAE;MAAEJ;IAAW,CAAC;IAAA,OAC/DI,gBAAgB,GAAGJ,UAAU,CAAC,mBAAmB,CAAC,GAAGrC,SAAS;EAAA;EAC/D,2BAA2B,EAAE,CAAC0C,cAAc;IAAA,IAAE;MAAEL;IAAW,CAAC;IAAA,OAC3DK,cAAc,GACXL,UAAU,CACVK,cAAc,KAAK,IAAI,GACpB,kBAAkB,GACjB,SAAQA,cAAe,EAAC,CAC3B,GACD1C,SAAS;EAAA;EACb,wBAAwB,EAAE,CAAC2C,WAAW;IAAA,IAAE;MAAEjE,KAAK;MAAE2D;IAAW,CAAC;IAAA,OAC5DM,WAAW,GAAGjE,KAAK,CAAC2D,UAAU,CAAC,KAAK,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACnD,iCAAiC,EAAE,CAClC4C,oBAAoB;IAAA,IACpB;MAAElE,KAAK;MAAE2D;IAAW,CAAC;IAAA,OAChBO,oBAAoB,GAAGlE,KAAK,CAAC2D,UAAU,CAAC,KAAK,CAAC,CAAC,GAAGrC,SAAS;EAAA,CAAC;EAClE,kBAAkB,EAAE,MAAM,IAAI;EAC9B,uBAAuB,EAAE,CAAC6C,eAAe;IAAA,IAAE;MAAEZ,KAAK,EAAE;QAAEa;MAAQ;IAAE,CAAC;IAAA,OAChED,eAAe,GAAG,CAAC,GACf,GAAE1E,SAAS,CAAC2E,OAAO,EAAED,eAAe,CAAE,YAAWxG,MAAM,CACxDwG,eAAe,EACf,OAAO,EACP,QAAQ,CACN,EAAC,GACH7C,SAAS;EAAA;EACb,wBAAwB,EAAE,CAAC+C,gBAAgB;IAAA,IAAE;MAAEd,KAAK,EAAE;QAAEN;MAAS;IAAE,CAAC;IAAA,OACnEoB,gBAAgB,GAAG,CAAC,GAChB,GAAE5E,SAAS,CAACwD,QAAQ,EAAEoB,gBAAgB,CAAE,IAAG1G,MAAM,CAClD0G,gBAAgB,EAChB,OAAO,EACP,QAAQ,CACN,EAAC,GACH/C,SAAS;EAAA;EAEbgD,UAAU,EAAE,CAAC9E,EAAE;IAAA,IAAE;MAAE+E;IAAc,CAAC;IAAA,OAAKA,aAAa,CAAC/E,EAAE,CAAC;EAAA;EAExDgF,cAAc,EAAExF,IAAI,IAAIA,IAAI;EAC5ByF,gBAAgB,EAAEzF,IAAI,IAAIA,IAAI;EAE9B,aAAa,EAAEc,IAAI,IAAKA,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGwB,SAAU;EAC7D,WAAW,EAAE,CAAC9B,EAAE;IAAA,IAAE;MAAEkF;IAAe,CAAC;IAAA,OACnCnF,SAAS,CAACC,EAAE,CAAC,GAAGkF,cAAc,CAAClF,EAAE,CAAC,GAAG8B,SAAS;EAAA;EAC/C,aAAa,EAAE,CAACtC,IAAI,aAAe;IAAA,IAAb;MAAEe;IAAK,CAAC;IAC7B,MAAM,CAACd,MAAM,EAAET,QAAQ,CAAC,GAAGO,aAAa,CAACC,IAAI,CAAC;IAC9C,OAAQ,GAAEC,MAAM,IAAI,EAAG,GAAEc,IAAI,CAACvB,QAAQ,IAAI,EAAE,CAAE,EAAC;EAChD,CAAC;EACD,mBAAmB,EAAEmG,UAAU,IAAIrD,SAAS;EAC5C,cAAc,EAAE,CAACsD,KAAK;IAAA,IAAE;MAAEC;IAAY,CAAC;IAAA,OACtCD,KAAK,GAAGC,WAAW,CAACD,KAAK,CAAC,GAAGtD,SAAS;EAAA;EACvC,cAAc,EAAExD,UAAU;EAC1B,iBAAiB,EAAE,CAAC0B,EAAE;IAAA,IAAE;MAAE+E;IAAc,CAAC;IAAA,OAAKA,aAAa,CAAC/E,EAAE,CAAC;EAAA;EAC/D,cAAc,EAAE,CAACsF,KAAK;IAAA,IAAE;MAAEnB;IAAW,CAAC;IAAA,OACrCmB,KAAK,KAAK,IAAI,GAAGnB,UAAU,CAAE,SAAQmB,KAAM,EAAC,CAAC,GAAGxD,SAAS;EAAA;EAC1D,kBAAkB,EAAE,CAACyD,SAAS;IAAA,IAAE;MAAEpB,UAAU;MAAE1D;IAAI,CAAC;IAAA,OAClD8E,SAAS,KAAK,KAAK,GAAG9E,GAAG,CAAC0D,UAAU,CAAC,eAAe,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACnE,eAAe,EAAE,CAAC0D,MAAM;IAAA,IAAE;MAAErB,UAAU;MAAEzD;IAAO,CAAC;IAAA,OAC/C8E,MAAM,GAAG9E,MAAM,CAACyD,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAGrC,SAAS;EAAA;EAClD,gBAAgB,EAAE,CAAC2D,OAAO;IAAA,IAAE;MAAEtB,UAAU;MAAEzD;IAAO,CAAC;IAAA,OACjD+E,OAAO,GAAG/E,MAAM,CAACyD,UAAU,CAAC,SAAS,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACpD,iBAAiB,EAAE,CAAC4D,QAAQ;IAAA,IAAE;MAAEvB,UAAU;MAAEzD;IAAO,CAAC;IAAA,OACnDgF,QAAQ,GAAGhF,MAAM,CAACyD,UAAU,CAAC,UAAU,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACtD,kBAAkB,EAAE,CAAC6D,SAAS;IAAA,IAAE;MAAExB,UAAU;MAAEyB;IAAK,CAAC;IAAA,OACnDD,SAAS,GAAGC,IAAI,CAACzB,UAAU,CAAC,WAAW,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACtD,cAAc,EAAE,CAAC+D,KAAK;IAAA,IAAE;MAAE1B,UAAU;MAAEzD;IAAO,CAAC;IAAA,OAC7CmF,KAAK,GAAGnF,MAAM,CAACyD,UAAU,CAAC,OAAO,CAAC,CAAC,GAAGrC,SAAS;EAAA;EAChD,sBAAsB,EAAE,CAACgE,aAAa;IAAA,IAAE;MAAE3B,UAAU;MAAEzD;IAAO,CAAC;IAAA,OAC7DoF,aAAa,GAAGpF,MAAM,CAACyD,UAAU,CAAC,gBAAgB,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACjE,0BAA0B,EAAE,CAACiE,iBAAiB;IAAA,IAAE;MAAE5B,UAAU;MAAE3D;IAAM,CAAC;IAAA,OACpEuF,iBAAiB,GAAGvF,KAAK,CAAC2D,UAAU,CAAC,qBAAqB,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACzE,eAAe,EAAE,CAACuC,MAAM;IAAA,IAAE;MAAEF,UAAU;MAAE3D;IAAM,CAAC;IAAA,OAC9C6D,MAAM,GAAG7D,KAAK,CAAC2D,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACjD,eAAe,EAAE,CAACuB,MAAM;IAAA,IAAE;MAAEc,UAAU;MAAE6B;IAAQ,CAAC;IAAA,OAChD3C,MAAM,IAAIA,MAAM,CAAC1E,MAAM,GACpBqH,OAAO,CACP7B,UAAU,CACR,GAAEd,MAAM,CAAC1E,MAAO,IAAGR,MAAM,CAACkF,MAAM,CAAC1E,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAE,EAAC,CAC9D,CACA,GACDmD,SAAS;EAAA;EACb,iBAAiB,EAAE,CAAC4B,QAAQ;IAAA,IAAE;MAAES,UAAU;MAAEzD;IAAO,CAAC;IAAA,OACnDgD,QAAQ,KAAK,IAAI,GACdhD,MAAM,CAACyD,UAAU,CAAC,UAAU,CAAC,CAAC,GAC9BT,QAAQ,GACRhD,MAAM,CACNyD,UAAU,CAAE,GAAET,QAAS,IAAGvF,MAAM,CAACuF,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAE,EAAC,CAAC,CACnE,GACD5B,SAAS;EAAA;EACb,eAAe,EAAE,CAAC8B,MAAM;IAAA,IAAE;MAAEO,UAAU;MAAE1D;IAAI,CAAC;IAAA,OAC5CmD,MAAM,KAAK,IAAI,GACZnD,GAAG,CAAC0D,UAAU,CAAC,QAAQ,CAAC,CAAC,GACzBP,MAAM,GACNnD,GAAG,CAAC0D,UAAU,CAAE,GAAEP,MAAO,IAAGzF,MAAM,CAACyF,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAE,EAAC,CAAC,CAAC,GACjE9B,SAAS;EAAA;EACb,wBAAwB,EAAE,CAACmE,eAAe,aAA2B;IAAA,IAAzB;MAAE9B,UAAU;MAAEyB;IAAK,CAAC;IAC/D,IAAItD,KAAK,CAACC,OAAO,CAAC0D,eAAe,CAAC,EAAE;MACnC,IAAIA,eAAe,CAACtH,MAAM,KAAK,CAAC,EAAE,OAAOiH,IAAI,CAACzB,UAAU,CAAC,YAAY,CAAC,CAAC;MACvE,OAAOyB,IAAI,CAACzB,UAAU,CAAE,YAAW8B,eAAe,CAACnH,IAAI,CAAC,IAAI,CAAE,EAAC,CAAC,CAAC;IAClE;EACD,CAAC;EACD,oBAAoB,EAAE,CAACoH,WAAW,aAAmC;IAAA,IAAjC;MAAE/B,UAAU;MAAEyB,IAAI;MAAEO;IAAO,CAAC;IAC/D,IAAID,WAAW,KAAK,IAAI,EAAE;MACzB,IAAIA,WAAW,KAAK,IAAI,EAAE,OAAON,IAAI,CAACzB,UAAU,CAAC,sBAAsB,CAAC,CAAC;MACzE,IAAI+B,WAAW,KAAK,KAAK,EAAE,OAAON,IAAI,CAACzB,UAAU,CAAC,eAAe,CAAC,CAAC;MACnE,IAAI7B,KAAK,CAACC,OAAO,CAAC2D,WAAW,CAAC,EAAE;QAC/B,IAAIA,WAAW,CAACvH,MAAM,KAAK,CAAC,EAC3B,OAAOiH,IAAI,CAACzB,UAAU,CAAC,iBAAiB,CAAC,CAAC;QAC3C,MAAMiC,oBAAoB,GAAG9D,KAAK,CAACC,OAAO,CAAC4D,MAAM,CAACF,eAAe,CAAC,GAC/DE,MAAM,CAACF,eAAe,CAACtH,MAAM,GAC7B,IAAI;QACP,IACCyH,oBAAoB,KAAK,IAAI,IAC7BA,oBAAoB,KAAKF,WAAW,CAACvH,MAAM,EAC1C;UACD,OAAOiH,IAAI,CAACzB,UAAU,CAAC,kBAAkB,CAAC,CAAC;QAC5C,CAAC,MAAM;UACN,OAAOyB,IAAI,CACVzB,UAAU,CAAE,2BAA0B+B,WAAW,CAACpH,IAAI,CAAC,IAAI,CAAE,EAAC,CAAC,CAC/D;QACF;MACD;IACD;EACD,CAAC;EACD,8BAA8B,EAAE,CAACuH,mBAAmB;IAAA,IAAE;MAAE3F;IAAO,CAAC;IAAA,OAC/DA,MAAM,CAAC2F,mBAAmB,CAAC;EAAA;EAC5B,mBAAmB,EAAE,CAACC,UAAU;IAAA,IAAE;MAAEH;IAAO,CAAC;IAAA,OAC3CA,MAAM,CAACI,OAAO,GAAGzE,SAAS,GAAG,EAAE;EAAA;EAChC,gBAAgB,EAAEyE,OAAO,IAAIzE,SAAS;EACtC,wBAAwB,EAAE,CAACoB,eAAe;IAAA,IAAE;MAAEiD,MAAM,EAAE;QAAEhD;MAAQ;IAAE,CAAC;IAAA,OAClED,eAAe,GAAG,CAAC,GACf,GAAEjD,SAAS,CAACkD,OAAO,EAAED,eAAe,CAAE,WAAU/E,MAAM,CACvD+E,eAAe,EACf,QAAQ,EACR,SAAS,CACP,EAAC,GACHpB,SAAS;EAAA;EACb,wBAAwB,EAAE,CAAC0E,eAAe;IAAA,IAAE;MAAEL,MAAM,EAAE;QAAEM;MAAQ;IAAE,CAAC;IAAA,OAClED,eAAe,GAAG,CAAC,GACf,GAAEvG,SAAS,CAACwG,OAAO,EAAED,eAAe,CAAE,IAAGrI,MAAM,CAChDqI,eAAe,EACf,QAAQ,EACR,SAAS,CACP,EAAC,GACH1E,SAAS;EAAA;EACb,yBAAyB,EAAE,CAAC+C,gBAAgB;IAAA,IAAE;MAAEsB,MAAM,EAAE;QAAE1C;MAAS;IAAE,CAAC;IAAA,OACrEoB,gBAAgB,GAAG,CAAC,GAChB,GAAE5E,SAAS,CAACwD,QAAQ,EAAEoB,gBAAgB,CAAE,IAAG1G,MAAM,CAClD0G,gBAAgB,EAChB,QAAQ,EACR,SAAS,CACP,EAAC,GACH/C,SAAS;EAAA;EACb,mBAAmB,EAAE,MAAM,IAAI;EAE/B,iBAAiB,EAAE,CAAC9B,EAAE;IAAA,IAAE;MAAEkF;IAAe,CAAC;IAAA,OAAKA,cAAc,CAAClF,EAAE,CAAC;EAAA;EACjE,4BAA4B,EAAE,CAACwD,KAAK;IAAA,IAAE;MAAE5C;IAAW,CAAC;IAAA,OAAKA,UAAU,CAAC4C,KAAK,CAAC;EAAA;EAE1E,mBAAmB,EAAElD,IAAI,IAAIA,IAAI;EACjC,0BAA0B,EAAE,CAACoG,WAAW;IAAA,IAAE;MAAEd;IAAK,CAAC;IAAA,OACjDA,IAAI,CAAC7G,eAAe,CAAC2H,WAAW,CAAC,CAAC;EAAA;EACnC,uBAAuB,EAAE,CAACC,QAAQ;IAAA,IAAE;MAAEzB;IAAe,CAAC;IAAA,OACrDnF,SAAS,CAAC4G,QAAQ,CAAC,GAAGzB,cAAc,CAACyB,QAAQ,CAAC,GAAG7E,SAAS;EAAA;EAC3D,qBAAqB,EAAE,CAACqE,MAAM;IAAA,IAAE;MAAEH;IAAQ,CAAC;IAAA,OAAKA,OAAO,CAACG,MAAM,CAAC;EAAA;EAC/D,kBAAkB,EAAES,GAAG,IAAIA,GAAG;EAC9B,0BAA0B,EAAE,CAACC,WAAW;IAAA,IAAE;MAAEjB;IAAK,CAAC;IAAA,OAAKA,IAAI,CAACiB,WAAW,CAAC;EAAA;EACxE,qBAAqB,EAAE,CAACC,MAAM;IAAA,IAAE;MAAE3C;IAAW,CAAC;IAAA,OAC7C2C,MAAM,GAAGhF,SAAS,GAAGqC,UAAU,CAAC,UAAU,CAAC;EAAA;EAC5C,6BAA6B,EAAE,CAACgC,MAAM;IAAA,IAAE;MAAEH;IAAQ,CAAC;IAAA,OAAKA,OAAO,CAACG,MAAM,CAAC;EAAA;EACvE,+BAA+B,EAAE,CAChCtB,gBAAgB;IAAA,IAChB;MAAEkC,YAAY,EAAE;QAAEtD;MAAS;IAAE,CAAC;IAAA,OAE9BoB,gBAAgB,GAAG,CAAC,GAChB,GAAE5E,SAAS,CAACwD,QAAQ,EAAEoB,gBAAgB,CAAE,IAAG1G,MAAM,CAClD0G,gBAAgB,EAChB,QAAQ,EACR,SAAS,CACP,EAAC,GACH/C,SAAS;EAAA;EAEb,sBAAsB,EAAE,CAAC0B,KAAK;IAAA,IAAE;MAAE5C;IAAW,CAAC;IAAA,OAAKA,UAAU,CAAC4C,KAAK,CAAC;EAAA;EACpE,0BAA0B,EAAE,CAACA,KAAK;IAAA,IAAE;MAAE5C;IAAW,CAAC;IAAA,OAChD,cAAaA,UAAU,CAAC4C,KAAK,CAAE,EAAC;EAAA;EAClC,0BAA0B,EAAE,CAACA,KAAK;IAAA,IAAE;MAAE5C;IAAW,CAAC;IAAA,OAChD,cAAaA,UAAU,CAAC4C,KAAK,CAAE,EAAC;EAAA;EAClC,4BAA4B,EAAE,CAACA,KAAK;IAAA,IAAE;MAAE5C;IAAW,CAAC;IAAA,OAClD,gBAAeA,UAAU,CAAC4C,KAAK,CAAE,EAAC;EAAA;EACpC,yBAAyB,EAAE,CAACA,KAAK;IAAA,IAAE;MAAE5C;IAAW,CAAC;IAAA,OAC/C,aAAYA,UAAU,CAAC4C,KAAK,CAAE,EAAC;EAAA;EACjC,wBAAwB,EAAE,CAACA,KAAK;IAAA,IAAE;MAAE5C;IAAW,CAAC;IAAA,OAC9C,YAAWA,UAAU,CAAC4C,KAAK,CAAE,EAAC;EAAA;EAChC,oCAAoC,EAAE,CAACA,KAAK;IAAA,IAAE;MAAE5C;IAAW,CAAC;IAAA,OAC3D4C,KAAK,GAAI,yBAAwB5C,UAAU,CAAC4C,KAAK,CAAE,EAAC,GAAG1B,SAAS;EAAA;EACjE,sCAAsC,EAAE,CAAC0B,KAAK;IAAA,IAAE;MAAE5C;IAAW,CAAC;IAAA,OAC7D4C,KAAK,GAAI,2BAA0B5C,UAAU,CAAC4C,KAAK,CAAE,EAAC,GAAG1B,SAAS;EAAA;EAEnE,kBAAkB,EAAE,CAACzB,CAAC;IAAA,IAAE;MAAEqC;IAAe,CAAC;IAAA,OAAKA,cAAc;EAAA;EAC7D,uBAAuB,EAAE,MAAM,IAAI;EACnC,iBAAiB,EAAE,CAAClD,IAAI;IAAA,IAAE;MAAEe;IAAK,CAAC;IAAA,OAAKA,IAAI,CAACf,IAAI,CAAC;EAAA;EACjD,4BAA4B,EAAE,CAACwE,eAAe;IAAA,IAAE;MAAEG,UAAU;MAAEzD;IAAO,CAAC;IAAA,OACrEsD,eAAe,GAAGtD,MAAM,CAACyD,UAAU,CAAC,KAAK,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACxD,uBAAuB,EAAE,CAACmC,IAAI;IAAA,IAAE;MAAEzF;IAAW,CAAC;IAAA,OAC7CyF,IAAI,GAAGzF,UAAU,CAACyF,IAAI,CAAC,GAAGnC,SAAS;EAAA;EACpC,gCAAgC,EAAE,CAACmC,IAAI;IAAA,IAAE;MAAEzF;IAAW,CAAC;IAAA,OACtDyF,IAAI,GAAI,IAAGzF,UAAU,CAACyF,IAAI,CAAE,GAAE,GAAGnC,SAAS;EAAA;EAC3C,2BAA2B,EAAE,CAAC1D,CAAC;IAAA,IAAE;MAAE4I,UAAU,EAAE;QAAE3D;MAAO;IAAE,CAAC;IAAA,OAC1DjF,CAAC,GAAG,CAAC,GACD,GAAE6B,SAAS,CAACoD,MAAM,EAAEjF,CAAC,CAAE,IAAGD,MAAM,CAACC,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAE,EAAC,GACzD0D,SAAS;EAAA;EACb,oCAAoC,EAAE,CACrC1D,CAAC;IAAA,IACD;MAAE4I,UAAU,EAAE;QAAEC;MAAgB;IAAE,CAAC;IAAA,OAEnC7I,CAAC,GAAG,CAAC,GACD,GAAE6B,SAAS,CAACgH,eAAe,EAAE7I,CAAC,CAAE,cAAaD,MAAM,CACpDC,CAAC,EACD,OAAO,EACP,QAAQ,CACN,EAAC,GACH0D,SAAS;EAAA;EACb,gBAAgB,EAAE,MAAM,GAAG;EAC3B,sBAAsB,EAAE,CAACiC,KAAK;IAAA,IAAE;MAAEvD;IAAM,CAAC;IAAA,OAAKA,KAAK,CAACuD,KAAK,CAAC;EAAA;EAC1D,sBAAsB,EAAE,CAACE,IAAI;IAAA,IAAE;MAAEzF,UAAU;MAAEwI;IAAW,CAAC;IAAA,OACxDA,UAAU,CAAC3D,MAAM,CAAC1E,MAAM,GAAG,CAAC,IAC3BqI,UAAU,CAACC,eAAe,IAAID,UAAU,CAACC,eAAe,CAACtI,MAAM,GAAG,CAAE,GAClEH,UAAU,CAACyF,IAAI,CAAC,GAChBnC,SAAS;EAAA;EACb,qBAAqB,EAAE,CAAC2B,QAAQ,EAAErB,OAAO,EAAEC,OAAO,KACjDC,KAAK,CAACC,OAAO,CAACkB,QAAQ,CAAC,GACpB3B,SAAS,GACTO,OAAO,CAACG,KAAK,CACbJ,OAAO,CAAC9B,IAAI,EACZ5B,MAAM,CAACD,IAAI,CAACgF,QAAQ,CAAC,CAAC7E,GAAG,CAACC,GAAG,KAAK;IACjCyB,IAAI,EAAEzB,GAAG;IACT4E,QAAQ,EAAEA,QAAQ,CAAC5E,GAAG;EACvB,CAAC,CAAC,CAAC,EACHuD,OAAO,CACN;EACL,2BAA2B,EAAE9B,IAAI,IAAK,GAAEA,IAAK,GAAE;EAC/C,0BAA0B,EAAE,CAAC4G,IAAI;IAAA,IAAE;MAAEpD;IAAe,CAAC;IAAA,OACpDA,cAAc,CAACoD,IAAI,CAAC;EAAA;EACrB,0BAA0B,EAAE,CAAClH,EAAE;IAAA,IAAE;MAAE+E;IAAc,CAAC;IAAA,OAAKA,aAAa,CAAC/E,EAAE,CAAC;EAAA;EACxE,sBAAsB,EAAER,IAAI,IAAKA,IAAI,GAAI,UAASA,IAAK,GAAE,GAAGsC,SAAU;EAEtE,UAAU,EAAE,CAAC9B,EAAE;IAAA,IAAE;MAAE+E;IAAc,CAAC;IAAA,OAAKA,aAAa,CAAC/E,EAAE,CAAC;EAAA;EACxD,eAAe,EAAE,CAACkH,IAAI;IAAA,IAAE;MAAEpD;IAAe,CAAC;IAAA,OAAKA,cAAc,CAACoD,IAAI,CAAC;EAAA;EACnE,eAAe,EAAE1H,IAAI,IAAIA,IAAI;EAC7B,iBAAiB,EAAEA,IAAI,IAAIA,IAAI;EAC/B,iBAAiB,EAAEA,IAAI,IAAIA,IAAI;EAC/B,aAAa,EAAE,CAACjB,KAAK,EAAE6D,OAAO,KAAK9D,UAAU,CAACC,KAAK,EAAE6D,OAAO,CAAC;EAC7D,iBAAiB,EAAE,CAAC+E,OAAO,EAAE/E,OAAO,KACnCA,OAAO,CAAC2C,aAAa,CAACoC,OAAO,EAAE,QAAQ,CAAC;EACzC,kBAAkB,EAAE,CAACC,QAAQ,EAAEhF,OAAO,KACrCA,OAAO,CAAC2C,aAAa,CAACqC,QAAQ,EAAE,SAAS,CAAC;EAC3C,kBAAkB,EAAE,CAAC3D,QAAQ,EAAErB,OAAO,KACrCA,OAAO,CAAC2C,aAAa,CAACtB,QAAQ,EAAE,OAAO,CAAC;EACzC,uBAAuB,EAAE,CAAC4D,eAAe,EAAEjF,OAAO,EAAEC,OAAO,KAC1DC,KAAK,CAACC,OAAO,CAAC8E,eAAe,CAAC,GAC3BvF,SAAS,GACTO,OAAO,CAACG,KAAK,CACbJ,OAAO,CAAC9B,IAAI,EACZ5B,MAAM,CAACD,IAAI,CAAC4I,eAAe,CAAC,CAACzI,GAAG,CAACC,GAAG,KAAK;IACxCyB,IAAI,EAAEzB,GAAG;IACT4E,QAAQ,EAAE4D,eAAe,CAACxI,GAAG;EAC9B,CAAC,CAAC,CAAC,EACHuD,OAAO,CACN;EACL,8BAA8B,EAAE9B,IAAI,IAAK,GAAEA,IAAK,GAAE;EAClD,oCAAoC,EAAE,CAACN,EAAE;IAAA,IAAE;MAAE+E;IAAc,CAAC;IAAA,OAC3DhF,SAAS,CAACC,EAAE,CAAC,GAAG+E,aAAa,CAAC/E,EAAE,CAAC,GAAG8B,SAAS;EAAA;EAC9C,aAAa,EAAE,CAACwF,KAAK;IAAA,IAAE;MAAEnD,UAAU;MAAEzD;IAAO,CAAC;IAAA,OAC5C4G,KAAK,GAAG5G,MAAM,CAACyD,UAAU,CAAC,OAAO,CAAC,CAAC,GAAGrC,SAAS;EAAA;EAChD,eAAe,EAAE,CAACyF,OAAO;IAAA,IAAE;MAAEpD,UAAU;MAAEzD;IAAO,CAAC;IAAA,OAChD6G,OAAO,GAAG7G,MAAM,CAACyD,UAAU,CAAC,SAAS,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACpD,gBAAgB,EAAE,CAAC0F,QAAQ;IAAA,IAAE;MAAErD,UAAU;MAAE3D;IAAM,CAAC;IAAA,OACjDgH,QAAQ,GAAGhH,KAAK,CAAC2D,UAAU,CAAC,UAAU,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACrD,gBAAgB,EAAE,CAAC2F,QAAQ;IAAA,IAAE;MAAEtD,UAAU;MAAE3D;IAAM,CAAC;IAAA,OACjDiH,QAAQ,GAAGjH,KAAK,CAAC2D,UAAU,CAAC,UAAU,CAAC,CAAC,GAAGrC,SAAS;EAAA;EACrD,cAAc,EAAE,CAAC4F,MAAM;IAAA,IAAE;MAAEhH;IAAO,CAAC;IAAA,OAAMgH,MAAM,GAAGhH,MAAM,CAACgH,MAAM,CAAC,GAAG5F,SAAS;EAAA,CAAC;EAC7E,uBAAuB,EAAE,CAACoB,eAAe;IAAA,IAAE;MAAEyE,KAAK,EAAE;QAAExE;MAAQ;IAAE,CAAC;IAAA,OAChED,eAAe,GAAG,CAAC,GACf,GAAEjD,SAAS,CAACkD,OAAO,EAAED,eAAe,CAAE,UAAS/E,MAAM,CACtD+E,eAAe,EACf,QAAQ,EACR,SAAS,CACP,EAAC,GACHpB,SAAS;EAAA;EACb,kBAAkB,EAAE,MAAM,IAAI;EAE9B,qBAAqB,EAAE8F,OAAO,IAAIA,OAAO;EACzC,sBAAsB,EAAE,CAACjB,QAAQ;IAAA,IAAE;MAAEzB;IAAe,CAAC;IAAA,OACpDnF,SAAS,CAAC4G,QAAQ,CAAC,GAAGzB,cAAc,CAACyB,QAAQ,CAAC,GAAG7E,SAAS;EAAA;EAC3D,wBAAwB,EAAE,CAAC+F,UAAU;IAAA,IAAE;MAAEtH;IAAK,CAAC;IAAA,OAAKA,IAAI,CAACsH,UAAU,CAAC;EAAA;EACpE,iBAAiB,EAAEjB,GAAG,IAAIA,GAAG;EAE7B,oBAAoB,EAAE,CAACkB,YAAY;IAAA,IAAE;MAAEvH;IAAK,CAAC;IAAA,OAC5CuH,YAAY,GAAGvH,IAAI,CAAE,IAAGuH,YAAa,GAAE,CAAC,GAAGhG,SAAS;EAAA;EACrD,eAAe,EAAE,CAACiG,OAAO;IAAA,IAAE;MAAEhD;IAAc,CAAC;IAAA,OAC3ChF,SAAS,CAACgI,OAAO,CAAC,GAAGhD,aAAa,CAACgD,OAAO,CAAC,GAAGjG,SAAS;EAAA;EACxD,kBAAkB,EAAE,CAACkG,UAAU;IAAA,IAAE;MAAE7D;IAAW,CAAC;IAAA,OAC9C6D,UAAU,GAAG7D,UAAU,CAAC,OAAO,CAAC,GAAGrC,SAAS;EAAA;EAC7C,oBAAoB,EAAE,CAACmG,YAAY;IAAA,IAAE;MAAE9D;IAAW,CAAC;IAAA,OAClD8D,YAAY,GAAG9D,UAAU,CAAC,SAAS,CAAC,GAAGrC,SAAS;EAAA;EACjD,YAAY,EAAE,CAACoF,IAAI;IAAA,IAAE;MAAE3G;IAAK,CAAC;IAAA,OAAKA,IAAI,CAAC2G,IAAI,CAAC;EAAA;EAC5C,kBAAkB,EAAE,CAACW,UAAU,aAAe;IAAA,IAAb;MAAEtH;IAAK,CAAC;IACxC,OAAOsH,UAAU,CAACK,QAAQ,CAAC,GAAG,CAAC,GAC3B,GAAE3H,IAAI,CAACsH,UAAU,CAACM,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAE,KAAIN,UAAW,GAAE,GAC9D,GAAEtH,IAAI,CAACsH,UAAU,CAAE,EAAC;EACzB,CAAC;EACD,WAAW,EAAE,CAACjB,GAAG;IAAA,IAAE;MAAEpG;IAAM,CAAC;IAAA,OAAKA,KAAK,CAACoG,GAAG,CAAC;EAAA;EAC3C,eAAe,EAAE,CAACwB,OAAO;IAAA,IAAE;MAAE7H,IAAI;MAAE8H;IAAY,CAAC;IAAA,OAC/CD,OAAO,CAACF,QAAQ,CAAC,SAAS,CAAC,GAAGE,OAAO,GAAG7H,IAAI,CAAC8H,WAAW,CAACD,OAAO,CAAC,CAAC;EAAA;EACnE,eAAe,EAAE,CAACE,OAAO;IAAA,IAAE;MAAED;IAAY,CAAC;IAAA,OAAKA,WAAW,CAACC,OAAO,CAAC;EAAA;EACnE,aAAa,EAAEC,KAAK,IAAIA,KAAK;EAC7B,mBAAmB,EAAEC,WAAW,IAAI1G,SAAS;EAC7C,kBAAkB,EAAE,MAAM,IAAI;EAE9B,0CAA0C,EAAE,CAACsG,OAAO;IAAA,IAAE;MAAE3H;IAAI,CAAC;IAAA,OAC5Df,QAAQ,CAAC0I,OAAO,EAAEK,CAAC,IAAK,OAAMhI,GAAG,CAACgI,CAAC,CAAE,EAAC,CAAC;EAAA;EACxC,yCAAyC,EAAE,CAACL,OAAO;IAAA,IAAE;MAAE1H;IAAO,CAAC;IAAA,OAC9DhB,QAAQ,CAAC0I,OAAO,EAAEK,CAAC,IAAK,OAAM/H,MAAM,CAAC+H,CAAC,CAAE,EAAC,CAAC;EAAA;EAC3C,yCAAyC,EAAE,CAACL,OAAO;IAAA,IAAE;MAAE5H;IAAM,CAAC;IAAA,OAC7Dd,QAAQ,CAAC0I,OAAO,EAAEK,CAAC,IAAK,OAAMjI,KAAK,CAACiI,CAAC,CAAE,EAAC,CAAC;EAAA;EAC1C,wCAAwC,EAAE,CAACL,OAAO;IAAA,IAAE;MAAE7H;IAAK,CAAC;IAAA,OAC3Db,QAAQ,CAAC0I,OAAO,EAAEK,CAAC,IAAK,OAAMlI,IAAI,CAACkI,CAAC,CAAE,EAAC,CAAC;EAAA;EACzC,0CAA0C,EAAEL,OAAO,IAClD1I,QAAQ,CAAC0I,OAAO,EAAEK,CAAC,IAAK,OAAMA,CAAE,EAAC,CAAC;EACnC,0CAA0C,EAAEL,OAAO,IAClD1I,QAAQ,CAAC0I,OAAO,EAAEK,CAAC,IAAK,OAAMA,CAAE,EAAC,CAAC;EACnC,2CAA2C,EAAE,CAACL,OAAO;IAAA,IAAE;MAAEpC;IAAQ,CAAC;IAAA,OACjEtG,QAAQ,CAAC0I,OAAO,EAAEK,CAAC,IAAK,OAAMzC,OAAO,CAACyC,CAAC,CAAE,EAAC,CAAC;EAAA;EAC5C,4CAA4C,EAAE,CAACL,OAAO;IAAA,IAAE;MAAEpC;IAAQ,CAAC;IAAA,OAClEtG,QAAQ,CAAC0I,OAAO,EAAEK,CAAC,IAAK,OAAMzC,OAAO,CAACyC,CAAC,CAAE,EAAC,CAAC;EAAA;EAC5C,+CAA+C,EAAE,CAACL,OAAO;IAAA,IAAE;MAAEpC;IAAQ,CAAC;IAAA,OACrEtG,QAAQ,CAAC0I,OAAO,EAAEK,CAAC,IAAK,QAAOzC,OAAO,CAACyC,CAAC,CAAE,EAAC,CAAC;EAAA;EAC7C,yCAAyC,EAAE,CAACL,OAAO;IAAA,IAAE;MAAEpC;IAAQ,CAAC;IAAA,OAC/DtG,QAAQ,CAAC0I,OAAO,EAAEK,CAAC,IAAK,OAAMzC,OAAO,CAACyC,CAAC,CAAE,EAAC,CAAC;EAAA;EAC5C,0CAA0C,EAAE,CAACL,OAAO;IAAA,IAAE;MAAExC;IAAK,CAAC;IAAA,OAC7DlG,QAAQ,CAAC0I,OAAO,EAAEK,CAAC,IAAK,OAAM7C,IAAI,CAAC6C,CAAC,CAAE,EAAC,CAAC;EAAA;EACzC,mDAAmD,EAAE,CAACL,OAAO;IAAA,IAAE;MAAExC;IAAK,CAAC;IAAA,OACtElG,QAAQ,CAAC0I,OAAO,EAAEK,CAAC,IAAK,OAAM7C,IAAI,CAAC6C,CAAC,CAAE,EAAC,CAAC;EAAA;EACzC,kCAAkC,EAAE,MAAM,aAAa;EACvD,oDAAoD,EAAE,MAAM,EAAE;EAC9D,sBAAsB,EAAEC,KAAK,IAC5BA,KAAK,GAAGhJ,QAAQ,CAACgJ,KAAK,EAAED,CAAC,IAAK,KAAIA,CAAE,EAAC,CAAC,GAAG3G,SAAS;EAEnD,4BAA4B,EAAE6G,UAAU,IAAIA,UAAU;EAEtDC,YAAY,EAAEA,YAAY,IACzBA,YAAY,CAACrF,OAAO,CAAC5E,MAAM,KAAK,CAAC,GAAG,EAAE,GAAGmD,SAAS;EACnD,oBAAoB,EAAE,CAAC+G,IAAI;IAAA,IAAE;MAAEpI;IAAI,CAAC;IAAA,OAAMoI,IAAI,GAAGpI,GAAG,CAAC,OAAO,CAAC,GAAGqB,SAAS;EAAA,CAAC;EAC1E,mBAAmB,EAAE,CAACtC,IAAI;IAAA,IAAE;MAAEe;IAAK,CAAC;IAAA,OAAKA,IAAI,CAAE,YAAWf,IAAK,EAAC,CAAC;EAAA;EACjE,yBAAyB,EAAE,MAAM,IAAI;EACrC,8BAA8B,EAAEsJ,eAAe,IAC9CA,eAAe,GAAG,CAAC,GAAI,KAAIA,eAAgB,eAAc,GAAGhH,SAAS;EAEtE,2BAA2B,EAAE8E,GAAG,IAAIA;AACrC,CAAC;;AAED;AACA,MAAMmC,UAAU,GAAG;EAClB,sBAAsB,EAAE,OAAO;EAC/B,uBAAuB,EAAE,QAAQ;EACjC,sBAAsB,EAAE,OAAO;EAC/B,2BAA2B,EAAE,YAAY;EACzC,gCAAgC,EAAE,YAAY;EAC9C,sBAAsB,EAAE,OAAO;EAC/B,wBAAwB,EAAE,OAAO;EACjC,uBAAuB,EAAE,cAAc;EACvC,wBAAwB,EAAE,aAAa;EACvC,iBAAiB,EAAE,OAAO;EAC1B,kBAAkB,EAAE,OAAO;EAC3B,gBAAgB,EAAE,YAAY;EAC9B,yBAAyB,EAAE,YAAY;EACvC,oBAAoB,EAAE,gBAAgB;EACtC,sBAAsB,EAAE,kBAAkB;EAC1C,6BAA6B,EAAE,gBAAgB;EAC/C,+BAA+B,EAAE,kBAAkB;EACnD,qBAAqB,EAAE,iBAAiB;EACxC,8BAA8B,EAAE,iBAAiB;EACjD,0BAA0B,EAAE,iBAAiB;EAC7C,mCAAmC,EAAE,iBAAiB;EACtD,uBAAuB,EAAE,sBAAsB;EAC/C,iCAAiC,EAAE,iBAAiB;EACpD,kBAAkB,EAAE,QAAQ;EAC5B,mBAAmB,EAAE,QAAQ;EAC7B,kBAAkB,EAAE,cAAc;EAClC,yBAAyB,EAAE,cAAc;EACzC,qBAAqB,EAAE,cAAc;EACrC,iBAAiB,EAAE,aAAa;EAChC,iBAAiB,EAAE,QAAQ;EAC3B,wBAAwB,EAAEC,QAAQ,IAChC,gBAAeA,QAAQ,CAAC1I,IAAK,gBAAe;EAC9C,yBAAyB,EAAE0I,QAAQ,IACjC,gBAAeA,QAAQ,CAAC1I,IAAK,gBAAe;EAC9C,qBAAqB,EAAE,iBAAiB;EACxC,gCAAgC,EAAE;AACnC,CAAC;AAED,MAAM2I,qBAAqB,GAAG,CAC7B,cAAc,EACd,SAAS,EACT,YAAY,EACZ,cAAc,EACd,MAAM,EACN,YAAY,EACZ,YAAY,EACZ,KAAK,EACL,YAAY,EACZ,SAAS,EACT,YAAY,EACZ,SAAS,EACT,YAAY,EACZ,OAAO,EACP,YAAY,EACZ,SAAS,EACT,YAAY,EACZ,aAAa,CACb;;AAED;AACA,MAAMC,gBAAgB,GAAG;EACxBrI,WAAW,EAAE,CACZ,MAAM,EACN,MAAM,EACN,SAAS,EACT,MAAM,EACN,SAAS,EACT,KAAK,EACL,YAAY,EACZ,QAAQ,EACR,gBAAgB,EAChB,aAAa,EACb,kBAAkB,EAClB,QAAQ,EACR,SAAS,EACT,iBAAiB,EACjB,UAAU,EACV,SAAS,EACT,UAAU,EACV,qBAAqB,EACrB,6BAA6B,EAC7B,QAAQ,EACR,mBAAmB,EACnB,2BAA2B,EAC3B,UAAU,EACV,oBAAoB,CACpB;EACDkD,KAAK,EAAE,CACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,QAAQ,EACR,iBAAiB,EACjB,SAAS,EACT,iBAAiB,EACjB,QAAQ,EACR,MAAM,EACN,iBAAiB,EACjB,YAAY,EACZ,qBAAqB,EACrB,cAAc,EACd,uBAAuB,EACvB,SAAS,EACT,iBAAiB,EACjB,UAAU,EACV,kBAAkB,CAClB;EACD,YAAY,EAAE,CACb,WAAW,EACX,gBAAgB,EAChB,kBAAkB,EAClB,aAAa,EACb,sBAAsB,CACtB;EACDiD,UAAU,EAAE,CACX,OAAO,EACP,MAAM,EACN,iBAAiB,EACjB,YAAY,EACZ,qBAAqB,EACrB,KAAK,EACL,QAAQ,EACR,gBAAgB,EAChB,iBAAiB,EACjB,yBAAyB,EACzB,YAAY,EACZ,UAAU,CACV;EACDmC,eAAe,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EACjCC,oBAAoB,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC;EAC1CC,eAAe,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC;EAC7ClD,MAAM,EAAE,CACP,MAAM,EACN,MAAM,EACN,YAAY,EACZ,IAAI,EACJ,OAAO,EACP,OAAO,EACP,QAAQ,EACR,OAAO,EACP,WAAW,EACX,QAAQ,EACR,SAAS,EACT,UAAU,EACV,WAAW,EACX,OAAO,EACP,eAAe,EACf,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,UAAU,EACV,kBAAkB,EAClB,iBAAiB,EACjB,aAAa,EACb,qBAAqB,EACrB,SAAS,EACT,iBAAiB,EACjB,YAAY,EACZ,SAAS,EACT,SAAS,EACT,iBAAiB,CACjB;EACDY,YAAY,EAAE,CACb,QAAQ,EACR,MAAM,EACN,aAAa,EACb,UAAU,EACV,QAAQ,EACR,gBAAgB,EAChB,KAAK,EACL,aAAa,EACb,UAAU,EACV,kBAAkB,CAClB;EACD,gBAAgB,EAAE,CACjB,OAAO,EACP,YAAY,EACZ,WAAW,EACX,WAAW,EACX,aAAa,EACb,UAAU,EACV,SAAS,EACT,qBAAqB,EACrB,uBAAuB,CACvB;EACDY,KAAK,EAAE,CACN,IAAI,EACJ,SAAS,EACT,OAAO,EACP,OAAO,EACP,SAAS,EACT,OAAO,EACP,SAAS,EACT,UAAU,EACV,UAAU,EACV,iBAAiB,EACjB,OAAO,EACP,SAAS,EACT,UAAU,EACV,UAAU,EACV,QAAQ,EACR,YAAY,EACZ,SAAS,EACT,YAAY,EACZ,SAAS,EACT,YAAY,EACZ,iBAAiB,CACjB;EACD2B,WAAW,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,KAAK,CAAC;EACzDC,KAAK,EAAEN,qBAAqB;EAC5BO,OAAO,EAAEP,qBAAqB;EAC9B,yBAAyB,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC;EAC/CL,YAAY,EAAE,CACb,OAAO,EACP,MAAM,EACN,YAAY,EACZ,SAAS,EACT,YAAY,EACZ,iBAAiB,CACjB;EACDa,YAAY,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,UAAU;AAC9C,CAAC;AAED,MAAMC,gBAAgB,GAAGC,KAAK,IAAIA,KAAK,CAAC9G,MAAM,CAAC+G,OAAO,CAAC,CAAC9K,IAAI,CAAC,GAAG,CAAC;AACjE,MAAM+K,wBAAwB,GAAGF,KAAK,IACrCA,KAAK,CAAChL,MAAM,GAAG,CAAC,GAAI,IAAGgL,KAAK,CAAC9G,MAAM,CAAC+G,OAAO,CAAC,CAAC9K,IAAI,CAAC,GAAG,CAAE,GAAE,GAAGgD,SAAS;AACtE,MAAMgI,oBAAoB,GAAGH,KAAK,IAAIA,KAAK,CAAC9G,MAAM,CAAC+G,OAAO,CAAC,CAAC9K,IAAI,CAAC,MAAM,CAAC;AACxE,MAAMiL,cAAc,GAAGJ,KAAK,IAAIA,KAAK,CAAC9G,MAAM,CAAC+G,OAAO,CAAC,CAAC9K,IAAI,CAAC,IAAI,CAAC;AAChE,MAAMkL,sBAAsB,GAAGL,KAAK,IACnCA,KAAK,CAAChL,MAAM,GAAG,CAAC,GAAI,IAAGgL,KAAK,CAAC9G,MAAM,CAAC+G,OAAO,CAAC,CAAC9K,IAAI,CAAC,IAAI,CAAE,GAAE,GAAGgD,SAAS;AACvE,MAAMmI,8BAA8B,GAAGzK,IAAI,IAAImK,KAAK,IACnDA,KAAK,CAAChL,MAAM,GAAG,CAAC,GACZ,IAAGa,IAAK,KAAImK,KAAK,CAAC9G,MAAM,CAAC+G,OAAO,CAAC,CAAC9K,IAAI,CAAC,IAAI,CAAE,GAAE,GAChDgD,SAAS;;AAEb;AACA,MAAMoI,mBAAmB,GAAG;EAC3B,eAAe,EAAER,gBAAgB;EACjC,gBAAgB,EAAEA,gBAAgB;EAClC,gBAAgB,EAAEA,gBAAgB;EAClC,aAAa,EAAEM,sBAAsB;EACrC,eAAe,EAAEC,8BAA8B,CAAC,SAAS,CAAC;EAC1D,eAAe,EAAEA,8BAA8B,CAAC,SAAS,CAAC;EAC1D,aAAa,EAAEF,cAAc;EAC7B,uBAAuB,EAAEL,gBAAgB;EACzC,kCAAkC,EAAEA,gBAAgB;EACpD,mBAAmB,EAAEA,gBAAgB;EACrC,4BAA4B,EAAEG,wBAAwB;EACtD,+BAA+B,EAAEE,cAAc;EAC/C,wBAAwB,EAAEL,gBAAgB;EAC1C,iCAAiC,EAAEG,wBAAwB;EAC3D,cAAc,EAAEE,cAAc;EAC9B,uBAAuB,EAAEC,sBAAsB;EAC/C,kBAAkB,EAAEC,8BAA8B,CAAC,MAAM,CAAC;EAC1D,2BAA2B,EAAEA,8BAA8B,CAAC,gBAAgB,CAAC;EAC7E,oBAAoB,EAAEA,8BAA8B,CAAC,SAAS,CAAC;EAC/D,6BAA6B,EAC5BA,8BAA8B,CAAC,mBAAmB,CAAC;EACpD,eAAe,EAAEP,gBAAgB;EACjC,mBAAmB,EAAEC,KAAK,IACzBA,KAAK,CACH9G,MAAM,CAAC+G,OAAO,CAAC,CACfhL,GAAG,CAACuL,IAAI,IAAK,GAAEA,IAAK,KAAI,CAAC,CACzBrL,IAAI,CAAC,GAAG,CAAC;EACZ,oBAAoB,EAAEgL,oBAAoB;EAC1C,sBAAsB,EAAEA,oBAAoB;EAC5C,qBAAqB,EAAEA,oBAAoB;EAC3C,sBAAsB,EAAEH,KAAK,IAAIS,MAAM,CAACN,oBAAoB,CAACH,KAAK,CAAC,EAAE,IAAI,CAAC;EAC1E,8BAA8B,EAAED,gBAAgB;EAChD,uBAAuB,EAAEC,KAAK,IAC7BS,MAAM,CAACT,KAAK,CAAC9G,MAAM,CAAC+G,OAAO,CAAC,CAAC9K,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK;AACtD,CAAC;AAED,MAAMuL,WAAW,GAAGV,KAAK,IACxBA,KAAK,CACH/K,GAAG,CAACuL,IAAI,IAAIA,IAAI,CAACG,OAAO,CAAC,CACzBzH,MAAM,CAAC+G,OAAO,CAAC,CACf9K,IAAI,CAAC,GAAG,CAAC;AAEZ,MAAMyL,cAAc,GAAGZ,KAAK,IAAI;EAC/B,MAAMa,GAAG,GAAG,EAAE;EACd,IAAIC,IAAI,GAAG,CAAC;EACZ,KAAK,MAAMN,IAAI,IAAIR,KAAK,EAAE;IACzB,IAAIQ,IAAI,CAACO,OAAO,KAAK,YAAY,EAAE;MAClC,QAAQD,IAAI;QACX,KAAK,CAAC;QACN,KAAK,CAAC;UACLA,IAAI,IAAI,CAAC;UACT;QACD,KAAK,CAAC;UACLD,GAAG,CAACG,IAAI,CAAC,GAAG,CAAC;UACbF,IAAI,GAAG,CAAC;UACR;MAAM;IAET;IACA,IAAI,CAACN,IAAI,CAACG,OAAO,EAAE;IACnB,QAAQG,IAAI;MACX,KAAK,CAAC;QACLA,IAAI,GAAG,CAAC;QACR;MACD,KAAK,CAAC;QACLD,GAAG,CAACG,IAAI,CAAC,GAAG,CAAC;QACb;MACD,KAAK,CAAC;QACLH,GAAG,CAACG,IAAI,CAAC,GAAG,CAAC;QACbF,IAAI,GAAG,CAAC;QACR;MACD,KAAK,CAAC;QACLD,GAAG,CAACG,IAAI,CAAC,IAAI,CAAC;QACdF,IAAI,GAAG,CAAC;QACR;MACD,KAAK,CAAC;QACLD,GAAG,CAACG,IAAI,CAAC,IAAI,CAAC;QACd;IAAM;IAERH,GAAG,CAACG,IAAI,CAACR,IAAI,CAACG,OAAO,CAAC;EACvB;EACA,IAAIG,IAAI,KAAK,CAAC,EAAED,GAAG,CAACG,IAAI,CAAC,GAAG,CAAC;EAC7B,OAAOH,GAAG,CAAC1L,IAAI,CAAC,EAAE,CAAC;AACpB,CAAC;AAED,MAAMsL,MAAM,GAAG,CAACzK,GAAG,EAAEF,MAAM,EAAEmL,mBAAmB,KAAK;EACpD,MAAMC,GAAG,GAAGlL,GAAG,CAACwI,OAAO,CAAC,YAAY,EAAE,IAAI,GAAG1I,MAAM,GAAG,IAAI,CAAC;EAC3D,IAAImL,mBAAmB,EAAE,OAAOC,GAAG;EACnC,MAAMC,GAAG,GAAGnL,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE,GAAGF,MAAM;EACzC,OAAOqL,GAAG,GAAGD,GAAG;AACjB,CAAC;AAED,MAAME,mBAAmB,GAAG,CAACpB,KAAK,EAAEqB,QAAQ,KAAK;EAChD,IAAIC,WAAW,GAAG,IAAI;EACtB,IAAIC,KAAK,GAAG,IAAI;EAChB,OAAOvB,KAAK,CACV/K,GAAG,CAACuL,IAAI,IAAI;IACZ,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACG,OAAO,EAAE;IAC5B,IAAIA,OAAO,GAAGF,MAAM,CAACD,IAAI,CAACG,OAAO,EAAEY,KAAK,GAAG,EAAE,GAAGF,QAAQ,EAAE,CAACC,WAAW,CAAC;IACvE,IAAIA,WAAW,EAAE;MAChBX,OAAO,GAAGA,OAAO,CAACnC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;IACtC;IACA,IAAI,CAACmC,OAAO,EAAE;IACdY,KAAK,GAAG,KAAK;IACb,MAAMC,QAAQ,GAAGF,WAAW,IAAIX,OAAO,CAACc,UAAU,CAAC,IAAI,CAAC;IACxDH,WAAW,GAAGX,OAAO,CAACe,QAAQ,CAAC,IAAI,CAAC;IACpC,OAAOF,QAAQ,GAAGb,OAAO,GAAG,GAAG,GAAGA,OAAO;EAC1C,CAAC,CAAC,CACDzH,MAAM,CAAC+G,OAAO,CAAC,CACf9K,IAAI,CAAC,EAAE,CAAC,CACRwM,IAAI,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GACdhC,KAAK,IACL,CAACI,KAAK;EAAA,IAAE;IAAElJ,GAAG;IAAEC;EAAO,CAAC;EAAA,OACrB,GAAE6I,KAAK,GAAG9I,GAAG,CAAC,OAAO,CAAC,GAAGC,MAAM,CAAC,SAAS,CAAE,OAAMqK,mBAAmB,CACpEpB,KAAK,EACL,EAAE,CACD,EAAC;AAAA;;AAEL;AACA,MAAM6B,sBAAsB,GAAG;EAC9B3K,WAAW,EAAE8I,KAAK,IAAI;IACrB,MAAM8B,MAAM,GAAG,EAAE;IACjB,IAAIC,YAAY,GAAG,KAAK;IACxB,KAAK,MAAMvB,IAAI,IAAIR,KAAK,EAAE;MACzB,IAAI,CAACQ,IAAI,CAACG,OAAO,EAAE;MACnB,MAAMqB,aAAa,GAClBxB,IAAI,CAACO,OAAO,KAAK,UAAU,IAC3BP,IAAI,CAACO,OAAO,KAAK,6BAA6B,IAC9CP,IAAI,CAACO,OAAO,KAAK,QAAQ,IACzBP,IAAI,CAACO,OAAO,KAAK,2BAA2B,IAC5CP,IAAI,CAACO,OAAO,KAAK,SAAS;MAC3B,IAAIe,MAAM,CAAC9M,MAAM,KAAK,CAAC,EAAE;QACxB8M,MAAM,CAACd,IAAI,CAACgB,aAAa,IAAID,YAAY,GAAG,MAAM,GAAG,IAAI,CAAC;MAC3D;MACAD,MAAM,CAACd,IAAI,CAACR,IAAI,CAACG,OAAO,CAAC;MACzBoB,YAAY,GAAGC,aAAa;IAC7B;IACA,IAAID,YAAY,EAAED,MAAM,CAACd,IAAI,CAAC,IAAI,CAAC;IACnC,OAAOc,MAAM,CAAC3M,IAAI,CAAC,EAAE,CAAC;EACvB,CAAC;EACDiF,KAAK,EAAE4F,KAAK,IACXoB,mBAAmB,CAClBpB,KAAK,CAAC/K,GAAG,CAACuL,IAAI,IAAI;IACjB,IACC,CAACA,IAAI,CAACO,OAAO,KAAK,SAAS,IAAIP,IAAI,CAACO,OAAO,KAAK,UAAU,KAC1DP,IAAI,CAACG,OAAO,EACX;MACD,OAAO;QACN,GAAGH,IAAI;QACPG,OAAO,EAAG,KAAIH,IAAI,CAACG,OAAQ;MAC5B,CAAC;IACF;IACA,OAAOH,IAAI;EACZ,CAAC,CAAC,EACF,IAAI,CACJ;EACF,YAAY,EAAEE,WAAW;EACzBlE,MAAM,EAAE,CAACwD,KAAK,cAAiB;IAAA,IAAf;MAAExD;IAAO,CAAC;IACzB,IAAIyF,OAAO,GAAG,KAAK;IACnB,OAAOb,mBAAmB,CACzBpB,KAAK,CAAC/K,GAAG,CAACuL,IAAI,IAAI;MACjB,QAAQA,IAAI,CAACO,OAAO;QACnB,KAAK,IAAI;UACR,IAAIvE,MAAM,CAACnG,EAAE,KAAKmG,MAAM,CAAC3G,IAAI,EAAE;YAC9B,IAAIoM,OAAO,EAAE,OAAO,KAAK;YACzB,IAAIzB,IAAI,CAACG,OAAO,EAAEsB,OAAO,GAAG,IAAI;UACjC;UACA;QACD,KAAK,MAAM;UACV,IAAIA,OAAO,EAAE,OAAO,KAAK;UACzB,IAAIzB,IAAI,CAACG,OAAO,EAAEsB,OAAO,GAAG,IAAI;UAChC;QACD,KAAK,iBAAiB;QACtB,KAAK,aAAa;QAClB,KAAK,qBAAqB;QAC1B,KAAK,SAAS;QACd,KAAK,YAAY;QACjB,KAAK,SAAS;QACd,KAAK,UAAU;QACf,KAAK,SAAS;UACb,IAAIzB,IAAI,CAACG,OAAO,EAAE;YACjB,OAAO;cACN,GAAGH,IAAI;cACPG,OAAO,EAAG,KAAIH,IAAI,CAACG,OAAQ;YAC5B,CAAC;UACF;UACA;MAAM;MAER,OAAOH,IAAI;IACZ,CAAC,CAAC,EACF,IAAI,CACJ;EACF,CAAC;EACDxC,KAAK,EAAEgC,KAAK,IAAI;IACf,IAAIkC,QAAQ,GAAG,KAAK;IACpB,OACC,QAAQ,GACRd,mBAAmB,CAClBpB,KAAK,CAAC9G,MAAM,CAACsH,IAAI,IAAI;MACpB,QAAQA,IAAI,CAACO,OAAO;QACnB,KAAK,OAAO;UACX,IAAIP,IAAI,CAACG,OAAO,EAAEuB,QAAQ,GAAG,IAAI;UACjC;QACD,KAAK,SAAS;UACb,IAAIA,QAAQ,EAAE,OAAO,KAAK;UAC1B;MAAM;MAER,OAAO,IAAI;IACZ,CAAC,CAAC,EACF,IAAI,CACJ;EAEH,CAAC;EACD,yBAAyB,EAAElC,KAAK,IAAK,IAAGU,WAAW,CAACV,KAAK,CAAE,GAAE;EAC7D3C,UAAU,EAAE2C,KAAK,IAAIoB,mBAAmB,CAACpB,KAAK,EAAE,IAAI,CAAC;EACrDR,eAAe,EAAEkB,WAAW;EAC5BjB,oBAAoB,EAAEiB,WAAW;EACjChB,eAAe,EAAEgB,WAAW;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAtD,YAAY,EAAE,CAAC4C,KAAK,cAAuB;IAAA,IAArB;MAAE5C;IAAa,CAAC;IACrC,IAAI6E,OAAO,GAAG,KAAK;IACnB,OAAOb,mBAAmB,CACzBpB,KAAK,CAAC/K,GAAG,CAACuL,IAAI,IAAI;MACjB,QAAQA,IAAI,CAACO,OAAO;QACnB,KAAK,UAAU;UACd,IAAI3D,YAAY,CAACJ,QAAQ,KAAKI,YAAY,CAACZ,MAAM,IAAIgE,IAAI,CAACG,OAAO,EAChEsB,OAAO,GAAG,IAAI;UACf;QACD,KAAK,QAAQ;UACZ,IAAIA,OAAO,EAAE,OAAO,KAAK;UACzB;QACD,KAAK,gBAAgB;UACpB,IAAI7E,YAAY,CAACZ,MAAM,KAAKY,YAAY,CAAC+E,cAAc,EACtD,OAAO,KAAK;UACb;QACD,KAAK,UAAU;UACd,IAAI3B,IAAI,CAACG,OAAO,EAAE;YACjB,OAAO;cACN,GAAGH,IAAI;cACPG,OAAO,EAAG,KAAIH,IAAI,CAACG,OAAQ;YAC5B,CAAC;UACF;UACA;MAAM;MAER,OAAOH,IAAI;IACZ,CAAC,CAAC,EACF,IAAI,CACJ;EACF,CAAC;EACD,gBAAgB,EAAEI,cAAc;EAChCwB,YAAY,EAAE1B,WAAW;EACzBf,WAAW,EAAEK,KAAK,IAAI,IAAI,GAAGU,WAAW,CAACV,KAAK,CAAC;EAC/C,gBAAgB,EAAE4B,SAAS,CAAC,IAAI,CAAC;EACjC,kBAAkB,EAAEA,SAAS,CAAC,KAAK,CAAC;EACpC3C,YAAY,EAAEe,KAAK,IAAIoB,mBAAmB,CAACpB,KAAK,EAAE,EAAE,CAAC,CAACqC,OAAO,EAAE;EAC/DC,eAAe,EAAEtC,KAAK,IAAI,KAAK,GAAGU,WAAW,CAACV,KAAK,CAAC;EACpDuC,qBAAqB,EAAE7B;AACxB,CAAC;AAED,MAAM8B,gBAAgB,GAAG;EACxB5L,IAAI,EAAE,WAAW;EACjBG,MAAM,EAAE,qBAAqB;EAC7BD,GAAG,EAAE,qBAAqB;EAC1BD,KAAK,EAAE,qBAAqB;EAC5BoF,IAAI,EAAE,qBAAqB;EAC3BI,OAAO,EAAE;AACV,CAAC;AAED,MAAMoG,iBAAiB,GAAG;EACzBrH,aAAa,EAAE,CAAC/E,EAAE,WAAcqM,SAAS,KAAK;IAAA,IAA1B;MAAE3L;IAAO,CAAC;IAC7B,QAAQ2L,SAAS;MAChB,KAAK,QAAQ;QACZ,OAAQ,KAAI3L,MAAM,CAACV,EAAE,CAAE,IAAG;MAC3B,KAAK,SAAS;QACb,OAAQ,KAAIU,MAAM,CAACV,EAAE,CAAE,IAAG;MAC3B,KAAK,OAAO;QACX,OAAQ,KAAIU,MAAM,CAACV,EAAE,CAAE,IAAG;MAC3B;QACC,OAAQ,IAAGU,MAAM,CAACV,EAAE,CAAE,GAAE;IAAC;EAE5B,CAAC;EACDkF,cAAc,EAAElF,EAAE,IAAK,IAAGA,EAAG,GAAE;EAC/B8D,cAAc,EAAE,CAACwI,QAAQ,WAAqBC,QAAQ;IAAA,IAA3B;MAAE/L,KAAK;MAAEE;IAAO,CAAC;IAAA,OAC3C,CAAC6L,QAAQ,GAAG7L,MAAM,GAAGF,KAAK,EAAE8L,QAAQ,CAAC;EAAA;EACtCnI,UAAU,EAAE0E,IAAI,IAAK,IAAGA,IAAK,GAAE;EAC/BxD,WAAW,EAAED,KAAK,IAAK,OAAMA,KAAM,GAAE;EACrC5G,UAAU,EAAEgO,OAAO,CAAC,sBAAsB,CAAC,CAAChO,UAAU;EACtDmC,cAAc,EAAE,CAAC8L,QAAQ,cAAe;IAAA,IAAb;MAAElM;IAAK,CAAC;IAClC,MAAMmM,CAAC,GAAG,IAAIC,IAAI,CAACF,QAAQ,CAAC;IAC5B,MAAMhE,CAAC,GAAG3I,QAAQ;IAClB,MAAM8M,IAAI,GAAI,GAAEF,CAAC,CAACG,WAAW,EAAG,IAAGpE,CAAC,CAACiE,CAAC,CAACI,QAAQ,EAAE,GAAG,CAAC,CAAE,IAAGrE,CAAC,CAACiE,CAAC,CAACK,OAAO,EAAE,CAAE,EAAC;IAC1E,MAAM/L,IAAI,GAAI,GAAEyH,CAAC,CAACiE,CAAC,CAACM,QAAQ,EAAE,CAAE,IAAGvE,CAAC,CAACiE,CAAC,CAACO,UAAU,EAAE,CAAE,IAAGxE,CAAC,CAACiE,CAAC,CAACQ,UAAU,EAAE,CAAE,EAAC;IAC3E,OAAQ,GAAEN,IAAK,IAAGrM,IAAI,CAACS,IAAI,CAAE,EAAC;EAC/B,CAAC;EACDJ,UAAU,EAAE,CACXI,IAAI,WAEJmM,YAAY,KACR;IAAA,IAFJ;MAAEC,aAAa;MAAE7M,IAAI;MAAEC,KAAK;MAAEE,MAAM;MAAED;IAAI,CAAC;IAG3C,MAAM4M,IAAI,GAAG,KAAK;IAClB,IAAID,aAAa,IAAIpM,IAAI,KAAKoM,aAAa,EAAE;MAC5C,MAAME,KAAK,GAAG,CACbF,aAAa,GAAG,CAAC,EACjBA,aAAa,GAAG,CAAC,EACjBA,aAAa,GAAG,CAAC,EACjBA,aAAa,GAAG,EAAE,CAClB;MACD,IAAIpM,IAAI,GAAGsM,KAAK,CAAC,CAAC,CAAC,EAAE,OAAQ,GAAEtM,IAAK,GAAEqM,IAAK,EAAC,CAAC,KACxC,IAAIrM,IAAI,GAAGsM,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO/M,IAAI,CAAE,GAAES,IAAK,GAAEqM,IAAK,EAAC,CAAC,CAAC,KACnD,IAAIrM,IAAI,GAAGsM,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO9M,KAAK,CAAE,GAAEQ,IAAK,GAAEqM,IAAK,EAAC,CAAC,CAAC,KACpD,IAAIrM,IAAI,GAAGsM,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO5M,MAAM,CAAE,GAAEM,IAAK,GAAEqM,IAAK,EAAC,CAAC,CAAC,KACrD,OAAO5M,GAAG,CAAE,GAAEO,IAAK,GAAEqM,IAAK,EAAC,CAAC;IAClC,CAAC,MAAM;MACN,OAAQ,GAAEF,YAAY,GAAG5M,IAAI,CAACS,IAAI,CAAC,GAAGA,IAAK,GAAEqM,IAAK,EAAC;IACpD;EACD,CAAC;EACDhF,WAAW,EAAE,CAACD,OAAO,cAA6B;IAAA,IAA3B;MAAE5H,KAAK;MAAEE,MAAM;MAAED;IAAI,CAAC;IAC5C,IAAI2H,OAAO,CAACF,QAAQ,CAAC,SAAS,CAAC,EAAE,OAAOE,OAAO;IAC/C,MAAMmF,UAAU,GAAG,CAClB;MAAEC,MAAM,EAAE,oBAAoB;MAAEC,MAAM,EAAEjN;IAAM,CAAC,EAC/C;MACCgN,MAAM,EAAE,uDAAuD;MAC/DC,MAAM,EAAEjN;IACT,CAAC,EACD;MAAEgN,MAAM,EAAE,8BAA8B;MAAEC,MAAM,EAAEhN;IAAI,CAAC,EACvD;MAAE+M,MAAM,EAAE,6BAA6B;MAAEC,MAAM,EAAEjN;IAAM,CAAC,EACxD;MAAEgN,MAAM,EAAE,6BAA6B;MAAEC,MAAM,EAAEhN;IAAI,CAAC,EACtD;MAAE+M,MAAM,EAAE,kCAAkC;MAAEC,MAAM,EAAEhN;IAAI,CAAC,EAC3D;MACC+M,MAAM,EAAE,kDAAkD;MAC1DC,MAAM,EAAE/M;IACT,CAAC,EACD;MAAE8M,MAAM,EAAE,sBAAsB;MAAEC,MAAM,EAAE/M;IAAO,CAAC,EAClD;MAAE8M,MAAM,EAAE,iCAAiC;MAAEC,MAAM,EAAE/M;IAAO,CAAC,EAC7D;MACC8M,MAAM,EAAE,yBAAyB;MACjCC,MAAM,EAAEhN;IACT,CAAC,EACD;MACC+M,MAAM,EACL,wKAAwK;MACzKC,MAAM,EAAEhN;IACT,CAAC,CACD;IACD,KAAK,MAAM;MAAE+M,MAAM;MAAEC;IAAO,CAAC,IAAIF,UAAU,EAAE;MAC5CnF,OAAO,GAAGA,OAAO,CAACD,OAAO,CAACqF,MAAM,EAAE,CAACE,KAAK,EAAEpD,OAAO,KAAK;QACrD,OAAOoD,KAAK,CAACvF,OAAO,CAACmC,OAAO,EAAEmD,MAAM,CAACnD,OAAO,CAAC,CAAC;MAC/C,CAAC,CAAC;IACH;IACA,OAAOlC,OAAO;EACf;AACD,CAAC;AAED,MAAMuF,eAAe,GAAG;EACvB,gBAAgB,EAAElC,MAAM,IAAI;IAC3B,OAAOrB,MAAM,CAACqB,MAAM,EAAE,IAAI,CAAC;EAC5B;AACD,CAAC;AAED,MAAMmC,WAAW,GAAG,CAACC,KAAK,EAAEC,cAAc,KAAK;EAC9C,MAAMC,aAAa,GAAGF,KAAK,CAACzO,KAAK,EAAE;EACnC,MAAM4O,GAAG,GAAG,IAAIC,GAAG,CAACJ,KAAK,CAAC;EAC1B,MAAMK,OAAO,GAAG,IAAID,GAAG,EAAE;EACzBJ,KAAK,CAAClP,MAAM,GAAG,CAAC;EAChB,KAAK,MAAM+L,OAAO,IAAIoD,cAAc,EAAE;IACrC,IAAIpD,OAAO,CAACW,QAAQ,CAAC,GAAG,CAAC,IAAI2C,GAAG,CAACG,GAAG,CAACzD,OAAO,CAAC,EAAE;MAC9CmD,KAAK,CAAClD,IAAI,CAACD,OAAO,CAAC;MACnBwD,OAAO,CAACE,GAAG,CAAC1D,OAAO,CAAC;IACrB;EACD;EACA,KAAK,MAAMA,OAAO,IAAIqD,aAAa,EAAE;IACpC,IAAI,CAACG,OAAO,CAACC,GAAG,CAACzD,OAAO,CAAC,EAAE;MAC1BmD,KAAK,CAAClD,IAAI,CAACD,OAAO,CAAC;IACpB;EACD;EACA,OAAOmD,KAAK;AACb,CAAC;AAED,MAAMQ,yBAAyB,CAAC;EAC/B;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAAC3N,WAAW,CAAC4N,GAAG,CAAC,2BAA2B,EAAE5N,WAAW,IAAI;MAC1EA,WAAW,CAAC2N,KAAK,CAACE,YAAY,CAACD,GAAG,CACjC,2BAA2B,EAC3B,CAACE,KAAK,EAAEC,OAAO,EAAExM,OAAO,KAAK;QAC5B;QACAuM,KAAK,CAACH,KAAK,CAAChM,KAAK,CACfqM,GAAG,CAAC,aAAa,CAAC,CAClBJ,GAAG,CAAC,2BAA2B,EAAE,CAAC5N,WAAW,EAAEuB,OAAO,KAAK;UAC3D,KAAK,MAAM0M,KAAK,IAAIpQ,MAAM,CAACD,IAAI,CAAC0N,gBAAgB,CAAC,EAAE;YAClD,IAAI4C,KAAK;YACT,IAAIH,OAAO,CAACI,MAAM,EAAE;cACnB,IACC,OAAOJ,OAAO,CAACI,MAAM,KAAK,QAAQ,IAClC,OAAOJ,OAAO,CAACI,MAAM,CAACF,KAAK,CAAC,KAAK,QAAQ,EACxC;gBACDC,KAAK,GAAGH,OAAO,CAACI,MAAM,CAACF,KAAK,CAAC;cAC9B,CAAC,MAAM;gBACNC,KAAK,GAAG5C,gBAAgB,CAAC2C,KAAK,CAAC;cAChC;YACD;YACA,IAAIC,KAAK,EAAE;cACV3M,OAAO,CAAC0M,KAAK,CAAC,GAAGnP,GAAG,IAClB,GAAEoP,KAAM,GACR,OAAOpP,GAAG,KAAK,QAAQ,GACpBA,GAAG,CAACwI,OAAO,CACX,0CAA0C,EACzC,KAAI4G,KAAM,EAAC,CACX,GACDpP,GACH,sBAAqB;YACxB,CAAC,MAAM;cACNyC,OAAO,CAAC0M,KAAK,CAAC,GAAGnP,GAAG,IAAIA,GAAG;YAC5B;UACD;UACA,KAAK,MAAM8N,MAAM,IAAI/O,MAAM,CAACD,IAAI,CAAC2N,iBAAiB,CAAC,EAAE;YACpDhK,OAAO,CAACqL,MAAM,CAAC,GAAG,UAACnD,OAAO;cAAA,kCAAK2E,IAAI;gBAAJA,IAAI;cAAA;cAAA,OAClC7C,iBAAiB,CAACqB,MAAM,CAAC,CAACnD,OAAO,EAAElI,OAAO,EAAE,GAAG6M,IAAI,CAAC;YAAA;UACtD;UACA7M,OAAO,CAACgL,aAAa,GAAGvM,WAAW,CAACG,IAAI;QACzC,CAAC,CAAC;QAEH,KAAK,MAAMnC,GAAG,IAAIH,MAAM,CAACD,IAAI,CAAC2B,eAAe,CAAC,EAAE;UAC/CuO,KAAK,CAACH,KAAK,CAAChM,KAAK,CACfqM,GAAG,CAAChQ,GAAG,CAAC,CACR4P,GAAG,CAAC,2BAA2B,EAAE,CAACS,GAAG,EAAEC,GAAG,KAC1C/O,eAAe,CAACvB,GAAG,CAAC,CAACqQ,GAAG,EAAEC,GAAG,EAAER,KAAK,CAAC,CACrC;QACH;QAEA,KAAK,MAAM9P,GAAG,IAAIH,MAAM,CAACD,IAAI,CAACyK,gBAAgB,CAAC,EAAE;UAChD,MAAM4E,cAAc,GAAG5E,gBAAgB,CAACrK,GAAG,CAAC;UAC5C8P,KAAK,CAACH,KAAK,CAACY,YAAY,CACtBP,GAAG,CAAChQ,GAAG,CAAC,CACR4P,GAAG,CAAC,2BAA2B,EAAE,CAACY,QAAQ,EAAEjN,OAAO,KAAK;YACxDwL,WAAW,CAACyB,QAAQ,EAAEvB,cAAc,CAAC;UACtC,CAAC,CAAC;QACJ;QAEA,KAAK,MAAMjP,GAAG,IAAIH,MAAM,CAACD,IAAI,CAACsK,UAAU,CAAC,EAAE;UAC1C,MAAMuG,QAAQ,GAAGvG,UAAU,CAAClK,GAAG,CAAC;UAChC8P,KAAK,CAACH,KAAK,CAACe,WAAW,CACrBV,GAAG,CAAChQ,GAAG,CAAC,CACR4P,GAAG,CACH,2BAA2B,EAC3B,OAAOa,QAAQ,KAAK,QAAQ,GAAG,MAAMA,QAAQ,GAAGA,QAAQ,CACxD;QACH;QAEA,KAAK,MAAMzQ,GAAG,IAAIH,MAAM,CAACD,IAAI,CAACyL,mBAAmB,CAAC,EAAE;UACnD,MAAMsF,MAAM,GAAGtF,mBAAmB,CAACrL,GAAG,CAAC;UACvC8P,KAAK,CAACH,KAAK,CAACiB,UAAU,CACpBZ,GAAG,CAAChQ,GAAG,CAAC,CACR4P,GAAG,CAAC,2BAA2B,EAAEe,MAAM,CAAC;QAC3C;QAEA,KAAK,MAAM3Q,GAAG,IAAIH,MAAM,CAACD,IAAI,CAAC+M,sBAAsB,CAAC,EAAE;UACtD,MAAMgE,MAAM,GAAGhE,sBAAsB,CAAC3M,GAAG,CAAC;UAC1C8P,KAAK,CAACH,KAAK,CAACkB,aAAa,CACvBb,GAAG,CAAChQ,GAAG,CAAC,CACR4P,GAAG,CAAC,2BAA2B,EAAEe,MAAM,CAAC;QAC3C;QAEA,KAAK,MAAM3Q,GAAG,IAAIH,MAAM,CAACD,IAAI,CAACkP,eAAe,CAAC,EAAE;UAC/C,MAAMgC,QAAQ,GAAGhC,eAAe,CAAC9O,GAAG,CAAC;UACrC8P,KAAK,CAACH,KAAK,CAAC/C,MAAM,CAChBoD,GAAG,CAAChQ,GAAG,CAAC,CACR4P,GAAG,CAAC,2BAA2B,EAAEkB,QAAQ,CAAC;QAC7C;MACD,CAAC,CACD;IACF,CAAC,CAAC;EACH;AACD;AACAxJ,MAAM,CAACyJ,OAAO,GAAGvB,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}