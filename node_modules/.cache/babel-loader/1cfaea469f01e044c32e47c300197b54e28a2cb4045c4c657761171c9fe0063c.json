{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst HelperRuntimeModule = require(\"./HelperRuntimeModule\");\nclass GetTrustedTypesPolicyRuntimeModule extends HelperRuntimeModule {\n  /**\n   * @param {Set<string>} runtimeRequirements runtime requirements\n   */\n  constructor(runtimeRequirements) {\n    super(\"trusted types policy\");\n    this.runtimeRequirements = runtimeRequirements;\n  }\n\n  /**\n   * @returns {string} runtime code\n   */\n  generate() {\n    const {\n      compilation\n    } = this;\n    const {\n      runtimeTemplate,\n      outputOptions\n    } = compilation;\n    const {\n      trustedTypes\n    } = outputOptions;\n    const fn = RuntimeGlobals.getTrustedTypesPolicy;\n    return Template.asString([\"var policy;\", `${fn} = ${runtimeTemplate.basicFunction(\"\", [\"// Create Trusted Type policy if Trusted Types are available and the policy doesn't exist yet.\", \"if (policy === undefined) {\", Template.indent([\"policy = {\", Template.indent([...(this.runtimeRequirements.has(RuntimeGlobals.createScript) ? [`createScript: ${runtimeTemplate.returningFunction(\"script\", \"script\")}`] : []), ...(this.runtimeRequirements.has(RuntimeGlobals.createScriptUrl) ? [`createScriptURL: ${runtimeTemplate.returningFunction(\"url\", \"url\")}`] : [])].join(\",\\n\")), \"};\", ...(trustedTypes ? ['if (typeof trustedTypes !== \"undefined\" && trustedTypes.createPolicy) {', Template.indent([`policy = trustedTypes.createPolicy(${JSON.stringify(trustedTypes.policyName)}, policy);`]), \"}\"] : [])]), \"}\", \"return policy;\"])};`]);\n  }\n}\nmodule.exports = GetTrustedTypesPolicyRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","Template","HelperRuntimeModule","GetTrustedTypesPolicyRuntimeModule","constructor","runtimeRequirements","generate","compilation","runtimeTemplate","outputOptions","trustedTypes","fn","getTrustedTypesPolicy","asString","basicFunction","indent","has","createScript","returningFunction","createScriptUrl","join","JSON","stringify","policyName","module","exports"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/webpack/lib/runtime/GetTrustedTypesPolicyRuntimeModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst HelperRuntimeModule = require(\"./HelperRuntimeModule\");\n\nclass GetTrustedTypesPolicyRuntimeModule extends HelperRuntimeModule {\n\t/**\n\t * @param {Set<string>} runtimeRequirements runtime requirements\n\t */\n\tconstructor(runtimeRequirements) {\n\t\tsuper(\"trusted types policy\");\n\t\tthis.runtimeRequirements = runtimeRequirements;\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { compilation } = this;\n\t\tconst { runtimeTemplate, outputOptions } = compilation;\n\t\tconst { trustedTypes } = outputOptions;\n\t\tconst fn = RuntimeGlobals.getTrustedTypesPolicy;\n\n\t\treturn Template.asString([\n\t\t\t\"var policy;\",\n\t\t\t`${fn} = ${runtimeTemplate.basicFunction(\"\", [\n\t\t\t\t\"// Create Trusted Type policy if Trusted Types are available and the policy doesn't exist yet.\",\n\t\t\t\t\"if (policy === undefined) {\",\n\t\t\t\tTemplate.indent([\n\t\t\t\t\t\"policy = {\",\n\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t...(this.runtimeRequirements.has(RuntimeGlobals.createScript)\n\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t`createScript: ${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\t\t\t\t\t\"script\",\n\t\t\t\t\t\t\t\t\t\t\t\"script\"\n\t\t\t\t\t\t\t\t\t\t)}`\n\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t: []),\n\t\t\t\t\t\t\t...(this.runtimeRequirements.has(RuntimeGlobals.createScriptUrl)\n\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t`createScriptURL: ${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\t\t\t\t\t\"url\",\n\t\t\t\t\t\t\t\t\t\t\t\"url\"\n\t\t\t\t\t\t\t\t\t\t)}`\n\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t: [])\n\t\t\t\t\t\t].join(\",\\n\")\n\t\t\t\t\t),\n\t\t\t\t\t\"};\",\n\t\t\t\t\t...(trustedTypes\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t'if (typeof trustedTypes !== \"undefined\" && trustedTypes.createPolicy) {',\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t`policy = trustedTypes.createPolicy(${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\ttrustedTypes.policyName\n\t\t\t\t\t\t\t\t\t)}, policy);`\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t  ]\n\t\t\t\t\t\t: [])\n\t\t\t\t]),\n\t\t\t\t\"}\",\n\t\t\t\t\"return policy;\"\n\t\t\t])};`\n\t\t]);\n\t}\n}\n\nmodule.exports = GetTrustedTypesPolicyRuntimeModule;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,QAAQ,GAAGD,OAAO,CAAC,aAAa,CAAC;AACvC,MAAME,mBAAmB,GAAGF,OAAO,CAAC,uBAAuB,CAAC;AAE5D,MAAMG,kCAAkC,SAASD,mBAAmB,CAAC;EACpE;AACD;AACA;EACCE,WAAW,CAACC,mBAAmB,EAAE;IAChC,KAAK,CAAC,sBAAsB,CAAC;IAC7B,IAAI,CAACA,mBAAmB,GAAGA,mBAAmB;EAC/C;;EAEA;AACD;AACA;EACCC,QAAQ,GAAG;IACV,MAAM;MAAEC;IAAY,CAAC,GAAG,IAAI;IAC5B,MAAM;MAAEC,eAAe;MAAEC;IAAc,CAAC,GAAGF,WAAW;IACtD,MAAM;MAAEG;IAAa,CAAC,GAAGD,aAAa;IACtC,MAAME,EAAE,GAAGZ,cAAc,CAACa,qBAAqB;IAE/C,OAAOX,QAAQ,CAACY,QAAQ,CAAC,CACxB,aAAa,EACZ,GAAEF,EAAG,MAAKH,eAAe,CAACM,aAAa,CAAC,EAAE,EAAE,CAC5C,gGAAgG,EAChG,6BAA6B,EAC7Bb,QAAQ,CAACc,MAAM,CAAC,CACf,YAAY,EACZd,QAAQ,CAACc,MAAM,CACd,CACC,IAAI,IAAI,CAACV,mBAAmB,CAACW,GAAG,CAACjB,cAAc,CAACkB,YAAY,CAAC,GAC1D,CACC,iBAAgBT,eAAe,CAACU,iBAAiB,CACjD,QAAQ,EACR,QAAQ,CACP,EAAC,CACF,GACD,EAAE,CAAC,EACN,IAAI,IAAI,CAACb,mBAAmB,CAACW,GAAG,CAACjB,cAAc,CAACoB,eAAe,CAAC,GAC7D,CACC,oBAAmBX,eAAe,CAACU,iBAAiB,CACpD,KAAK,EACL,KAAK,CACJ,EAAC,CACF,GACD,EAAE,CAAC,CACN,CAACE,IAAI,CAAC,KAAK,CAAC,CACb,EACD,IAAI,EACJ,IAAIV,YAAY,GACb,CACA,yEAAyE,EACzET,QAAQ,CAACc,MAAM,CAAC,CACd,sCAAqCM,IAAI,CAACC,SAAS,CACnDZ,YAAY,CAACa,UAAU,CACtB,YAAW,CACb,CAAC,EACF,GAAG,CACF,GACD,EAAE,CAAC,CACN,CAAC,EACF,GAAG,EACH,gBAAgB,CAChB,CAAE,GAAE,CACL,CAAC;EACH;AACD;AAEAC,MAAM,CAACC,OAAO,GAAGtB,kCAAkC"},"metadata":{},"sourceType":"script","externalDependencies":[]}