{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst InitFragment = require(\"./InitFragment\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst Template = require(\"./Template\");\nconst {\n  equals\n} = require(\"./util/ArrayHelpers\");\nconst compileBooleanMatcher = require(\"./util/compileBooleanMatcher\");\nconst propertyAccess = require(\"./util/propertyAccess\");\nconst {\n  forEachRuntime,\n  subtractRuntime\n} = require(\"./util/runtime\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").OutputNormalized} OutputOptions */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./CodeGenerationResults\")} CodeGenerationResults */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @param {Module} module the module\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @returns {string} error message\n */\nconst noModuleIdErrorMessage = (module, chunkGraph) => {\n  return `Module ${module.identifier()} has no id assigned.\nThis should not happen.\nIt's in these chunks: ${Array.from(chunkGraph.getModuleChunksIterable(module), c => c.name || c.id || c.debugId).join(\", \") || \"none\"} (If module is in no chunk this indicates a bug in some chunk/module optimization logic)\nModule has these incoming connections: ${Array.from(chunkGraph.moduleGraph.getIncomingConnections(module), connection => `\\n - ${connection.originModule && connection.originModule.identifier()} ${connection.dependency && connection.dependency.type} ${connection.explanations && Array.from(connection.explanations).join(\", \") || \"\"}`).join(\"\")}`;\n};\n\n/**\n * @param {string|undefined} definition global object definition\n * @returns {string} save to use global object\n */\nfunction getGlobalObject(definition) {\n  if (!definition) return definition;\n  const trimmed = definition.trim();\n  if (\n  // identifier, we do not need real identifier regarding ECMAScript/Unicode\n  trimmed.match(/^[_\\p{L}][_0-9\\p{L}]*$/iu) ||\n  // iife\n  // call expression\n  // expression in parentheses\n  trimmed.match(/^([_\\p{L}][_0-9\\p{L}]*)?\\(.*\\)$/iu)) return trimmed;\n  return `Object(${trimmed})`;\n}\nclass RuntimeTemplate {\n  /**\n   * @param {Compilation} compilation the compilation\n   * @param {OutputOptions} outputOptions the compilation output options\n   * @param {RequestShortener} requestShortener the request shortener\n   */\n  constructor(compilation, outputOptions, requestShortener) {\n    this.compilation = compilation;\n    this.outputOptions = outputOptions || {};\n    this.requestShortener = requestShortener;\n    this.globalObject = getGlobalObject(outputOptions.globalObject);\n    this.contentHashReplacement = \"X\".repeat(outputOptions.hashDigestLength);\n  }\n  isIIFE() {\n    return this.outputOptions.iife;\n  }\n  isModule() {\n    return this.outputOptions.module;\n  }\n  supportsConst() {\n    return this.outputOptions.environment.const;\n  }\n  supportsArrowFunction() {\n    return this.outputOptions.environment.arrowFunction;\n  }\n  supportsOptionalChaining() {\n    return this.outputOptions.environment.optionalChaining;\n  }\n  supportsForOf() {\n    return this.outputOptions.environment.forOf;\n  }\n  supportsDestructuring() {\n    return this.outputOptions.environment.destructuring;\n  }\n  supportsBigIntLiteral() {\n    return this.outputOptions.environment.bigIntLiteral;\n  }\n  supportsDynamicImport() {\n    return this.outputOptions.environment.dynamicImport;\n  }\n  supportsEcmaScriptModuleSyntax() {\n    return this.outputOptions.environment.module;\n  }\n  supportTemplateLiteral() {\n    return this.outputOptions.environment.templateLiteral;\n  }\n  returningFunction(returnValue) {\n    let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return this.supportsArrowFunction() ? `(${args}) => (${returnValue})` : `function(${args}) { return ${returnValue}; }`;\n  }\n  basicFunction(args, body) {\n    return this.supportsArrowFunction() ? `(${args}) => {\\n${Template.indent(body)}\\n}` : `function(${args}) {\\n${Template.indent(body)}\\n}`;\n  }\n\n  /**\n   * @param {Array<string|{expr: string}>} args args\n   * @returns {string} result expression\n   */\n  concatenation() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const len = args.length;\n    if (len === 2) return this._es5Concatenation(args);\n    if (len === 0) return '\"\"';\n    if (len === 1) {\n      return typeof args[0] === \"string\" ? JSON.stringify(args[0]) : `\"\" + ${args[0].expr}`;\n    }\n    if (!this.supportTemplateLiteral()) return this._es5Concatenation(args);\n\n    // cost comparison between template literal and concatenation:\n    // both need equal surroundings: `xxx` vs \"xxx\"\n    // template literal has constant cost of 3 chars for each expression\n    // es5 concatenation has cost of 3 + n chars for n expressions in row\n    // when a es5 concatenation ends with an expression it reduces cost by 3\n    // when a es5 concatenation starts with an single expression it reduces cost by 3\n    // e. g. `${a}${b}${c}` (3*3 = 9) is longer than \"\"+a+b+c ((3+3)-3 = 3)\n    // e. g. `x${a}x${b}x${c}x` (3*3 = 9) is shorter than \"x\"+a+\"x\"+b+\"x\"+c+\"x\" (4+4+4 = 12)\n\n    let templateCost = 0;\n    let concatenationCost = 0;\n    let lastWasExpr = false;\n    for (const arg of args) {\n      const isExpr = typeof arg !== \"string\";\n      if (isExpr) {\n        templateCost += 3;\n        concatenationCost += lastWasExpr ? 1 : 4;\n      }\n      lastWasExpr = isExpr;\n    }\n    if (lastWasExpr) concatenationCost -= 3;\n    if (typeof args[0] !== \"string\" && typeof args[1] === \"string\") concatenationCost -= 3;\n    if (concatenationCost <= templateCost) return this._es5Concatenation(args);\n    return `\\`${args.map(arg => typeof arg === \"string\" ? arg : `\\${${arg.expr}}`).join(\"\")}\\``;\n  }\n\n  /**\n   * @param {Array<string|{expr: string}>} args args (len >= 2)\n   * @returns {string} result expression\n   * @private\n   */\n  _es5Concatenation(args) {\n    const str = args.map(arg => typeof arg === \"string\" ? JSON.stringify(arg) : arg.expr).join(\" + \");\n\n    // when the first two args are expression, we need to prepend \"\" + to force string\n    // concatenation instead of number addition.\n    return typeof args[0] !== \"string\" && typeof args[1] !== \"string\" ? `\"\" + ${str}` : str;\n  }\n  expressionFunction(expression) {\n    let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return this.supportsArrowFunction() ? `(${args}) => (${expression})` : `function(${args}) { ${expression}; }`;\n  }\n  emptyFunction() {\n    return this.supportsArrowFunction() ? \"x => {}\" : \"function() {}\";\n  }\n  destructureArray(items, value) {\n    return this.supportsDestructuring() ? `var [${items.join(\", \")}] = ${value};` : Template.asString(items.map((item, i) => `var ${item} = ${value}[${i}];`));\n  }\n  destructureObject(items, value) {\n    return this.supportsDestructuring() ? `var {${items.join(\", \")}} = ${value};` : Template.asString(items.map(item => `var ${item} = ${value}${propertyAccess([item])};`));\n  }\n  iife(args, body) {\n    return `(${this.basicFunction(args, body)})()`;\n  }\n  forEach(variable, array, body) {\n    return this.supportsForOf() ? `for(const ${variable} of ${array}) {\\n${Template.indent(body)}\\n}` : `${array}.forEach(function(${variable}) {\\n${Template.indent(body)}\\n});`;\n  }\n\n  /**\n   * Add a comment\n   * @param {object} options Information content of the comment\n   * @param {string=} options.request request string used originally\n   * @param {string=} options.chunkName name of the chunk referenced\n   * @param {string=} options.chunkReason reason information of the chunk\n   * @param {string=} options.message additional message\n   * @param {string=} options.exportName name of the export\n   * @returns {string} comment\n   */\n  comment(_ref) {\n    let {\n      request,\n      chunkName,\n      chunkReason,\n      message,\n      exportName\n    } = _ref;\n    let content;\n    if (this.outputOptions.pathinfo) {\n      content = [message, request, chunkName, chunkReason].filter(Boolean).map(item => this.requestShortener.shorten(item)).join(\" | \");\n    } else {\n      content = [message, chunkName, chunkReason].filter(Boolean).map(item => this.requestShortener.shorten(item)).join(\" | \");\n    }\n    if (!content) return \"\";\n    if (this.outputOptions.pathinfo) {\n      return Template.toComment(content) + \" \";\n    } else {\n      return Template.toNormalComment(content) + \" \";\n    }\n  }\n\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error block\n   */\n  throwMissingModuleErrorBlock(_ref2) {\n    let {\n      request\n    } = _ref2;\n    const err = `Cannot find module '${request}'`;\n    return `var e = new Error(${JSON.stringify(err)}); e.code = 'MODULE_NOT_FOUND'; throw e;`;\n  }\n\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error function\n   */\n  throwMissingModuleErrorFunction(_ref3) {\n    let {\n      request\n    } = _ref3;\n    return `function webpackMissingModule() { ${this.throwMissingModuleErrorBlock({\n      request\n    })} }`;\n  }\n\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error IIFE\n   */\n  missingModule(_ref4) {\n    let {\n      request\n    } = _ref4;\n    return `Object(${this.throwMissingModuleErrorFunction({\n      request\n    })}())`;\n  }\n\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error statement\n   */\n  missingModuleStatement(_ref5) {\n    let {\n      request\n    } = _ref5;\n    return `${this.missingModule({\n      request\n    })};\\n`;\n  }\n\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error code\n   */\n  missingModulePromise(_ref6) {\n    let {\n      request\n    } = _ref6;\n    return `Promise.resolve().then(${this.throwMissingModuleErrorFunction({\n      request\n    })})`;\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {Module} options.module the module\n   * @param {string} options.request the request that should be printed as comment\n   * @param {string=} options.idExpr expression to use as id expression\n   * @param {\"expression\" | \"promise\" | \"statements\"} options.type which kind of code should be returned\n   * @returns {string} the code\n   */\n  weakError(_ref7) {\n    let {\n      module,\n      chunkGraph,\n      request,\n      idExpr,\n      type\n    } = _ref7;\n    const moduleId = chunkGraph.getModuleId(module);\n    const errorMessage = moduleId === null ? JSON.stringify(\"Module is not available (weak dependency)\") : idExpr ? `\"Module '\" + ${idExpr} + \"' is not available (weak dependency)\"` : JSON.stringify(`Module '${moduleId}' is not available (weak dependency)`);\n    const comment = request ? Template.toNormalComment(request) + \" \" : \"\";\n    const errorStatements = `var e = new Error(${errorMessage}); ` + comment + \"e.code = 'MODULE_NOT_FOUND'; throw e;\";\n    switch (type) {\n      case \"statements\":\n        return errorStatements;\n      case \"promise\":\n        return `Promise.resolve().then(${this.basicFunction(\"\", errorStatements)})`;\n      case \"expression\":\n        return this.iife(\"\", errorStatements);\n    }\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @returns {string} the expression\n   */\n  moduleId(_ref8) {\n    let {\n      module,\n      chunkGraph,\n      request,\n      weak\n    } = _ref8;\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n    const moduleId = chunkGraph.getModuleId(module);\n    if (moduleId === null) {\n      if (weak) {\n        return \"null /* weak dependency, without id */\";\n      }\n      throw new Error(`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n    return `${this.comment({\n      request\n    })}${JSON.stringify(moduleId)}`;\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the expression\n   */\n  moduleRaw(_ref9) {\n    let {\n      module,\n      chunkGraph,\n      request,\n      weak,\n      runtimeRequirements\n    } = _ref9;\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n    const moduleId = chunkGraph.getModuleId(module);\n    if (moduleId === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"expression\"\n        });\n      }\n      throw new Error(`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n    runtimeRequirements.add(RuntimeGlobals.require);\n    return `__webpack_require__(${this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    })})`;\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the expression\n   */\n  moduleExports(_ref10) {\n    let {\n      module,\n      chunkGraph,\n      request,\n      weak,\n      runtimeRequirements\n    } = _ref10;\n    return this.moduleRaw({\n      module,\n      chunkGraph,\n      request,\n      weak,\n      runtimeRequirements\n    });\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {boolean=} options.strict if the current module is in strict esm mode\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the expression\n   */\n  moduleNamespace(_ref11) {\n    let {\n      module,\n      chunkGraph,\n      request,\n      strict,\n      weak,\n      runtimeRequirements\n    } = _ref11;\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n    if (chunkGraph.getModuleId(module) === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"expression\"\n        });\n      }\n      throw new Error(`RuntimeTemplate.moduleNamespace(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n    const moduleId = this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    });\n    const exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n    switch (exportsType) {\n      case \"namespace\":\n        return this.moduleRaw({\n          module,\n          chunkGraph,\n          request,\n          weak,\n          runtimeRequirements\n        });\n      case \"default-with-named\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        return `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 3)`;\n      case \"default-only\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        return `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 1)`;\n      case \"dynamic\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        return `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 7)`;\n    }\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {AsyncDependenciesBlock=} options.block the current dependencies block\n   * @param {Module} options.module the module\n   * @param {string} options.request the request that should be printed as comment\n   * @param {string} options.message a message for the comment\n   * @param {boolean=} options.strict if the current module is in strict esm mode\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the promise expression\n   */\n  moduleNamespacePromise(_ref12) {\n    let {\n      chunkGraph,\n      block,\n      module,\n      request,\n      message,\n      strict,\n      weak,\n      runtimeRequirements\n    } = _ref12;\n    if (!module) {\n      return this.missingModulePromise({\n        request\n      });\n    }\n    const moduleId = chunkGraph.getModuleId(module);\n    if (moduleId === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"promise\"\n        });\n      }\n      throw new Error(`RuntimeTemplate.moduleNamespacePromise(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n    const promise = this.blockPromise({\n      chunkGraph,\n      block,\n      message,\n      runtimeRequirements\n    });\n    let appending;\n    let idExpr = JSON.stringify(chunkGraph.getModuleId(module));\n    const comment = this.comment({\n      request\n    });\n    let header = \"\";\n    if (weak) {\n      if (idExpr.length > 8) {\n        // 'var x=\"nnnnnn\";x,\"+x+\",x' vs '\"nnnnnn\",nnnnnn,\"nnnnnn\"'\n        header += `var id = ${idExpr}; `;\n        idExpr = \"id\";\n      }\n      runtimeRequirements.add(RuntimeGlobals.moduleFactories);\n      header += `if(!${RuntimeGlobals.moduleFactories}[${idExpr}]) { ${this.weakError({\n        module,\n        chunkGraph,\n        request,\n        idExpr,\n        type: \"statements\"\n      })} } `;\n    }\n    const moduleIdExpr = this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    });\n    const exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n    let fakeType = 16;\n    switch (exportsType) {\n      case \"namespace\":\n        if (header) {\n          const rawModule = this.moduleRaw({\n            module,\n            chunkGraph,\n            request,\n            weak,\n            runtimeRequirements\n          });\n          appending = `.then(${this.basicFunction(\"\", `${header}return ${rawModule};`)})`;\n        } else {\n          runtimeRequirements.add(RuntimeGlobals.require);\n          appending = `.then(__webpack_require__.bind(__webpack_require__, ${comment}${idExpr}))`;\n        }\n        break;\n      case \"dynamic\":\n        fakeType |= 4;\n      /* fall through */\n      case \"default-with-named\":\n        fakeType |= 2;\n      /* fall through */\n      case \"default-only\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        if (chunkGraph.moduleGraph.isAsync(module)) {\n          if (header) {\n            const rawModule = this.moduleRaw({\n              module,\n              chunkGraph,\n              request,\n              weak,\n              runtimeRequirements\n            });\n            appending = `.then(${this.basicFunction(\"\", `${header}return ${rawModule};`)})`;\n          } else {\n            runtimeRequirements.add(RuntimeGlobals.require);\n            appending = `.then(__webpack_require__.bind(__webpack_require__, ${comment}${idExpr}))`;\n          }\n          appending += `.then(${this.returningFunction(`${RuntimeGlobals.createFakeNamespaceObject}(m, ${fakeType})`, \"m\")})`;\n        } else {\n          fakeType |= 1;\n          if (header) {\n            const returnExpression = `${RuntimeGlobals.createFakeNamespaceObject}(${moduleIdExpr}, ${fakeType})`;\n            appending = `.then(${this.basicFunction(\"\", `${header}return ${returnExpression};`)})`;\n          } else {\n            appending = `.then(${RuntimeGlobals.createFakeNamespaceObject}.bind(__webpack_require__, ${comment}${idExpr}, ${fakeType}))`;\n          }\n        }\n        break;\n    }\n    return `${promise || \"Promise.resolve()\"}${appending}`;\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {RuntimeSpec=} options.runtime runtime for which this code will be generated\n   * @param {RuntimeSpec | boolean=} options.runtimeCondition only execute the statement in some runtimes\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} expression\n   */\n  runtimeConditionExpression(_ref13) {\n    let {\n      chunkGraph,\n      runtimeCondition,\n      runtime,\n      runtimeRequirements\n    } = _ref13;\n    if (runtimeCondition === undefined) return \"true\";\n    if (typeof runtimeCondition === \"boolean\") return `${runtimeCondition}`;\n    /** @type {Set<string>} */\n    const positiveRuntimeIds = new Set();\n    forEachRuntime(runtimeCondition, runtime => positiveRuntimeIds.add(`${chunkGraph.getRuntimeId(runtime)}`));\n    /** @type {Set<string>} */\n    const negativeRuntimeIds = new Set();\n    forEachRuntime(subtractRuntime(runtime, runtimeCondition), runtime => negativeRuntimeIds.add(`${chunkGraph.getRuntimeId(runtime)}`));\n    runtimeRequirements.add(RuntimeGlobals.runtimeId);\n    return compileBooleanMatcher.fromLists(Array.from(positiveRuntimeIds), Array.from(negativeRuntimeIds))(RuntimeGlobals.runtimeId);\n  }\n\n  /**\n   *\n   * @param {Object} options options object\n   * @param {boolean=} options.update whether a new variable should be created or the existing one updated\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {string} options.importVar name of the import variable\n   * @param {Module} options.originModule module in which the statement is emitted\n   * @param {boolean=} options.weak true, if this is a weak dependency\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {[string, string]} the import statement and the compat statement\n   */\n  importStatement(_ref14) {\n    let {\n      update,\n      module,\n      chunkGraph,\n      request,\n      importVar,\n      originModule,\n      weak,\n      runtimeRequirements\n    } = _ref14;\n    if (!module) {\n      return [this.missingModuleStatement({\n        request\n      }), \"\"];\n    }\n    if (chunkGraph.getModuleId(module) === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return [this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"statements\"\n        }), \"\"];\n      }\n      throw new Error(`RuntimeTemplate.importStatement(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n    const moduleId = this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    });\n    const optDeclaration = update ? \"\" : \"var \";\n    const exportsType = module.getExportsType(chunkGraph.moduleGraph, originModule.buildMeta.strictHarmonyModule);\n    runtimeRequirements.add(RuntimeGlobals.require);\n    const importContent = `/* harmony import */ ${optDeclaration}${importVar} = __webpack_require__(${moduleId});\\n`;\n    if (exportsType === \"dynamic\") {\n      runtimeRequirements.add(RuntimeGlobals.compatGetDefaultExport);\n      return [importContent, `/* harmony import */ ${optDeclaration}${importVar}_default = /*#__PURE__*/${RuntimeGlobals.compatGetDefaultExport}(${importVar});\\n`];\n    }\n    return [importContent, \"\"];\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {ModuleGraph} options.moduleGraph the module graph\n   * @param {Module} options.module the module\n   * @param {string} options.request the request\n   * @param {string | string[]} options.exportName the export name\n   * @param {Module} options.originModule the origin module\n   * @param {boolean|undefined} options.asiSafe true, if location is safe for ASI, a bracket can be emitted\n   * @param {boolean} options.isCall true, if expression will be called\n   * @param {boolean} options.callContext when false, call context will not be preserved\n   * @param {boolean} options.defaultInterop when true and accessing the default exports, interop code will be generated\n   * @param {string} options.importVar the identifier name of the import variable\n   * @param {InitFragment[]} options.initFragments init fragments will be added here\n   * @param {RuntimeSpec} options.runtime runtime for which this code will be generated\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} expression\n   */\n  exportFromImport(_ref15) {\n    let {\n      moduleGraph,\n      module,\n      request,\n      exportName,\n      originModule,\n      asiSafe,\n      isCall,\n      callContext,\n      defaultInterop,\n      importVar,\n      initFragments,\n      runtime,\n      runtimeRequirements\n    } = _ref15;\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n    if (!Array.isArray(exportName)) {\n      exportName = exportName ? [exportName] : [];\n    }\n    const exportsType = module.getExportsType(moduleGraph, originModule.buildMeta.strictHarmonyModule);\n    if (defaultInterop) {\n      if (exportName.length > 0 && exportName[0] === \"default\") {\n        switch (exportsType) {\n          case \"dynamic\":\n            if (isCall) {\n              return `${importVar}_default()${propertyAccess(exportName, 1)}`;\n            } else {\n              return asiSafe ? `(${importVar}_default()${propertyAccess(exportName, 1)})` : asiSafe === false ? `;(${importVar}_default()${propertyAccess(exportName, 1)})` : `${importVar}_default.a${propertyAccess(exportName, 1)}`;\n            }\n          case \"default-only\":\n          case \"default-with-named\":\n            exportName = exportName.slice(1);\n            break;\n        }\n      } else if (exportName.length > 0) {\n        if (exportsType === \"default-only\") {\n          return \"/* non-default import from non-esm module */undefined\" + propertyAccess(exportName, 1);\n        } else if (exportsType !== \"namespace\" && exportName[0] === \"__esModule\") {\n          return \"/* __esModule */true\";\n        }\n      } else if (exportsType === \"default-only\" || exportsType === \"default-with-named\") {\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        initFragments.push(new InitFragment(`var ${importVar}_namespace_cache;\\n`, InitFragment.STAGE_CONSTANTS, -1, `${importVar}_namespace_cache`));\n        return `/*#__PURE__*/ ${asiSafe ? \"\" : asiSafe === false ? \";\" : \"Object\"}(${importVar}_namespace_cache || (${importVar}_namespace_cache = ${RuntimeGlobals.createFakeNamespaceObject}(${importVar}${exportsType === \"default-only\" ? \"\" : \", 2\"})))`;\n      }\n    }\n    if (exportName.length > 0) {\n      const exportsInfo = moduleGraph.getExportsInfo(module);\n      const used = exportsInfo.getUsedName(exportName, runtime);\n      if (!used) {\n        const comment = Template.toNormalComment(`unused export ${propertyAccess(exportName)}`);\n        return `${comment} undefined`;\n      }\n      const comment = equals(used, exportName) ? \"\" : Template.toNormalComment(propertyAccess(exportName)) + \" \";\n      const access = `${importVar}${comment}${propertyAccess(used)}`;\n      if (isCall && callContext === false) {\n        return asiSafe ? `(0,${access})` : asiSafe === false ? `;(0,${access})` : `/*#__PURE__*/Object(${access})`;\n      }\n      return access;\n    } else {\n      return importVar;\n    }\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {AsyncDependenciesBlock} options.block the async block\n   * @param {string} options.message the message\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} expression\n   */\n  blockPromise(_ref16) {\n    let {\n      block,\n      message,\n      chunkGraph,\n      runtimeRequirements\n    } = _ref16;\n    if (!block) {\n      const comment = this.comment({\n        message\n      });\n      return `Promise.resolve(${comment.trim()})`;\n    }\n    const chunkGroup = chunkGraph.getBlockChunkGroup(block);\n    if (!chunkGroup || chunkGroup.chunks.length === 0) {\n      const comment = this.comment({\n        message\n      });\n      return `Promise.resolve(${comment.trim()})`;\n    }\n    const chunks = chunkGroup.chunks.filter(chunk => !chunk.hasRuntime() && chunk.id !== null);\n    const comment = this.comment({\n      message,\n      chunkName: block.chunkName\n    });\n    if (chunks.length === 1) {\n      const chunkId = JSON.stringify(chunks[0].id);\n      runtimeRequirements.add(RuntimeGlobals.ensureChunk);\n      return `${RuntimeGlobals.ensureChunk}(${comment}${chunkId})`;\n    } else if (chunks.length > 0) {\n      runtimeRequirements.add(RuntimeGlobals.ensureChunk);\n      const requireChunkId = chunk => `${RuntimeGlobals.ensureChunk}(${JSON.stringify(chunk.id)})`;\n      return `Promise.all(${comment.trim()}[${chunks.map(requireChunkId).join(\", \")}])`;\n    } else {\n      return `Promise.resolve(${comment.trim()})`;\n    }\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {AsyncDependenciesBlock} options.block the async block\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @param {string=} options.request request string used originally\n   * @returns {string} expression\n   */\n  asyncModuleFactory(_ref17) {\n    let {\n      block,\n      chunkGraph,\n      runtimeRequirements,\n      request\n    } = _ref17;\n    const dep = block.dependencies[0];\n    const module = chunkGraph.moduleGraph.getModule(dep);\n    const ensureChunk = this.blockPromise({\n      block,\n      message: \"\",\n      chunkGraph,\n      runtimeRequirements\n    });\n    const factory = this.returningFunction(this.moduleRaw({\n      module,\n      chunkGraph,\n      request,\n      runtimeRequirements\n    }));\n    return this.returningFunction(ensureChunk.startsWith(\"Promise.resolve(\") ? `${factory}` : `${ensureChunk}.then(${this.returningFunction(factory)})`);\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {Dependency} options.dependency the dependency\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @param {string=} options.request request string used originally\n   * @returns {string} expression\n   */\n  syncModuleFactory(_ref18) {\n    let {\n      dependency,\n      chunkGraph,\n      runtimeRequirements,\n      request\n    } = _ref18;\n    const module = chunkGraph.moduleGraph.getModule(dependency);\n    const factory = this.returningFunction(this.moduleRaw({\n      module,\n      chunkGraph,\n      request,\n      runtimeRequirements\n    }));\n    return this.returningFunction(factory);\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {string} options.exportsArgument the name of the exports object\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} statement\n   */\n  defineEsModuleFlagStatement(_ref19) {\n    let {\n      exportsArgument,\n      runtimeRequirements\n    } = _ref19;\n    runtimeRequirements.add(RuntimeGlobals.makeNamespaceObject);\n    runtimeRequirements.add(RuntimeGlobals.exports);\n    return `${RuntimeGlobals.makeNamespaceObject}(${exportsArgument});\\n`;\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {string} options.publicPath the public path\n   * @param {RuntimeSpec=} options.runtime runtime\n   * @param {CodeGenerationResults} options.codeGenerationResults the code generation results\n   * @returns {string} the url of the asset\n   */\n  assetUrl(_ref20) {\n    let {\n      publicPath,\n      runtime,\n      module,\n      codeGenerationResults\n    } = _ref20;\n    if (!module) {\n      return \"data:,\";\n    }\n    const codeGen = codeGenerationResults.get(module, runtime);\n    const {\n      data\n    } = codeGen;\n    const url = data.get(\"url\");\n    if (url) return url.toString();\n    const filename = data.get(\"filename\");\n    return publicPath + filename;\n  }\n}\nmodule.exports = RuntimeTemplate;","map":{"version":3,"names":["InitFragment","require","RuntimeGlobals","Template","equals","compileBooleanMatcher","propertyAccess","forEachRuntime","subtractRuntime","noModuleIdErrorMessage","module","chunkGraph","identifier","Array","from","getModuleChunksIterable","c","name","id","debugId","join","moduleGraph","getIncomingConnections","connection","originModule","dependency","type","explanations","getGlobalObject","definition","trimmed","trim","match","RuntimeTemplate","constructor","compilation","outputOptions","requestShortener","globalObject","contentHashReplacement","repeat","hashDigestLength","isIIFE","iife","isModule","supportsConst","environment","const","supportsArrowFunction","arrowFunction","supportsOptionalChaining","optionalChaining","supportsForOf","forOf","supportsDestructuring","destructuring","supportsBigIntLiteral","bigIntLiteral","supportsDynamicImport","dynamicImport","supportsEcmaScriptModuleSyntax","supportTemplateLiteral","templateLiteral","returningFunction","returnValue","args","basicFunction","body","indent","concatenation","len","length","_es5Concatenation","JSON","stringify","expr","templateCost","concatenationCost","lastWasExpr","arg","isExpr","map","str","expressionFunction","expression","emptyFunction","destructureArray","items","value","asString","item","i","destructureObject","forEach","variable","array","comment","request","chunkName","chunkReason","message","exportName","content","pathinfo","filter","Boolean","shorten","toComment","toNormalComment","throwMissingModuleErrorBlock","err","throwMissingModuleErrorFunction","missingModule","missingModuleStatement","missingModulePromise","weakError","idExpr","moduleId","getModuleId","errorMessage","errorStatements","weak","Error","moduleRaw","runtimeRequirements","add","moduleExports","moduleNamespace","strict","exportsType","getExportsType","createFakeNamespaceObject","moduleNamespacePromise","block","promise","blockPromise","appending","header","moduleFactories","moduleIdExpr","fakeType","rawModule","isAsync","returnExpression","runtimeConditionExpression","runtimeCondition","runtime","undefined","positiveRuntimeIds","Set","getRuntimeId","negativeRuntimeIds","runtimeId","fromLists","importStatement","update","importVar","optDeclaration","buildMeta","strictHarmonyModule","importContent","compatGetDefaultExport","exportFromImport","asiSafe","isCall","callContext","defaultInterop","initFragments","isArray","slice","push","STAGE_CONSTANTS","exportsInfo","getExportsInfo","used","getUsedName","access","chunkGroup","getBlockChunkGroup","chunks","chunk","hasRuntime","chunkId","ensureChunk","requireChunkId","asyncModuleFactory","dep","dependencies","getModule","factory","startsWith","syncModuleFactory","defineEsModuleFlagStatement","exportsArgument","makeNamespaceObject","exports","assetUrl","publicPath","codeGenerationResults","codeGen","get","data","url","toString","filename"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/webpack/lib/RuntimeTemplate.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst InitFragment = require(\"./InitFragment\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst Template = require(\"./Template\");\nconst { equals } = require(\"./util/ArrayHelpers\");\nconst compileBooleanMatcher = require(\"./util/compileBooleanMatcher\");\nconst propertyAccess = require(\"./util/propertyAccess\");\nconst { forEachRuntime, subtractRuntime } = require(\"./util/runtime\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").OutputNormalized} OutputOptions */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./CodeGenerationResults\")} CodeGenerationResults */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @param {Module} module the module\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @returns {string} error message\n */\nconst noModuleIdErrorMessage = (module, chunkGraph) => {\n\treturn `Module ${module.identifier()} has no id assigned.\nThis should not happen.\nIt's in these chunks: ${\n\t\tArray.from(\n\t\t\tchunkGraph.getModuleChunksIterable(module),\n\t\t\tc => c.name || c.id || c.debugId\n\t\t).join(\", \") || \"none\"\n\t} (If module is in no chunk this indicates a bug in some chunk/module optimization logic)\nModule has these incoming connections: ${Array.from(\n\t\tchunkGraph.moduleGraph.getIncomingConnections(module),\n\t\tconnection =>\n\t\t\t`\\n - ${\n\t\t\t\tconnection.originModule && connection.originModule.identifier()\n\t\t\t} ${connection.dependency && connection.dependency.type} ${\n\t\t\t\t(connection.explanations &&\n\t\t\t\t\tArray.from(connection.explanations).join(\", \")) ||\n\t\t\t\t\"\"\n\t\t\t}`\n\t).join(\"\")}`;\n};\n\n/**\n * @param {string|undefined} definition global object definition\n * @returns {string} save to use global object\n */\nfunction getGlobalObject(definition) {\n\tif (!definition) return definition;\n\tconst trimmed = definition.trim();\n\n\tif (\n\t\t// identifier, we do not need real identifier regarding ECMAScript/Unicode\n\t\ttrimmed.match(/^[_\\p{L}][_0-9\\p{L}]*$/iu) ||\n\t\t// iife\n\t\t// call expression\n\t\t// expression in parentheses\n\t\ttrimmed.match(/^([_\\p{L}][_0-9\\p{L}]*)?\\(.*\\)$/iu)\n\t)\n\t\treturn trimmed;\n\n\treturn `Object(${trimmed})`;\n}\n\nclass RuntimeTemplate {\n\t/**\n\t * @param {Compilation} compilation the compilation\n\t * @param {OutputOptions} outputOptions the compilation output options\n\t * @param {RequestShortener} requestShortener the request shortener\n\t */\n\tconstructor(compilation, outputOptions, requestShortener) {\n\t\tthis.compilation = compilation;\n\t\tthis.outputOptions = outputOptions || {};\n\t\tthis.requestShortener = requestShortener;\n\t\tthis.globalObject = getGlobalObject(outputOptions.globalObject);\n\t\tthis.contentHashReplacement = \"X\".repeat(outputOptions.hashDigestLength);\n\t}\n\n\tisIIFE() {\n\t\treturn this.outputOptions.iife;\n\t}\n\n\tisModule() {\n\t\treturn this.outputOptions.module;\n\t}\n\n\tsupportsConst() {\n\t\treturn this.outputOptions.environment.const;\n\t}\n\n\tsupportsArrowFunction() {\n\t\treturn this.outputOptions.environment.arrowFunction;\n\t}\n\n\tsupportsOptionalChaining() {\n\t\treturn this.outputOptions.environment.optionalChaining;\n\t}\n\n\tsupportsForOf() {\n\t\treturn this.outputOptions.environment.forOf;\n\t}\n\n\tsupportsDestructuring() {\n\t\treturn this.outputOptions.environment.destructuring;\n\t}\n\n\tsupportsBigIntLiteral() {\n\t\treturn this.outputOptions.environment.bigIntLiteral;\n\t}\n\n\tsupportsDynamicImport() {\n\t\treturn this.outputOptions.environment.dynamicImport;\n\t}\n\n\tsupportsEcmaScriptModuleSyntax() {\n\t\treturn this.outputOptions.environment.module;\n\t}\n\n\tsupportTemplateLiteral() {\n\t\treturn this.outputOptions.environment.templateLiteral;\n\t}\n\n\treturningFunction(returnValue, args = \"\") {\n\t\treturn this.supportsArrowFunction()\n\t\t\t? `(${args}) => (${returnValue})`\n\t\t\t: `function(${args}) { return ${returnValue}; }`;\n\t}\n\n\tbasicFunction(args, body) {\n\t\treturn this.supportsArrowFunction()\n\t\t\t? `(${args}) => {\\n${Template.indent(body)}\\n}`\n\t\t\t: `function(${args}) {\\n${Template.indent(body)}\\n}`;\n\t}\n\n\t/**\n\t * @param {Array<string|{expr: string}>} args args\n\t * @returns {string} result expression\n\t */\n\tconcatenation(...args) {\n\t\tconst len = args.length;\n\n\t\tif (len === 2) return this._es5Concatenation(args);\n\t\tif (len === 0) return '\"\"';\n\t\tif (len === 1) {\n\t\t\treturn typeof args[0] === \"string\"\n\t\t\t\t? JSON.stringify(args[0])\n\t\t\t\t: `\"\" + ${args[0].expr}`;\n\t\t}\n\t\tif (!this.supportTemplateLiteral()) return this._es5Concatenation(args);\n\n\t\t// cost comparison between template literal and concatenation:\n\t\t// both need equal surroundings: `xxx` vs \"xxx\"\n\t\t// template literal has constant cost of 3 chars for each expression\n\t\t// es5 concatenation has cost of 3 + n chars for n expressions in row\n\t\t// when a es5 concatenation ends with an expression it reduces cost by 3\n\t\t// when a es5 concatenation starts with an single expression it reduces cost by 3\n\t\t// e. g. `${a}${b}${c}` (3*3 = 9) is longer than \"\"+a+b+c ((3+3)-3 = 3)\n\t\t// e. g. `x${a}x${b}x${c}x` (3*3 = 9) is shorter than \"x\"+a+\"x\"+b+\"x\"+c+\"x\" (4+4+4 = 12)\n\n\t\tlet templateCost = 0;\n\t\tlet concatenationCost = 0;\n\n\t\tlet lastWasExpr = false;\n\t\tfor (const arg of args) {\n\t\t\tconst isExpr = typeof arg !== \"string\";\n\t\t\tif (isExpr) {\n\t\t\t\ttemplateCost += 3;\n\t\t\t\tconcatenationCost += lastWasExpr ? 1 : 4;\n\t\t\t}\n\t\t\tlastWasExpr = isExpr;\n\t\t}\n\t\tif (lastWasExpr) concatenationCost -= 3;\n\t\tif (typeof args[0] !== \"string\" && typeof args[1] === \"string\")\n\t\t\tconcatenationCost -= 3;\n\n\t\tif (concatenationCost <= templateCost) return this._es5Concatenation(args);\n\n\t\treturn `\\`${args\n\t\t\t.map(arg => (typeof arg === \"string\" ? arg : `\\${${arg.expr}}`))\n\t\t\t.join(\"\")}\\``;\n\t}\n\n\t/**\n\t * @param {Array<string|{expr: string}>} args args (len >= 2)\n\t * @returns {string} result expression\n\t * @private\n\t */\n\t_es5Concatenation(args) {\n\t\tconst str = args\n\t\t\t.map(arg => (typeof arg === \"string\" ? JSON.stringify(arg) : arg.expr))\n\t\t\t.join(\" + \");\n\n\t\t// when the first two args are expression, we need to prepend \"\" + to force string\n\t\t// concatenation instead of number addition.\n\t\treturn typeof args[0] !== \"string\" && typeof args[1] !== \"string\"\n\t\t\t? `\"\" + ${str}`\n\t\t\t: str;\n\t}\n\n\texpressionFunction(expression, args = \"\") {\n\t\treturn this.supportsArrowFunction()\n\t\t\t? `(${args}) => (${expression})`\n\t\t\t: `function(${args}) { ${expression}; }`;\n\t}\n\n\temptyFunction() {\n\t\treturn this.supportsArrowFunction() ? \"x => {}\" : \"function() {}\";\n\t}\n\n\tdestructureArray(items, value) {\n\t\treturn this.supportsDestructuring()\n\t\t\t? `var [${items.join(\", \")}] = ${value};`\n\t\t\t: Template.asString(\n\t\t\t\t\titems.map((item, i) => `var ${item} = ${value}[${i}];`)\n\t\t\t  );\n\t}\n\n\tdestructureObject(items, value) {\n\t\treturn this.supportsDestructuring()\n\t\t\t? `var {${items.join(\", \")}} = ${value};`\n\t\t\t: Template.asString(\n\t\t\t\t\titems.map(item => `var ${item} = ${value}${propertyAccess([item])};`)\n\t\t\t  );\n\t}\n\n\tiife(args, body) {\n\t\treturn `(${this.basicFunction(args, body)})()`;\n\t}\n\n\tforEach(variable, array, body) {\n\t\treturn this.supportsForOf()\n\t\t\t? `for(const ${variable} of ${array}) {\\n${Template.indent(body)}\\n}`\n\t\t\t: `${array}.forEach(function(${variable}) {\\n${Template.indent(\n\t\t\t\t\tbody\n\t\t\t  )}\\n});`;\n\t}\n\n\t/**\n\t * Add a comment\n\t * @param {object} options Information content of the comment\n\t * @param {string=} options.request request string used originally\n\t * @param {string=} options.chunkName name of the chunk referenced\n\t * @param {string=} options.chunkReason reason information of the chunk\n\t * @param {string=} options.message additional message\n\t * @param {string=} options.exportName name of the export\n\t * @returns {string} comment\n\t */\n\tcomment({ request, chunkName, chunkReason, message, exportName }) {\n\t\tlet content;\n\t\tif (this.outputOptions.pathinfo) {\n\t\t\tcontent = [message, request, chunkName, chunkReason]\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.map(item => this.requestShortener.shorten(item))\n\t\t\t\t.join(\" | \");\n\t\t} else {\n\t\t\tcontent = [message, chunkName, chunkReason]\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.map(item => this.requestShortener.shorten(item))\n\t\t\t\t.join(\" | \");\n\t\t}\n\t\tif (!content) return \"\";\n\t\tif (this.outputOptions.pathinfo) {\n\t\t\treturn Template.toComment(content) + \" \";\n\t\t} else {\n\t\t\treturn Template.toNormalComment(content) + \" \";\n\t\t}\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error block\n\t */\n\tthrowMissingModuleErrorBlock({ request }) {\n\t\tconst err = `Cannot find module '${request}'`;\n\t\treturn `var e = new Error(${JSON.stringify(\n\t\t\terr\n\t\t)}); e.code = 'MODULE_NOT_FOUND'; throw e;`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error function\n\t */\n\tthrowMissingModuleErrorFunction({ request }) {\n\t\treturn `function webpackMissingModule() { ${this.throwMissingModuleErrorBlock(\n\t\t\t{ request }\n\t\t)} }`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error IIFE\n\t */\n\tmissingModule({ request }) {\n\t\treturn `Object(${this.throwMissingModuleErrorFunction({ request })}())`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error statement\n\t */\n\tmissingModuleStatement({ request }) {\n\t\treturn `${this.missingModule({ request })};\\n`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error code\n\t */\n\tmissingModulePromise({ request }) {\n\t\treturn `Promise.resolve().then(${this.throwMissingModuleErrorFunction({\n\t\t\trequest\n\t\t})})`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {Module} options.module the module\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {string=} options.idExpr expression to use as id expression\n\t * @param {\"expression\" | \"promise\" | \"statements\"} options.type which kind of code should be returned\n\t * @returns {string} the code\n\t */\n\tweakError({ module, chunkGraph, request, idExpr, type }) {\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tconst errorMessage =\n\t\t\tmoduleId === null\n\t\t\t\t? JSON.stringify(\"Module is not available (weak dependency)\")\n\t\t\t\t: idExpr\n\t\t\t\t? `\"Module '\" + ${idExpr} + \"' is not available (weak dependency)\"`\n\t\t\t\t: JSON.stringify(\n\t\t\t\t\t\t`Module '${moduleId}' is not available (weak dependency)`\n\t\t\t\t  );\n\t\tconst comment = request ? Template.toNormalComment(request) + \" \" : \"\";\n\t\tconst errorStatements =\n\t\t\t`var e = new Error(${errorMessage}); ` +\n\t\t\tcomment +\n\t\t\t\"e.code = 'MODULE_NOT_FOUND'; throw e;\";\n\t\tswitch (type) {\n\t\t\tcase \"statements\":\n\t\t\t\treturn errorStatements;\n\t\t\tcase \"promise\":\n\t\t\t\treturn `Promise.resolve().then(${this.basicFunction(\n\t\t\t\t\t\"\",\n\t\t\t\t\terrorStatements\n\t\t\t\t)})`;\n\t\t\tcase \"expression\":\n\t\t\t\treturn this.iife(\"\", errorStatements);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @returns {string} the expression\n\t */\n\tmoduleId({ module, chunkGraph, request, weak }) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tif (moduleId === null) {\n\t\t\tif (weak) {\n\t\t\t\treturn \"null /* weak dependency, without id */\";\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\treturn `${this.comment({ request })}${JSON.stringify(moduleId)}`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the expression\n\t */\n\tmoduleRaw({ module, chunkGraph, request, weak, runtimeRequirements }) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tif (moduleId === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn this.weakError({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\ttype: \"expression\"\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\treturn `__webpack_require__(${this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t})})`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the expression\n\t */\n\tmoduleExports({ module, chunkGraph, request, weak, runtimeRequirements }) {\n\t\treturn this.moduleRaw({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak,\n\t\t\truntimeRequirements\n\t\t});\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {boolean=} options.strict if the current module is in strict esm mode\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the expression\n\t */\n\tmoduleNamespace({\n\t\tmodule,\n\t\tchunkGraph,\n\t\trequest,\n\t\tstrict,\n\t\tweak,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tif (chunkGraph.getModuleId(module) === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn this.weakError({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\ttype: \"expression\"\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleNamespace(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\tconst moduleId = this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t});\n\t\tconst exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n\t\tswitch (exportsType) {\n\t\t\tcase \"namespace\":\n\t\t\t\treturn this.moduleRaw({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\tweak,\n\t\t\t\t\truntimeRequirements\n\t\t\t\t});\n\t\t\tcase \"default-with-named\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\treturn `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 3)`;\n\t\t\tcase \"default-only\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\treturn `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 1)`;\n\t\t\tcase \"dynamic\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\treturn `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 7)`;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {AsyncDependenciesBlock=} options.block the current dependencies block\n\t * @param {Module} options.module the module\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {string} options.message a message for the comment\n\t * @param {boolean=} options.strict if the current module is in strict esm mode\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the promise expression\n\t */\n\tmoduleNamespacePromise({\n\t\tchunkGraph,\n\t\tblock,\n\t\tmodule,\n\t\trequest,\n\t\tmessage,\n\t\tstrict,\n\t\tweak,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn this.missingModulePromise({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tif (moduleId === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn this.weakError({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\ttype: \"promise\"\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleNamespacePromise(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\tconst promise = this.blockPromise({\n\t\t\tchunkGraph,\n\t\t\tblock,\n\t\t\tmessage,\n\t\t\truntimeRequirements\n\t\t});\n\n\t\tlet appending;\n\t\tlet idExpr = JSON.stringify(chunkGraph.getModuleId(module));\n\t\tconst comment = this.comment({\n\t\t\trequest\n\t\t});\n\t\tlet header = \"\";\n\t\tif (weak) {\n\t\t\tif (idExpr.length > 8) {\n\t\t\t\t// 'var x=\"nnnnnn\";x,\"+x+\",x' vs '\"nnnnnn\",nnnnnn,\"nnnnnn\"'\n\t\t\t\theader += `var id = ${idExpr}; `;\n\t\t\t\tidExpr = \"id\";\n\t\t\t}\n\t\t\truntimeRequirements.add(RuntimeGlobals.moduleFactories);\n\t\t\theader += `if(!${\n\t\t\t\tRuntimeGlobals.moduleFactories\n\t\t\t}[${idExpr}]) { ${this.weakError({\n\t\t\t\tmodule,\n\t\t\t\tchunkGraph,\n\t\t\t\trequest,\n\t\t\t\tidExpr,\n\t\t\t\ttype: \"statements\"\n\t\t\t})} } `;\n\t\t}\n\t\tconst moduleIdExpr = this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t});\n\t\tconst exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n\t\tlet fakeType = 16;\n\t\tswitch (exportsType) {\n\t\t\tcase \"namespace\":\n\t\t\t\tif (header) {\n\t\t\t\t\tconst rawModule = this.moduleRaw({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\tweak,\n\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t});\n\t\t\t\t\tappending = `.then(${this.basicFunction(\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t`${header}return ${rawModule};`\n\t\t\t\t\t)})`;\n\t\t\t\t} else {\n\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\t\t\t\tappending = `.then(__webpack_require__.bind(__webpack_require__, ${comment}${idExpr}))`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"dynamic\":\n\t\t\t\tfakeType |= 4;\n\t\t\t/* fall through */\n\t\t\tcase \"default-with-named\":\n\t\t\t\tfakeType |= 2;\n\t\t\t/* fall through */\n\t\t\tcase \"default-only\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\tif (chunkGraph.moduleGraph.isAsync(module)) {\n\t\t\t\t\tif (header) {\n\t\t\t\t\t\tconst rawModule = this.moduleRaw({\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\tweak,\n\t\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t\t});\n\t\t\t\t\t\tappending = `.then(${this.basicFunction(\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t`${header}return ${rawModule};`\n\t\t\t\t\t\t)})`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\t\t\t\t\tappending = `.then(__webpack_require__.bind(__webpack_require__, ${comment}${idExpr}))`;\n\t\t\t\t\t}\n\t\t\t\t\tappending += `.then(${this.returningFunction(\n\t\t\t\t\t\t`${RuntimeGlobals.createFakeNamespaceObject}(m, ${fakeType})`,\n\t\t\t\t\t\t\"m\"\n\t\t\t\t\t)})`;\n\t\t\t\t} else {\n\t\t\t\t\tfakeType |= 1;\n\t\t\t\t\tif (header) {\n\t\t\t\t\t\tconst returnExpression = `${RuntimeGlobals.createFakeNamespaceObject}(${moduleIdExpr}, ${fakeType})`;\n\t\t\t\t\t\tappending = `.then(${this.basicFunction(\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t`${header}return ${returnExpression};`\n\t\t\t\t\t\t)})`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tappending = `.then(${RuntimeGlobals.createFakeNamespaceObject}.bind(__webpack_require__, ${comment}${idExpr}, ${fakeType}))`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn `${promise || \"Promise.resolve()\"}${appending}`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {RuntimeSpec=} options.runtime runtime for which this code will be generated\n\t * @param {RuntimeSpec | boolean=} options.runtimeCondition only execute the statement in some runtimes\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} expression\n\t */\n\truntimeConditionExpression({\n\t\tchunkGraph,\n\t\truntimeCondition,\n\t\truntime,\n\t\truntimeRequirements\n\t}) {\n\t\tif (runtimeCondition === undefined) return \"true\";\n\t\tif (typeof runtimeCondition === \"boolean\") return `${runtimeCondition}`;\n\t\t/** @type {Set<string>} */\n\t\tconst positiveRuntimeIds = new Set();\n\t\tforEachRuntime(runtimeCondition, runtime =>\n\t\t\tpositiveRuntimeIds.add(`${chunkGraph.getRuntimeId(runtime)}`)\n\t\t);\n\t\t/** @type {Set<string>} */\n\t\tconst negativeRuntimeIds = new Set();\n\t\tforEachRuntime(subtractRuntime(runtime, runtimeCondition), runtime =>\n\t\t\tnegativeRuntimeIds.add(`${chunkGraph.getRuntimeId(runtime)}`)\n\t\t);\n\t\truntimeRequirements.add(RuntimeGlobals.runtimeId);\n\t\treturn compileBooleanMatcher.fromLists(\n\t\t\tArray.from(positiveRuntimeIds),\n\t\t\tArray.from(negativeRuntimeIds)\n\t\t)(RuntimeGlobals.runtimeId);\n\t}\n\n\t/**\n\t *\n\t * @param {Object} options options object\n\t * @param {boolean=} options.update whether a new variable should be created or the existing one updated\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {string} options.importVar name of the import variable\n\t * @param {Module} options.originModule module in which the statement is emitted\n\t * @param {boolean=} options.weak true, if this is a weak dependency\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {[string, string]} the import statement and the compat statement\n\t */\n\timportStatement({\n\t\tupdate,\n\t\tmodule,\n\t\tchunkGraph,\n\t\trequest,\n\t\timportVar,\n\t\toriginModule,\n\t\tweak,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn [\n\t\t\t\tthis.missingModuleStatement({\n\t\t\t\t\trequest\n\t\t\t\t}),\n\t\t\t\t\"\"\n\t\t\t];\n\t\t}\n\t\tif (chunkGraph.getModuleId(module) === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn [\n\t\t\t\t\tthis.weakError({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\ttype: \"statements\"\n\t\t\t\t\t}),\n\t\t\t\t\t\"\"\n\t\t\t\t];\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.importStatement(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\tconst moduleId = this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t});\n\t\tconst optDeclaration = update ? \"\" : \"var \";\n\n\t\tconst exportsType = module.getExportsType(\n\t\t\tchunkGraph.moduleGraph,\n\t\t\toriginModule.buildMeta.strictHarmonyModule\n\t\t);\n\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\tconst importContent = `/* harmony import */ ${optDeclaration}${importVar} = __webpack_require__(${moduleId});\\n`;\n\n\t\tif (exportsType === \"dynamic\") {\n\t\t\truntimeRequirements.add(RuntimeGlobals.compatGetDefaultExport);\n\t\t\treturn [\n\t\t\t\timportContent,\n\t\t\t\t`/* harmony import */ ${optDeclaration}${importVar}_default = /*#__PURE__*/${RuntimeGlobals.compatGetDefaultExport}(${importVar});\\n`\n\t\t\t];\n\t\t}\n\t\treturn [importContent, \"\"];\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {ModuleGraph} options.moduleGraph the module graph\n\t * @param {Module} options.module the module\n\t * @param {string} options.request the request\n\t * @param {string | string[]} options.exportName the export name\n\t * @param {Module} options.originModule the origin module\n\t * @param {boolean|undefined} options.asiSafe true, if location is safe for ASI, a bracket can be emitted\n\t * @param {boolean} options.isCall true, if expression will be called\n\t * @param {boolean} options.callContext when false, call context will not be preserved\n\t * @param {boolean} options.defaultInterop when true and accessing the default exports, interop code will be generated\n\t * @param {string} options.importVar the identifier name of the import variable\n\t * @param {InitFragment[]} options.initFragments init fragments will be added here\n\t * @param {RuntimeSpec} options.runtime runtime for which this code will be generated\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} expression\n\t */\n\texportFromImport({\n\t\tmoduleGraph,\n\t\tmodule,\n\t\trequest,\n\t\texportName,\n\t\toriginModule,\n\t\tasiSafe,\n\t\tisCall,\n\t\tcallContext,\n\t\tdefaultInterop,\n\t\timportVar,\n\t\tinitFragments,\n\t\truntime,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tif (!Array.isArray(exportName)) {\n\t\t\texportName = exportName ? [exportName] : [];\n\t\t}\n\t\tconst exportsType = module.getExportsType(\n\t\t\tmoduleGraph,\n\t\t\toriginModule.buildMeta.strictHarmonyModule\n\t\t);\n\n\t\tif (defaultInterop) {\n\t\t\tif (exportName.length > 0 && exportName[0] === \"default\") {\n\t\t\t\tswitch (exportsType) {\n\t\t\t\t\tcase \"dynamic\":\n\t\t\t\t\t\tif (isCall) {\n\t\t\t\t\t\t\treturn `${importVar}_default()${propertyAccess(exportName, 1)}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn asiSafe\n\t\t\t\t\t\t\t\t? `(${importVar}_default()${propertyAccess(exportName, 1)})`\n\t\t\t\t\t\t\t\t: asiSafe === false\n\t\t\t\t\t\t\t\t? `;(${importVar}_default()${propertyAccess(exportName, 1)})`\n\t\t\t\t\t\t\t\t: `${importVar}_default.a${propertyAccess(exportName, 1)}`;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase \"default-only\":\n\t\t\t\t\tcase \"default-with-named\":\n\t\t\t\t\t\texportName = exportName.slice(1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (exportName.length > 0) {\n\t\t\t\tif (exportsType === \"default-only\") {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\"/* non-default import from non-esm module */undefined\" +\n\t\t\t\t\t\tpropertyAccess(exportName, 1)\n\t\t\t\t\t);\n\t\t\t\t} else if (\n\t\t\t\t\texportsType !== \"namespace\" &&\n\t\t\t\t\texportName[0] === \"__esModule\"\n\t\t\t\t) {\n\t\t\t\t\treturn \"/* __esModule */true\";\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\texportsType === \"default-only\" ||\n\t\t\t\texportsType === \"default-with-named\"\n\t\t\t) {\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\tinitFragments.push(\n\t\t\t\t\tnew InitFragment(\n\t\t\t\t\t\t`var ${importVar}_namespace_cache;\\n`,\n\t\t\t\t\t\tInitFragment.STAGE_CONSTANTS,\n\t\t\t\t\t\t-1,\n\t\t\t\t\t\t`${importVar}_namespace_cache`\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\treturn `/*#__PURE__*/ ${\n\t\t\t\t\tasiSafe ? \"\" : asiSafe === false ? \";\" : \"Object\"\n\t\t\t\t}(${importVar}_namespace_cache || (${importVar}_namespace_cache = ${\n\t\t\t\t\tRuntimeGlobals.createFakeNamespaceObject\n\t\t\t\t}(${importVar}${exportsType === \"default-only\" ? \"\" : \", 2\"})))`;\n\t\t\t}\n\t\t}\n\n\t\tif (exportName.length > 0) {\n\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\t\t\tconst used = exportsInfo.getUsedName(exportName, runtime);\n\t\t\tif (!used) {\n\t\t\t\tconst comment = Template.toNormalComment(\n\t\t\t\t\t`unused export ${propertyAccess(exportName)}`\n\t\t\t\t);\n\t\t\t\treturn `${comment} undefined`;\n\t\t\t}\n\t\t\tconst comment = equals(used, exportName)\n\t\t\t\t? \"\"\n\t\t\t\t: Template.toNormalComment(propertyAccess(exportName)) + \" \";\n\t\t\tconst access = `${importVar}${comment}${propertyAccess(used)}`;\n\t\t\tif (isCall && callContext === false) {\n\t\t\t\treturn asiSafe\n\t\t\t\t\t? `(0,${access})`\n\t\t\t\t\t: asiSafe === false\n\t\t\t\t\t? `;(0,${access})`\n\t\t\t\t\t: `/*#__PURE__*/Object(${access})`;\n\t\t\t}\n\t\t\treturn access;\n\t\t} else {\n\t\t\treturn importVar;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {AsyncDependenciesBlock} options.block the async block\n\t * @param {string} options.message the message\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} expression\n\t */\n\tblockPromise({ block, message, chunkGraph, runtimeRequirements }) {\n\t\tif (!block) {\n\t\t\tconst comment = this.comment({\n\t\t\t\tmessage\n\t\t\t});\n\t\t\treturn `Promise.resolve(${comment.trim()})`;\n\t\t}\n\t\tconst chunkGroup = chunkGraph.getBlockChunkGroup(block);\n\t\tif (!chunkGroup || chunkGroup.chunks.length === 0) {\n\t\t\tconst comment = this.comment({\n\t\t\t\tmessage\n\t\t\t});\n\t\t\treturn `Promise.resolve(${comment.trim()})`;\n\t\t}\n\t\tconst chunks = chunkGroup.chunks.filter(\n\t\t\tchunk => !chunk.hasRuntime() && chunk.id !== null\n\t\t);\n\t\tconst comment = this.comment({\n\t\t\tmessage,\n\t\t\tchunkName: block.chunkName\n\t\t});\n\t\tif (chunks.length === 1) {\n\t\t\tconst chunkId = JSON.stringify(chunks[0].id);\n\t\t\truntimeRequirements.add(RuntimeGlobals.ensureChunk);\n\t\t\treturn `${RuntimeGlobals.ensureChunk}(${comment}${chunkId})`;\n\t\t} else if (chunks.length > 0) {\n\t\t\truntimeRequirements.add(RuntimeGlobals.ensureChunk);\n\t\t\tconst requireChunkId = chunk =>\n\t\t\t\t`${RuntimeGlobals.ensureChunk}(${JSON.stringify(chunk.id)})`;\n\t\t\treturn `Promise.all(${comment.trim()}[${chunks\n\t\t\t\t.map(requireChunkId)\n\t\t\t\t.join(\", \")}])`;\n\t\t} else {\n\t\t\treturn `Promise.resolve(${comment.trim()})`;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {AsyncDependenciesBlock} options.block the async block\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} expression\n\t */\n\tasyncModuleFactory({ block, chunkGraph, runtimeRequirements, request }) {\n\t\tconst dep = block.dependencies[0];\n\t\tconst module = chunkGraph.moduleGraph.getModule(dep);\n\t\tconst ensureChunk = this.blockPromise({\n\t\t\tblock,\n\t\t\tmessage: \"\",\n\t\t\tchunkGraph,\n\t\t\truntimeRequirements\n\t\t});\n\t\tconst factory = this.returningFunction(\n\t\t\tthis.moduleRaw({\n\t\t\t\tmodule,\n\t\t\t\tchunkGraph,\n\t\t\t\trequest,\n\t\t\t\truntimeRequirements\n\t\t\t})\n\t\t);\n\t\treturn this.returningFunction(\n\t\t\tensureChunk.startsWith(\"Promise.resolve(\")\n\t\t\t\t? `${factory}`\n\t\t\t\t: `${ensureChunk}.then(${this.returningFunction(factory)})`\n\t\t);\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {Dependency} options.dependency the dependency\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} expression\n\t */\n\tsyncModuleFactory({ dependency, chunkGraph, runtimeRequirements, request }) {\n\t\tconst module = chunkGraph.moduleGraph.getModule(dependency);\n\t\tconst factory = this.returningFunction(\n\t\t\tthis.moduleRaw({\n\t\t\t\tmodule,\n\t\t\t\tchunkGraph,\n\t\t\t\trequest,\n\t\t\t\truntimeRequirements\n\t\t\t})\n\t\t);\n\t\treturn this.returningFunction(factory);\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {string} options.exportsArgument the name of the exports object\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} statement\n\t */\n\tdefineEsModuleFlagStatement({ exportsArgument, runtimeRequirements }) {\n\t\truntimeRequirements.add(RuntimeGlobals.makeNamespaceObject);\n\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\treturn `${RuntimeGlobals.makeNamespaceObject}(${exportsArgument});\\n`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {string} options.publicPath the public path\n\t * @param {RuntimeSpec=} options.runtime runtime\n\t * @param {CodeGenerationResults} options.codeGenerationResults the code generation results\n\t * @returns {string} the url of the asset\n\t */\n\tassetUrl({ publicPath, runtime, module, codeGenerationResults }) {\n\t\tif (!module) {\n\t\t\treturn \"data:,\";\n\t\t}\n\t\tconst codeGen = codeGenerationResults.get(module, runtime);\n\t\tconst { data } = codeGen;\n\t\tconst url = data.get(\"url\");\n\t\tif (url) return url.toString();\n\t\tconst filename = data.get(\"filename\");\n\t\treturn publicPath + filename;\n\t}\n}\n\nmodule.exports = RuntimeTemplate;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}