{"ast":null,"code":"const express = require(\"express\");\nconst Stripe = require(\"stripe\");\nconst stripe = new Stripe(\"sk_test_51MLyLWJDKVz9SMmjBPON3Ul4WWUjhm44gLDd5ZHCYIjpVlIkLnCPYdXYkJg5YZsv2fYId2pBqEDPJSHk2S70LoBg00RLSQWP6x\");\nconst cors = require(\"cors\");\nconst app = express();\napp.use(cors({\n  origin: \"http://localhost:3000\"\n}));\napp.use(express.json());\napp.post(\"api/checkout\", async (req, res) => {\n  //console.log(req.body)\n  const {\n    id,\n    amount\n  } = req.body;\n  try {\n    const payment = await stripe.paymentIntents.create({\n      amount,\n      currency: \"EUR\",\n      description: \"Bike\",\n      payment_method: id,\n      confirm: true\n    });\n    console.log(payment);\n    return res.status(200).json({\n      message: \"Successful Payment\"\n    });\n    //return res.send('ok')\n  } catch (error) {\n    console.log(error);\n    return res.json({\n      message: error.raw.message\n    });\n  }\n});\napp.listen(3001, () => {\n  console.log(\"Server on port\", 3001);\n});","map":{"version":3,"names":["express","require","Stripe","stripe","cors","app","use","origin","json","post","req","res","id","amount","body","payment","paymentIntents","create","currency","description","payment_method","confirm","console","log","status","message","error","raw","listen"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/src/indexServer.js"],"sourcesContent":["const express = require(\"express\");\r\nconst Stripe = require(\"stripe\");\r\nconst stripe = new Stripe(\"sk_test_51MLyLWJDKVz9SMmjBPON3Ul4WWUjhm44gLDd5ZHCYIjpVlIkLnCPYdXYkJg5YZsv2fYId2pBqEDPJSHk2S70LoBg00RLSQWP6x\");\r\n\r\nconst cors = require(\"cors\");\r\n\r\nconst app = express();\r\n\r\napp.use(cors({ origin: \"http://localhost:3000\" }));\r\n\r\napp.use(express.json());\r\n\r\napp.post(\"api/checkout\", async (req, res) => {\r\n\t//console.log(req.body)\r\n  const { id, amount } = req.body;\r\n\r\n  try {\r\n    const payment = await stripe.paymentIntents.create({\r\n      amount,\r\n      currency: \"EUR\",\r\n      description: \"Bike\",\r\n      payment_method: id,\r\n      confirm: true\r\n    });\r\n\r\n    console.log(payment);\r\n\r\n    return res.status(200).json({ message: \"Successful Payment\" });\r\n\t//return res.send('ok')\r\n  } catch (error) {\r\n    console.log(error);\r\n    return res.json({ message: error.raw.message });\r\n  }\r\n});\r\n\r\napp.listen(3001, () => {\r\n  console.log(\"Server on port\", 3001);\r\n});\r\n\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAME,MAAM,GAAG,IAAID,MAAM,CAAC,6GAA6G,CAAC;AAExI,MAAME,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMI,GAAG,GAAGL,OAAO,EAAE;AAErBK,GAAG,CAACC,GAAG,CAACF,IAAI,CAAC;EAAEG,MAAM,EAAE;AAAwB,CAAC,CAAC,CAAC;AAElDF,GAAG,CAACC,GAAG,CAACN,OAAO,CAACQ,IAAI,EAAE,CAAC;AAEvBH,GAAG,CAACI,IAAI,CAAC,cAAc,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC5C;EACC,MAAM;IAAEC,EAAE;IAAEC;EAAO,CAAC,GAAGH,GAAG,CAACI,IAAI;EAE/B,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMZ,MAAM,CAACa,cAAc,CAACC,MAAM,CAAC;MACjDJ,MAAM;MACNK,QAAQ,EAAE,KAAK;MACfC,WAAW,EAAE,MAAM;MACnBC,cAAc,EAAER,EAAE;MAClBS,OAAO,EAAE;IACX,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;IAEpB,OAAOJ,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAAChB,IAAI,CAAC;MAAEiB,OAAO,EAAE;IAAqB,CAAC,CAAC;IACjE;EACC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IAClB,OAAOf,GAAG,CAACH,IAAI,CAAC;MAAEiB,OAAO,EAAEC,KAAK,CAACC,GAAG,CAACF;IAAQ,CAAC,CAAC;EACjD;AACF,CAAC,CAAC;AAEFpB,GAAG,CAACuB,MAAM,CAAC,IAAI,EAAE,MAAM;EACrBN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC;AACrC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}