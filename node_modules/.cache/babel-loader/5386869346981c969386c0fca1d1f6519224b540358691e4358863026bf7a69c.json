{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass UseStrictPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"UseStrictPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      const handler = parser => {\n        parser.hooks.program.tap(\"UseStrictPlugin\", ast => {\n          const firstNode = ast.body[0];\n          if (firstNode && firstNode.type === \"ExpressionStatement\" && firstNode.expression.type === \"Literal\" && firstNode.expression.value === \"use strict\") {\n            // Remove \"use strict\" expression. It will be added later by the renderer again.\n            // This is necessary in order to not break the strict mode when webpack prepends code.\n            // @see https://github.com/webpack/webpack/issues/1970\n            const dep = new ConstDependency(\"\", firstNode.range);\n            dep.loc = firstNode.loc;\n            parser.state.module.addPresentationalDependency(dep);\n            parser.state.module.buildInfo.strict = true;\n          }\n        });\n      };\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"UseStrictPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"UseStrictPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"UseStrictPlugin\", handler);\n    });\n  }\n}\nmodule.exports = UseStrictPlugin;","map":{"version":3,"names":["ConstDependency","require","UseStrictPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","handler","parser","program","ast","firstNode","body","type","expression","value","dep","range","loc","state","module","addPresentationalDependency","buildInfo","strict","for","exports"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/webpack/lib/UseStrictPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass UseStrictPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"UseStrictPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst handler = parser => {\n\t\t\t\t\tparser.hooks.program.tap(\"UseStrictPlugin\", ast => {\n\t\t\t\t\t\tconst firstNode = ast.body[0];\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tfirstNode &&\n\t\t\t\t\t\t\tfirstNode.type === \"ExpressionStatement\" &&\n\t\t\t\t\t\t\tfirstNode.expression.type === \"Literal\" &&\n\t\t\t\t\t\t\tfirstNode.expression.value === \"use strict\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Remove \"use strict\" expression. It will be added later by the renderer again.\n\t\t\t\t\t\t\t// This is necessary in order to not break the strict mode when webpack prepends code.\n\t\t\t\t\t\t\t// @see https://github.com/webpack/webpack/issues/1970\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", firstNode.range);\n\t\t\t\t\t\t\tdep.loc = firstNode.loc;\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\tparser.state.module.buildInfo.strict = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"UseStrictPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"UseStrictPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"UseStrictPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = UseStrictPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,eAAe,GAAGC,OAAO,CAAC,gCAAgC,CAAC;;AAEjE;;AAEA,MAAMC,eAAe,CAAC;EACrB;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,iBAAiB,EACjB,CAACD,WAAW,WAA8B;MAAA,IAA5B;QAAEE;MAAoB,CAAC;MACpC,MAAMC,OAAO,GAAGC,MAAM,IAAI;QACzBA,MAAM,CAACL,KAAK,CAACM,OAAO,CAACJ,GAAG,CAAC,iBAAiB,EAAEK,GAAG,IAAI;UAClD,MAAMC,SAAS,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;UAC7B,IACCD,SAAS,IACTA,SAAS,CAACE,IAAI,KAAK,qBAAqB,IACxCF,SAAS,CAACG,UAAU,CAACD,IAAI,KAAK,SAAS,IACvCF,SAAS,CAACG,UAAU,CAACC,KAAK,KAAK,YAAY,EAC1C;YACD;YACA;YACA;YACA,MAAMC,GAAG,GAAG,IAAIlB,eAAe,CAAC,EAAE,EAAEa,SAAS,CAACM,KAAK,CAAC;YACpDD,GAAG,CAACE,GAAG,GAAGP,SAAS,CAACO,GAAG;YACvBV,MAAM,CAACW,KAAK,CAACC,MAAM,CAACC,2BAA2B,CAACL,GAAG,CAAC;YACpDR,MAAM,CAACW,KAAK,CAACC,MAAM,CAACE,SAAS,CAACC,MAAM,GAAG,IAAI;UAC5C;QACD,CAAC,CAAC;MACH,CAAC;MAEDjB,mBAAmB,CAACH,KAAK,CAACK,MAAM,CAC9BgB,GAAG,CAAC,iBAAiB,CAAC,CACtBnB,GAAG,CAAC,iBAAiB,EAAEE,OAAO,CAAC;MACjCD,mBAAmB,CAACH,KAAK,CAACK,MAAM,CAC9BgB,GAAG,CAAC,oBAAoB,CAAC,CACzBnB,GAAG,CAAC,iBAAiB,EAAEE,OAAO,CAAC;MACjCD,mBAAmB,CAACH,KAAK,CAACK,MAAM,CAC9BgB,GAAG,CAAC,gBAAgB,CAAC,CACrBnB,GAAG,CAAC,iBAAiB,EAAEE,OAAO,CAAC;IAClC,CAAC,CACD;EACF;AACD;AAEAa,MAAM,CAACK,OAAO,GAAGzB,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}