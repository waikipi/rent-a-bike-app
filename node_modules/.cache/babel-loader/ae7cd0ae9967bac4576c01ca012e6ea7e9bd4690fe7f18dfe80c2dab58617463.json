{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst JsonGenerator = require(\"./JsonGenerator\");\nconst JsonParser = require(\"./JsonParser\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(require(\"../../schemas/plugins/JsonModulesPluginParser.check.js\"), () => require(\"../../schemas/plugins/JsonModulesPluginParser.json\"), {\n  name: \"Json Modules Plugin\",\n  baseDataPath: \"parser\"\n});\nclass JsonModulesPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"JsonModulesPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      normalModuleFactory.hooks.createParser.for(\"json\").tap(\"JsonModulesPlugin\", parserOptions => {\n        validate(parserOptions);\n        return new JsonParser(parserOptions);\n      });\n      normalModuleFactory.hooks.createGenerator.for(\"json\").tap(\"JsonModulesPlugin\", () => {\n        return new JsonGenerator();\n      });\n    });\n  }\n}\nmodule.exports = JsonModulesPlugin;","map":{"version":3,"names":["createSchemaValidation","require","JsonGenerator","JsonParser","validate","name","baseDataPath","JsonModulesPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","createParser","for","parserOptions","createGenerator","module","exports"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/webpack/lib/json/JsonModulesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst JsonGenerator = require(\"./JsonGenerator\");\nconst JsonParser = require(\"./JsonParser\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/JsonModulesPluginParser.check.js\"),\n\t() => require(\"../../schemas/plugins/JsonModulesPluginParser.json\"),\n\t{\n\t\tname: \"Json Modules Plugin\",\n\t\tbaseDataPath: \"parser\"\n\t}\n);\n\nclass JsonModulesPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"JsonModulesPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"json\")\n\t\t\t\t\t.tap(\"JsonModulesPlugin\", parserOptions => {\n\t\t\t\t\t\tvalidate(parserOptions);\n\n\t\t\t\t\t\treturn new JsonParser(parserOptions);\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"json\")\n\t\t\t\t\t.tap(\"JsonModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JsonGenerator();\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = JsonModulesPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,sBAAsB,GAAGC,OAAO,CAAC,kCAAkC,CAAC;AAC1E,MAAMC,aAAa,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAChD,MAAME,UAAU,GAAGF,OAAO,CAAC,cAAc,CAAC;;AAE1C;;AAEA,MAAMG,QAAQ,GAAGJ,sBAAsB,CACtCC,OAAO,CAAC,wDAAwD,CAAC,EACjE,MAAMA,OAAO,CAAC,oDAAoD,CAAC,EACnE;EACCI,IAAI,EAAE,qBAAqB;EAC3BC,YAAY,EAAE;AACf,CAAC,CACD;AAED,MAAMC,iBAAiB,CAAC;EACvB;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,mBAAmB,EACnB,CAACD,WAAW,WAA8B;MAAA,IAA5B;QAAEE;MAAoB,CAAC;MACpCA,mBAAmB,CAACH,KAAK,CAACI,YAAY,CACpCC,GAAG,CAAC,MAAM,CAAC,CACXH,GAAG,CAAC,mBAAmB,EAAEI,aAAa,IAAI;QAC1CZ,QAAQ,CAACY,aAAa,CAAC;QAEvB,OAAO,IAAIb,UAAU,CAACa,aAAa,CAAC;MACrC,CAAC,CAAC;MACHH,mBAAmB,CAACH,KAAK,CAACO,eAAe,CACvCF,GAAG,CAAC,MAAM,CAAC,CACXH,GAAG,CAAC,mBAAmB,EAAE,MAAM;QAC/B,OAAO,IAAIV,aAAa,EAAE;MAC3B,CAAC,CAAC;IACJ,CAAC,CACD;EACF;AACD;AAEAgB,MAAM,CAACC,OAAO,GAAGZ,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}