{"ast":null,"code":"'use strict';\n\nconst _Error = require('./Error');\nconst resources = require('./resources');\nconst DEFAULT_HOST = 'api.stripe.com';\nconst DEFAULT_PORT = '443';\nconst DEFAULT_BASE_PATH = '/v1/';\nconst DEFAULT_API_VERSION = null;\nconst DEFAULT_TIMEOUT = 80000;\nStripe.PACKAGE_VERSION = require('../package.json').version;\nconst utils = require('./utils');\nconst {\n  determineProcessUserAgentProperties,\n  emitWarning\n} = utils;\nStripe.USER_AGENT = Object.assign({\n  bindings_version: Stripe.PACKAGE_VERSION,\n  lang: 'node',\n  publisher: 'stripe',\n  uname: null,\n  typescript: false\n}, determineProcessUserAgentProperties());\n/** @private */\nStripe._UNAME_CACHE = null;\nconst MAX_NETWORK_RETRY_DELAY_SEC = 2;\nconst INITIAL_NETWORK_RETRY_DELAY_SEC = 0.5;\nconst APP_INFO_PROPERTIES = ['name', 'version', 'url', 'partner_id'];\nconst ALLOWED_CONFIG_PROPERTIES = ['apiVersion', 'typescript', 'maxNetworkRetries', 'httpAgent', 'httpClient', 'timeout', 'host', 'port', 'protocol', 'telemetry', 'appInfo', 'stripeAccount'];\nconst EventEmitter = require('events').EventEmitter;\nconst StripeResource = require('./StripeResource');\nStripe.StripeResource = StripeResource;\nStripe.resources = resources;\nconst {\n  HttpClient,\n  HttpClientResponse\n} = require('./net/HttpClient');\nStripe.HttpClient = HttpClient;\nStripe.HttpClientResponse = HttpClientResponse;\nconst CryptoProvider = require('./crypto/CryptoProvider');\nStripe.CryptoProvider = CryptoProvider;\nfunction Stripe(key) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!(this instanceof Stripe)) {\n    return new Stripe(key, config);\n  }\n  const props = this._getPropsFromConfig(config);\n  Object.defineProperty(this, '_emitter', {\n    value: new EventEmitter(),\n    enumerable: false,\n    configurable: false,\n    writable: false\n  });\n  this.VERSION = Stripe.PACKAGE_VERSION;\n  this.on = this._emitter.on.bind(this._emitter);\n  this.once = this._emitter.once.bind(this._emitter);\n  this.off = this._emitter.removeListener.bind(this._emitter);\n  if (props.protocol && props.protocol !== 'https' && (!props.host || /\\.stripe\\.com$/.test(props.host))) {\n    throw new Error('The `https` protocol must be used when sending requests to `*.stripe.com`');\n  }\n  const agent = props.httpAgent || null;\n  this._api = {\n    auth: null,\n    host: props.host || DEFAULT_HOST,\n    port: props.port || DEFAULT_PORT,\n    protocol: props.protocol || 'https',\n    basePath: DEFAULT_BASE_PATH,\n    version: props.apiVersion || DEFAULT_API_VERSION,\n    timeout: utils.validateInteger('timeout', props.timeout, DEFAULT_TIMEOUT),\n    maxNetworkRetries: utils.validateInteger('maxNetworkRetries', props.maxNetworkRetries, 0),\n    agent: agent,\n    httpClient: props.httpClient || Stripe.createNodeHttpClient(agent),\n    dev: false,\n    stripeAccount: props.stripeAccount || null\n  };\n  const typescript = props.typescript || false;\n  if (typescript !== Stripe.USER_AGENT.typescript) {\n    // The mutation here is uncomfortable, but likely fastest;\n    // serializing the user agent involves shelling out to the system,\n    // and given some users may instantiate the library many times without switching between TS and non-TS,\n    // we only want to incur the performance hit when that actually happens.\n    Stripe.USER_AGENT.typescript = typescript;\n  }\n  if (props.appInfo) {\n    this._setAppInfo(props.appInfo);\n  }\n  this._prepResources();\n  this._setApiKey(key);\n  this.errors = _Error;\n  this.webhooks = require('./Webhooks');\n  this._prevRequestMetrics = [];\n  this._enableTelemetry = props.telemetry !== false;\n  // Expose StripeResource on the instance too\n  // @ts-ignore\n  this.StripeResource = Stripe.StripeResource;\n}\nStripe.errors = _Error;\nStripe.webhooks = require('./Webhooks');\nStripe.createNodeHttpClient = agent => {\n  const {\n    NodeHttpClient\n  } = require('./net/NodeHttpClient');\n  return new NodeHttpClient(agent);\n};\n/**\n * Creates an HTTP client for issuing Stripe API requests which uses the Web\n * Fetch API.\n *\n * A fetch function can optionally be passed in as a parameter. If none is\n * passed, will default to the default `fetch` function in the global scope.\n */\nStripe.createFetchHttpClient = fetchFn => {\n  const {\n    FetchHttpClient\n  } = require('./net/FetchHttpClient');\n  return new FetchHttpClient(fetchFn);\n};\n/**\n * Create a CryptoProvider which uses the built-in Node crypto libraries for\n * its crypto operations.\n */\nStripe.createNodeCryptoProvider = () => {\n  const NodeCryptoProvider = require('./crypto/NodeCryptoProvider');\n  return new NodeCryptoProvider();\n};\n/**\n * Creates a CryptoProvider which uses the Subtle Crypto API from the Web\n * Crypto API spec for its crypto operations.\n *\n * A SubtleCrypto interface can optionally be passed in as a parameter. If none\n * is passed, will default to the default `crypto.subtle` object in the global\n * scope.\n */\nStripe.createSubtleCryptoProvider = subtleCrypto => {\n  const SubtleCryptoProvider = require('./crypto/SubtleCryptoProvider');\n  return new SubtleCryptoProvider(subtleCrypto);\n};\nStripe.prototype = {\n  // Properties are set in the constructor above\n  _appInfo: undefined,\n  on: null,\n  off: null,\n  once: null,\n  VERSION: null,\n  StripeResource: null,\n  webhooks: null,\n  errors: null,\n  _api: null,\n  _prevRequestMetrics: null,\n  _emitter: null,\n  _enableTelemetry: null,\n  /**\n   * @private\n   */\n  _setApiKey(key) {\n    if (key) {\n      this._setApiField('auth', `Bearer ${key}`);\n    }\n  },\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _setAppInfo(info) {\n    if (info && typeof info !== 'object') {\n      throw new Error('AppInfo must be an object.');\n    }\n    if (info && !info.name) {\n      throw new Error('AppInfo.name is required');\n    }\n    info = info || {};\n    this._appInfo = APP_INFO_PROPERTIES.reduce((accum, prop) => {\n      if (typeof info[prop] == 'string') {\n        accum = accum || {};\n        accum[prop] = info[prop];\n      }\n      return accum;\n    },\n    // @ts-ignore\n    undefined);\n  },\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _setApiField(key, value) {\n    this._api[key] = value;\n  },\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   */\n  getApiField(key) {\n    return this._api[key];\n  },\n  setClientId(clientId) {\n    this._clientId = clientId;\n  },\n  getClientId() {\n    return this._clientId;\n  },\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   */\n  getConstant: c => {\n    switch (c) {\n      case 'DEFAULT_HOST':\n        return DEFAULT_HOST;\n      case 'DEFAULT_PORT':\n        return DEFAULT_PORT;\n      case 'DEFAULT_BASE_PATH':\n        return DEFAULT_BASE_PATH;\n      case 'DEFAULT_API_VERSION':\n        return DEFAULT_API_VERSION;\n      case 'DEFAULT_TIMEOUT':\n        return DEFAULT_TIMEOUT;\n      case 'MAX_NETWORK_RETRY_DELAY_SEC':\n        return MAX_NETWORK_RETRY_DELAY_SEC;\n      case 'INITIAL_NETWORK_RETRY_DELAY_SEC':\n        return INITIAL_NETWORK_RETRY_DELAY_SEC;\n    }\n    return Stripe[c];\n  },\n  getMaxNetworkRetries() {\n    return this.getApiField('maxNetworkRetries');\n  },\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _setApiNumberField(prop, n, defaultVal) {\n    const val = utils.validateInteger(prop, n, defaultVal);\n    this._setApiField(prop, val);\n  },\n  getMaxNetworkRetryDelay() {\n    return MAX_NETWORK_RETRY_DELAY_SEC;\n  },\n  getInitialNetworkRetryDelay() {\n    return INITIAL_NETWORK_RETRY_DELAY_SEC;\n  },\n  /**\n   * @private\n   */\n  getUname(cb) {\n    if (!Stripe._UNAME_CACHE) {\n      Stripe._UNAME_CACHE = new Promise(resolve => {\n        utils.safeExec('uname -a', (err, uname) => {\n          resolve(uname);\n        });\n      });\n    }\n    Stripe._UNAME_CACHE.then(uname => cb(uname));\n  },\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   *\n   * Gets a JSON version of a User-Agent and uses a cached version for a slight\n   * speed advantage.\n   */\n  getClientUserAgent(cb) {\n    return this.getClientUserAgentSeeded(Stripe.USER_AGENT, cb);\n  },\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   *\n   * Gets a JSON version of a User-Agent by encoding a seeded object and\n   * fetching a uname from the system.\n   */\n  getClientUserAgentSeeded(seed, cb) {\n    this.getUname(uname => {\n      const userAgent = {};\n      for (const field in seed) {\n        userAgent[field] = encodeURIComponent(seed[field]);\n      }\n      // URI-encode in case there are unusual characters in the system's uname.\n      userAgent.uname = encodeURIComponent(uname || 'UNKNOWN');\n      const client = this.getApiField('httpClient');\n      if (client) {\n        userAgent.httplib = encodeURIComponent(client.getClientName());\n      }\n      if (this._appInfo) {\n        userAgent.application = this._appInfo;\n      }\n      cb(JSON.stringify(userAgent));\n    });\n  },\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   */\n  getAppInfoAsString() {\n    if (!this._appInfo) {\n      return '';\n    }\n    let formatted = this._appInfo.name;\n    if (this._appInfo.version) {\n      formatted += `/${this._appInfo.version}`;\n    }\n    if (this._appInfo.url) {\n      formatted += ` (${this._appInfo.url})`;\n    }\n    return formatted;\n  },\n  getTelemetryEnabled() {\n    return this._enableTelemetry;\n  },\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _prepResources() {\n    for (const name in resources) {\n      // @ts-ignore\n      this[utils.pascalToCamelCase(name)] = new resources[name](this);\n    }\n  },\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _getPropsFromConfig(config) {\n    // If config is null or undefined, just bail early with no props\n    if (!config) {\n      return {};\n    }\n    // config can be an object or a string\n    const isString = typeof config === 'string';\n    const isObject = config === Object(config) && !Array.isArray(config);\n    if (!isObject && !isString) {\n      throw new Error('Config must either be an object or a string');\n    }\n    // If config is a string, we assume the old behavior of passing in a string representation of the api version\n    if (isString) {\n      return {\n        apiVersion: config\n      };\n    }\n    // If config is an object, we assume the new behavior and make sure it doesn't contain any unexpected values\n    const values = Object.keys(config).filter(value => !ALLOWED_CONFIG_PROPERTIES.includes(value));\n    if (values.length > 0) {\n      throw new Error(`Config object may only contain the following: ${ALLOWED_CONFIG_PROPERTIES.join(', ')}`);\n    }\n    return config;\n  }\n};\nmodule.exports = Stripe;\n// expose constructor as a named property to enable mocking with Sinon.JS\nmodule.exports.Stripe = Stripe;\n// Allow use with the TypeScript compiler without `esModuleInterop`.\n// We may also want to add `Object.defineProperty(exports, \"__esModule\", {value: true});` in the future, so that Babel users will use the `default` version.\nmodule.exports.default = Stripe;","map":{"version":3,"names":["_Error","require","resources","DEFAULT_HOST","DEFAULT_PORT","DEFAULT_BASE_PATH","DEFAULT_API_VERSION","DEFAULT_TIMEOUT","Stripe","PACKAGE_VERSION","version","utils","determineProcessUserAgentProperties","emitWarning","USER_AGENT","Object","assign","bindings_version","lang","publisher","uname","typescript","_UNAME_CACHE","MAX_NETWORK_RETRY_DELAY_SEC","INITIAL_NETWORK_RETRY_DELAY_SEC","APP_INFO_PROPERTIES","ALLOWED_CONFIG_PROPERTIES","EventEmitter","StripeResource","HttpClient","HttpClientResponse","CryptoProvider","key","config","props","_getPropsFromConfig","defineProperty","value","enumerable","configurable","writable","VERSION","on","_emitter","bind","once","off","removeListener","protocol","host","test","Error","agent","httpAgent","_api","auth","port","basePath","apiVersion","timeout","validateInteger","maxNetworkRetries","httpClient","createNodeHttpClient","dev","stripeAccount","appInfo","_setAppInfo","_prepResources","_setApiKey","errors","webhooks","_prevRequestMetrics","_enableTelemetry","telemetry","NodeHttpClient","createFetchHttpClient","fetchFn","FetchHttpClient","createNodeCryptoProvider","NodeCryptoProvider","createSubtleCryptoProvider","subtleCrypto","SubtleCryptoProvider","prototype","_appInfo","undefined","_setApiField","info","name","reduce","accum","prop","getApiField","setClientId","clientId","_clientId","getClientId","getConstant","c","getMaxNetworkRetries","_setApiNumberField","n","defaultVal","val","getMaxNetworkRetryDelay","getInitialNetworkRetryDelay","getUname","cb","Promise","resolve","safeExec","err","then","getClientUserAgent","getClientUserAgentSeeded","seed","userAgent","field","encodeURIComponent","client","httplib","getClientName","application","JSON","stringify","getAppInfoAsString","formatted","url","getTelemetryEnabled","pascalToCamelCase","isString","isObject","Array","isArray","values","keys","filter","includes","length","join","module","exports","default"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/stripe/lib/stripe.js"],"sourcesContent":["'use strict';\nconst _Error = require('./Error');\nconst resources = require('./resources');\nconst DEFAULT_HOST = 'api.stripe.com';\nconst DEFAULT_PORT = '443';\nconst DEFAULT_BASE_PATH = '/v1/';\nconst DEFAULT_API_VERSION = null;\nconst DEFAULT_TIMEOUT = 80000;\nStripe.PACKAGE_VERSION = require('../package.json').version;\nconst utils = require('./utils');\nconst {determineProcessUserAgentProperties, emitWarning} = utils;\nStripe.USER_AGENT = Object.assign(\n  {\n    bindings_version: Stripe.PACKAGE_VERSION,\n    lang: 'node',\n    publisher: 'stripe',\n    uname: null,\n    typescript: false,\n  },\n  determineProcessUserAgentProperties()\n);\n/** @private */\nStripe._UNAME_CACHE = null;\nconst MAX_NETWORK_RETRY_DELAY_SEC = 2;\nconst INITIAL_NETWORK_RETRY_DELAY_SEC = 0.5;\nconst APP_INFO_PROPERTIES = ['name', 'version', 'url', 'partner_id'];\nconst ALLOWED_CONFIG_PROPERTIES = [\n  'apiVersion',\n  'typescript',\n  'maxNetworkRetries',\n  'httpAgent',\n  'httpClient',\n  'timeout',\n  'host',\n  'port',\n  'protocol',\n  'telemetry',\n  'appInfo',\n  'stripeAccount',\n];\nconst EventEmitter = require('events').EventEmitter;\nconst StripeResource = require('./StripeResource');\nStripe.StripeResource = StripeResource;\nStripe.resources = resources;\nconst {HttpClient, HttpClientResponse} = require('./net/HttpClient');\nStripe.HttpClient = HttpClient;\nStripe.HttpClientResponse = HttpClientResponse;\nconst CryptoProvider = require('./crypto/CryptoProvider');\nStripe.CryptoProvider = CryptoProvider;\nfunction Stripe(key, config = {}) {\n  if (!(this instanceof Stripe)) {\n    return new Stripe(key, config);\n  }\n  const props = this._getPropsFromConfig(config);\n  Object.defineProperty(this, '_emitter', {\n    value: new EventEmitter(),\n    enumerable: false,\n    configurable: false,\n    writable: false,\n  });\n  this.VERSION = Stripe.PACKAGE_VERSION;\n  this.on = this._emitter.on.bind(this._emitter);\n  this.once = this._emitter.once.bind(this._emitter);\n  this.off = this._emitter.removeListener.bind(this._emitter);\n  if (\n    props.protocol &&\n    props.protocol !== 'https' &&\n    (!props.host || /\\.stripe\\.com$/.test(props.host))\n  ) {\n    throw new Error(\n      'The `https` protocol must be used when sending requests to `*.stripe.com`'\n    );\n  }\n  const agent = props.httpAgent || null;\n  this._api = {\n    auth: null,\n    host: props.host || DEFAULT_HOST,\n    port: props.port || DEFAULT_PORT,\n    protocol: props.protocol || 'https',\n    basePath: DEFAULT_BASE_PATH,\n    version: props.apiVersion || DEFAULT_API_VERSION,\n    timeout: utils.validateInteger('timeout', props.timeout, DEFAULT_TIMEOUT),\n    maxNetworkRetries: utils.validateInteger(\n      'maxNetworkRetries',\n      props.maxNetworkRetries,\n      0\n    ),\n    agent: agent,\n    httpClient: props.httpClient || Stripe.createNodeHttpClient(agent),\n    dev: false,\n    stripeAccount: props.stripeAccount || null,\n  };\n  const typescript = props.typescript || false;\n  if (typescript !== Stripe.USER_AGENT.typescript) {\n    // The mutation here is uncomfortable, but likely fastest;\n    // serializing the user agent involves shelling out to the system,\n    // and given some users may instantiate the library many times without switching between TS and non-TS,\n    // we only want to incur the performance hit when that actually happens.\n    Stripe.USER_AGENT.typescript = typescript;\n  }\n  if (props.appInfo) {\n    this._setAppInfo(props.appInfo);\n  }\n  this._prepResources();\n  this._setApiKey(key);\n  this.errors = _Error;\n  this.webhooks = require('./Webhooks');\n  this._prevRequestMetrics = [];\n  this._enableTelemetry = props.telemetry !== false;\n  // Expose StripeResource on the instance too\n  // @ts-ignore\n  this.StripeResource = Stripe.StripeResource;\n}\nStripe.errors = _Error;\nStripe.webhooks = require('./Webhooks');\nStripe.createNodeHttpClient = (agent) => {\n  const {NodeHttpClient} = require('./net/NodeHttpClient');\n  return new NodeHttpClient(agent);\n};\n/**\n * Creates an HTTP client for issuing Stripe API requests which uses the Web\n * Fetch API.\n *\n * A fetch function can optionally be passed in as a parameter. If none is\n * passed, will default to the default `fetch` function in the global scope.\n */\nStripe.createFetchHttpClient = (fetchFn) => {\n  const {FetchHttpClient} = require('./net/FetchHttpClient');\n  return new FetchHttpClient(fetchFn);\n};\n/**\n * Create a CryptoProvider which uses the built-in Node crypto libraries for\n * its crypto operations.\n */\nStripe.createNodeCryptoProvider = () => {\n  const NodeCryptoProvider = require('./crypto/NodeCryptoProvider');\n  return new NodeCryptoProvider();\n};\n/**\n * Creates a CryptoProvider which uses the Subtle Crypto API from the Web\n * Crypto API spec for its crypto operations.\n *\n * A SubtleCrypto interface can optionally be passed in as a parameter. If none\n * is passed, will default to the default `crypto.subtle` object in the global\n * scope.\n */\nStripe.createSubtleCryptoProvider = (subtleCrypto) => {\n  const SubtleCryptoProvider = require('./crypto/SubtleCryptoProvider');\n  return new SubtleCryptoProvider(subtleCrypto);\n};\nStripe.prototype = {\n  // Properties are set in the constructor above\n  _appInfo: undefined,\n  on: null,\n  off: null,\n  once: null,\n  VERSION: null,\n  StripeResource: null,\n  webhooks: null,\n  errors: null,\n  _api: null,\n  _prevRequestMetrics: null,\n  _emitter: null,\n  _enableTelemetry: null,\n  /**\n   * @private\n   */\n  _setApiKey(key) {\n    if (key) {\n      this._setApiField('auth', `Bearer ${key}`);\n    }\n  },\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _setAppInfo(info) {\n    if (info && typeof info !== 'object') {\n      throw new Error('AppInfo must be an object.');\n    }\n    if (info && !info.name) {\n      throw new Error('AppInfo.name is required');\n    }\n    info = info || {};\n    this._appInfo = APP_INFO_PROPERTIES.reduce(\n      (accum, prop) => {\n        if (typeof info[prop] == 'string') {\n          accum = accum || {};\n          accum[prop] = info[prop];\n        }\n        return accum;\n      },\n      // @ts-ignore\n      undefined\n    );\n  },\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _setApiField(key, value) {\n    this._api[key] = value;\n  },\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   */\n  getApiField(key) {\n    return this._api[key];\n  },\n  setClientId(clientId) {\n    this._clientId = clientId;\n  },\n  getClientId() {\n    return this._clientId;\n  },\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   */\n  getConstant: (c) => {\n    switch (c) {\n      case 'DEFAULT_HOST':\n        return DEFAULT_HOST;\n      case 'DEFAULT_PORT':\n        return DEFAULT_PORT;\n      case 'DEFAULT_BASE_PATH':\n        return DEFAULT_BASE_PATH;\n      case 'DEFAULT_API_VERSION':\n        return DEFAULT_API_VERSION;\n      case 'DEFAULT_TIMEOUT':\n        return DEFAULT_TIMEOUT;\n      case 'MAX_NETWORK_RETRY_DELAY_SEC':\n        return MAX_NETWORK_RETRY_DELAY_SEC;\n      case 'INITIAL_NETWORK_RETRY_DELAY_SEC':\n        return INITIAL_NETWORK_RETRY_DELAY_SEC;\n    }\n    return Stripe[c];\n  },\n  getMaxNetworkRetries() {\n    return this.getApiField('maxNetworkRetries');\n  },\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _setApiNumberField(prop, n, defaultVal) {\n    const val = utils.validateInteger(prop, n, defaultVal);\n    this._setApiField(prop, val);\n  },\n  getMaxNetworkRetryDelay() {\n    return MAX_NETWORK_RETRY_DELAY_SEC;\n  },\n  getInitialNetworkRetryDelay() {\n    return INITIAL_NETWORK_RETRY_DELAY_SEC;\n  },\n  /**\n   * @private\n   */\n  getUname(cb) {\n    if (!Stripe._UNAME_CACHE) {\n      Stripe._UNAME_CACHE = new Promise((resolve) => {\n        utils.safeExec('uname -a', (err, uname) => {\n          resolve(uname);\n        });\n      });\n    }\n    Stripe._UNAME_CACHE.then((uname) => cb(uname));\n  },\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   *\n   * Gets a JSON version of a User-Agent and uses a cached version for a slight\n   * speed advantage.\n   */\n  getClientUserAgent(cb) {\n    return this.getClientUserAgentSeeded(Stripe.USER_AGENT, cb);\n  },\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   *\n   * Gets a JSON version of a User-Agent by encoding a seeded object and\n   * fetching a uname from the system.\n   */\n  getClientUserAgentSeeded(seed, cb) {\n    this.getUname((uname) => {\n      const userAgent = {};\n      for (const field in seed) {\n        userAgent[field] = encodeURIComponent(seed[field]);\n      }\n      // URI-encode in case there are unusual characters in the system's uname.\n      userAgent.uname = encodeURIComponent(uname || 'UNKNOWN');\n      const client = this.getApiField('httpClient');\n      if (client) {\n        userAgent.httplib = encodeURIComponent(client.getClientName());\n      }\n      if (this._appInfo) {\n        userAgent.application = this._appInfo;\n      }\n      cb(JSON.stringify(userAgent));\n    });\n  },\n  /**\n   * @private\n   * Please open or upvote an issue at github.com/stripe/stripe-node\n   * if you use this, detailing your use-case.\n   *\n   * It may be deprecated and removed in the future.\n   */\n  getAppInfoAsString() {\n    if (!this._appInfo) {\n      return '';\n    }\n    let formatted = this._appInfo.name;\n    if (this._appInfo.version) {\n      formatted += `/${this._appInfo.version}`;\n    }\n    if (this._appInfo.url) {\n      formatted += ` (${this._appInfo.url})`;\n    }\n    return formatted;\n  },\n  getTelemetryEnabled() {\n    return this._enableTelemetry;\n  },\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _prepResources() {\n    for (const name in resources) {\n      // @ts-ignore\n      this[utils.pascalToCamelCase(name)] = new resources[name](this);\n    }\n  },\n  /**\n   * @private\n   * This may be removed in the future.\n   */\n  _getPropsFromConfig(config) {\n    // If config is null or undefined, just bail early with no props\n    if (!config) {\n      return {};\n    }\n    // config can be an object or a string\n    const isString = typeof config === 'string';\n    const isObject = config === Object(config) && !Array.isArray(config);\n    if (!isObject && !isString) {\n      throw new Error('Config must either be an object or a string');\n    }\n    // If config is a string, we assume the old behavior of passing in a string representation of the api version\n    if (isString) {\n      return {\n        apiVersion: config,\n      };\n    }\n    // If config is an object, we assume the new behavior and make sure it doesn't contain any unexpected values\n    const values = Object.keys(config).filter(\n      (value) => !ALLOWED_CONFIG_PROPERTIES.includes(value)\n    );\n    if (values.length > 0) {\n      throw new Error(\n        `Config object may only contain the following: ${ALLOWED_CONFIG_PROPERTIES.join(\n          ', '\n        )}`\n      );\n    }\n    return config;\n  },\n};\nmodule.exports = Stripe;\n// expose constructor as a named property to enable mocking with Sinon.JS\nmodule.exports.Stripe = Stripe;\n// Allow use with the TypeScript compiler without `esModuleInterop`.\n// We may also want to add `Object.defineProperty(exports, \"__esModule\", {value: true});` in the future, so that Babel users will use the `default` version.\nmodule.exports.default = Stripe;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}