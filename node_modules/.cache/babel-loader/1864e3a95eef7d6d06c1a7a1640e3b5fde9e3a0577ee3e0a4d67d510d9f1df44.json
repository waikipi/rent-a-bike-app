{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst glob2regexp = require(\"glob-to-regexp\");\nconst {\n  STAGE_DEFAULT\n} = require(\"../OptimizationStages\");\nconst HarmonyExportImportedSpecifierDependency = require(\"../dependencies/HarmonyExportImportedSpecifierDependency\");\nconst HarmonyImportSpecifierDependency = require(\"../dependencies/HarmonyImportSpecifierDependency\");\nconst formatLocation = require(\"../formatLocation\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n\n/**\n * @typedef {Object} ExportInModule\n * @property {Module} module the module\n * @property {string} exportName the name of the export\n * @property {boolean} checked if the export is conditional\n */\n\n/**\n * @typedef {Object} ReexportInfo\n * @property {Map<string, ExportInModule[]>} static\n * @property {Map<Module, Set<string>>} dynamic\n */\n\n/** @type {WeakMap<any, Map<string, RegExp>>} */\nconst globToRegexpCache = new WeakMap();\n\n/**\n * @param {string} glob the pattern\n * @param {Map<string, RegExp>} cache the glob to RegExp cache\n * @returns {RegExp} a regular expression\n */\nconst globToRegexp = (glob, cache) => {\n  const cacheEntry = cache.get(glob);\n  if (cacheEntry !== undefined) return cacheEntry;\n  if (!glob.includes(\"/\")) {\n    glob = `**/${glob}`;\n  }\n  const baseRegexp = glob2regexp(glob, {\n    globstar: true,\n    extended: true\n  });\n  const regexpSource = baseRegexp.source;\n  const regexp = new RegExp(\"^(\\\\./)?\" + regexpSource.slice(1));\n  cache.set(glob, regexp);\n  return regexp;\n};\nclass SideEffectsFlagPlugin {\n  /**\n   * @param {boolean} analyseSource analyse source code for side effects\n   */\n  constructor() {\n    let analyseSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this._analyseSource = analyseSource;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    let cache = globToRegexpCache.get(compiler.root);\n    if (cache === undefined) {\n      cache = new Map();\n      globToRegexpCache.set(compiler.root, cache);\n    }\n    compiler.hooks.compilation.tap(\"SideEffectsFlagPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      const moduleGraph = compilation.moduleGraph;\n      normalModuleFactory.hooks.module.tap(\"SideEffectsFlagPlugin\", (module, data) => {\n        const resolveData = data.resourceResolveData;\n        if (resolveData && resolveData.descriptionFileData && resolveData.relativePath) {\n          const sideEffects = resolveData.descriptionFileData.sideEffects;\n          if (sideEffects !== undefined) {\n            if (module.factoryMeta === undefined) {\n              module.factoryMeta = {};\n            }\n            const hasSideEffects = SideEffectsFlagPlugin.moduleHasSideEffects(resolveData.relativePath, sideEffects, cache);\n            module.factoryMeta.sideEffectFree = !hasSideEffects;\n          }\n        }\n        return module;\n      });\n      normalModuleFactory.hooks.module.tap(\"SideEffectsFlagPlugin\", (module, data) => {\n        if (typeof data.settings.sideEffects === \"boolean\") {\n          if (module.factoryMeta === undefined) {\n            module.factoryMeta = {};\n          }\n          module.factoryMeta.sideEffectFree = !data.settings.sideEffects;\n        }\n        return module;\n      });\n      if (this._analyseSource) {\n        /**\n         * @param {JavascriptParser} parser the parser\n         * @returns {void}\n         */\n        const parserHandler = parser => {\n          let sideEffectsStatement;\n          parser.hooks.program.tap(\"SideEffectsFlagPlugin\", () => {\n            sideEffectsStatement = undefined;\n          });\n          parser.hooks.statement.tap({\n            name: \"SideEffectsFlagPlugin\",\n            stage: -100\n          }, statement => {\n            if (sideEffectsStatement) return;\n            if (parser.scope.topLevelScope !== true) return;\n            switch (statement.type) {\n              case \"ExpressionStatement\":\n                if (!parser.isPure(statement.expression, statement.range[0])) {\n                  sideEffectsStatement = statement;\n                }\n                break;\n              case \"IfStatement\":\n              case \"WhileStatement\":\n              case \"DoWhileStatement\":\n                if (!parser.isPure(statement.test, statement.range[0])) {\n                  sideEffectsStatement = statement;\n                }\n                // statement hook will be called for child statements too\n                break;\n              case \"ForStatement\":\n                if (!parser.isPure(statement.init, statement.range[0]) || !parser.isPure(statement.test, statement.init ? statement.init.range[1] : statement.range[0]) || !parser.isPure(statement.update, statement.test ? statement.test.range[1] : statement.init ? statement.init.range[1] : statement.range[0])) {\n                  sideEffectsStatement = statement;\n                }\n                // statement hook will be called for child statements too\n                break;\n              case \"SwitchStatement\":\n                if (!parser.isPure(statement.discriminant, statement.range[0])) {\n                  sideEffectsStatement = statement;\n                }\n                // statement hook will be called for child statements too\n                break;\n              case \"VariableDeclaration\":\n              case \"ClassDeclaration\":\n              case \"FunctionDeclaration\":\n                if (!parser.isPure(statement, statement.range[0])) {\n                  sideEffectsStatement = statement;\n                }\n                break;\n              case \"ExportNamedDeclaration\":\n              case \"ExportDefaultDeclaration\":\n                if (!parser.isPure(statement.declaration, statement.range[0])) {\n                  sideEffectsStatement = statement;\n                }\n                break;\n              case \"LabeledStatement\":\n              case \"BlockStatement\":\n                // statement hook will be called for child statements too\n                break;\n              case \"EmptyStatement\":\n                break;\n              case \"ExportAllDeclaration\":\n              case \"ImportDeclaration\":\n                // imports will be handled by the dependencies\n                break;\n              default:\n                sideEffectsStatement = statement;\n                break;\n            }\n          });\n          parser.hooks.finish.tap(\"SideEffectsFlagPlugin\", () => {\n            if (sideEffectsStatement === undefined) {\n              parser.state.module.buildMeta.sideEffectFree = true;\n            } else {\n              const {\n                loc,\n                type\n              } = sideEffectsStatement;\n              moduleGraph.getOptimizationBailout(parser.state.module).push(() => `Statement (${type}) with side effects in source code at ${formatLocation(loc)}`);\n            }\n          });\n        };\n        for (const key of [\"javascript/auto\", \"javascript/esm\", \"javascript/dynamic\"]) {\n          normalModuleFactory.hooks.parser.for(key).tap(\"SideEffectsFlagPlugin\", parserHandler);\n        }\n      }\n      compilation.hooks.optimizeDependencies.tap({\n        name: \"SideEffectsFlagPlugin\",\n        stage: STAGE_DEFAULT\n      }, modules => {\n        const logger = compilation.getLogger(\"webpack.SideEffectsFlagPlugin\");\n        logger.time(\"update dependencies\");\n        for (const module of modules) {\n          if (module.getSideEffectsConnectionState(moduleGraph) === false) {\n            const exportsInfo = moduleGraph.getExportsInfo(module);\n            for (const connection of moduleGraph.getIncomingConnections(module)) {\n              const dep = connection.dependency;\n              let isReexport;\n              if ((isReexport = dep instanceof HarmonyExportImportedSpecifierDependency) || dep instanceof HarmonyImportSpecifierDependency && !dep.namespaceObjectAsContext) {\n                // TODO improve for export *\n                if (isReexport && dep.name) {\n                  const exportInfo = moduleGraph.getExportInfo(connection.originModule, dep.name);\n                  exportInfo.moveTarget(moduleGraph, _ref2 => {\n                    let {\n                      module\n                    } = _ref2;\n                    return module.getSideEffectsConnectionState(moduleGraph) === false;\n                  }, _ref3 => {\n                    let {\n                      module: newModule,\n                      export: exportName\n                    } = _ref3;\n                    moduleGraph.updateModule(dep, newModule);\n                    moduleGraph.addExplanation(dep, \"(skipped side-effect-free modules)\");\n                    const ids = dep.getIds(moduleGraph);\n                    dep.setIds(moduleGraph, exportName ? [...exportName, ...ids.slice(1)] : ids.slice(1));\n                    return moduleGraph.getConnection(dep);\n                  });\n                  continue;\n                }\n                // TODO improve for nested imports\n                const ids = dep.getIds(moduleGraph);\n                if (ids.length > 0) {\n                  const exportInfo = exportsInfo.getExportInfo(ids[0]);\n                  const target = exportInfo.getTarget(moduleGraph, _ref4 => {\n                    let {\n                      module\n                    } = _ref4;\n                    return module.getSideEffectsConnectionState(moduleGraph) === false;\n                  });\n                  if (!target) continue;\n                  moduleGraph.updateModule(dep, target.module);\n                  moduleGraph.addExplanation(dep, \"(skipped side-effect-free modules)\");\n                  dep.setIds(moduleGraph, target.export ? [...target.export, ...ids.slice(1)] : ids.slice(1));\n                }\n              }\n            }\n          }\n        }\n        logger.timeEnd(\"update dependencies\");\n      });\n    });\n  }\n  static moduleHasSideEffects(moduleName, flagValue, cache) {\n    switch (typeof flagValue) {\n      case \"undefined\":\n        return true;\n      case \"boolean\":\n        return flagValue;\n      case \"string\":\n        return globToRegexp(flagValue, cache).test(moduleName);\n      case \"object\":\n        return flagValue.some(glob => SideEffectsFlagPlugin.moduleHasSideEffects(moduleName, glob, cache));\n    }\n  }\n}\nmodule.exports = SideEffectsFlagPlugin;","map":{"version":3,"names":["glob2regexp","require","STAGE_DEFAULT","HarmonyExportImportedSpecifierDependency","HarmonyImportSpecifierDependency","formatLocation","globToRegexpCache","WeakMap","globToRegexp","glob","cache","cacheEntry","get","undefined","includes","baseRegexp","globstar","extended","regexpSource","source","regexp","RegExp","slice","set","SideEffectsFlagPlugin","constructor","analyseSource","_analyseSource","apply","compiler","root","Map","hooks","compilation","tap","normalModuleFactory","moduleGraph","module","data","resolveData","resourceResolveData","descriptionFileData","relativePath","sideEffects","factoryMeta","hasSideEffects","moduleHasSideEffects","sideEffectFree","settings","parserHandler","parser","sideEffectsStatement","program","statement","name","stage","scope","topLevelScope","type","isPure","expression","range","test","init","update","discriminant","declaration","finish","state","buildMeta","loc","getOptimizationBailout","push","key","for","optimizeDependencies","modules","logger","getLogger","time","getSideEffectsConnectionState","exportsInfo","getExportsInfo","connection","getIncomingConnections","dep","dependency","isReexport","namespaceObjectAsContext","exportInfo","getExportInfo","originModule","moveTarget","newModule","export","exportName","updateModule","addExplanation","ids","getIds","setIds","getConnection","length","target","getTarget","timeEnd","moduleName","flagValue","some","exports"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/webpack/lib/optimize/SideEffectsFlagPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst glob2regexp = require(\"glob-to-regexp\");\nconst { STAGE_DEFAULT } = require(\"../OptimizationStages\");\nconst HarmonyExportImportedSpecifierDependency = require(\"../dependencies/HarmonyExportImportedSpecifierDependency\");\nconst HarmonyImportSpecifierDependency = require(\"../dependencies/HarmonyImportSpecifierDependency\");\nconst formatLocation = require(\"../formatLocation\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n\n/**\n * @typedef {Object} ExportInModule\n * @property {Module} module the module\n * @property {string} exportName the name of the export\n * @property {boolean} checked if the export is conditional\n */\n\n/**\n * @typedef {Object} ReexportInfo\n * @property {Map<string, ExportInModule[]>} static\n * @property {Map<Module, Set<string>>} dynamic\n */\n\n/** @type {WeakMap<any, Map<string, RegExp>>} */\nconst globToRegexpCache = new WeakMap();\n\n/**\n * @param {string} glob the pattern\n * @param {Map<string, RegExp>} cache the glob to RegExp cache\n * @returns {RegExp} a regular expression\n */\nconst globToRegexp = (glob, cache) => {\n\tconst cacheEntry = cache.get(glob);\n\tif (cacheEntry !== undefined) return cacheEntry;\n\tif (!glob.includes(\"/\")) {\n\t\tglob = `**/${glob}`;\n\t}\n\tconst baseRegexp = glob2regexp(glob, { globstar: true, extended: true });\n\tconst regexpSource = baseRegexp.source;\n\tconst regexp = new RegExp(\"^(\\\\./)?\" + regexpSource.slice(1));\n\tcache.set(glob, regexp);\n\treturn regexp;\n};\n\nclass SideEffectsFlagPlugin {\n\t/**\n\t * @param {boolean} analyseSource analyse source code for side effects\n\t */\n\tconstructor(analyseSource = true) {\n\t\tthis._analyseSource = analyseSource;\n\t}\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tlet cache = globToRegexpCache.get(compiler.root);\n\t\tif (cache === undefined) {\n\t\t\tcache = new Map();\n\t\t\tglobToRegexpCache.set(compiler.root, cache);\n\t\t}\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"SideEffectsFlagPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst moduleGraph = compilation.moduleGraph;\n\t\t\t\tnormalModuleFactory.hooks.module.tap(\n\t\t\t\t\t\"SideEffectsFlagPlugin\",\n\t\t\t\t\t(module, data) => {\n\t\t\t\t\t\tconst resolveData = data.resourceResolveData;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tresolveData &&\n\t\t\t\t\t\t\tresolveData.descriptionFileData &&\n\t\t\t\t\t\t\tresolveData.relativePath\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst sideEffects = resolveData.descriptionFileData.sideEffects;\n\t\t\t\t\t\t\tif (sideEffects !== undefined) {\n\t\t\t\t\t\t\t\tif (module.factoryMeta === undefined) {\n\t\t\t\t\t\t\t\t\tmodule.factoryMeta = {};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst hasSideEffects =\n\t\t\t\t\t\t\t\t\tSideEffectsFlagPlugin.moduleHasSideEffects(\n\t\t\t\t\t\t\t\t\t\tresolveData.relativePath,\n\t\t\t\t\t\t\t\t\t\tsideEffects,\n\t\t\t\t\t\t\t\t\t\tcache\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tmodule.factoryMeta.sideEffectFree = !hasSideEffects;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn module;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tnormalModuleFactory.hooks.module.tap(\n\t\t\t\t\t\"SideEffectsFlagPlugin\",\n\t\t\t\t\t(module, data) => {\n\t\t\t\t\t\tif (typeof data.settings.sideEffects === \"boolean\") {\n\t\t\t\t\t\t\tif (module.factoryMeta === undefined) {\n\t\t\t\t\t\t\t\tmodule.factoryMeta = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmodule.factoryMeta.sideEffectFree = !data.settings.sideEffects;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn module;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (this._analyseSource) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {JavascriptParser} parser the parser\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tconst parserHandler = parser => {\n\t\t\t\t\t\tlet sideEffectsStatement;\n\t\t\t\t\t\tparser.hooks.program.tap(\"SideEffectsFlagPlugin\", () => {\n\t\t\t\t\t\t\tsideEffectsStatement = undefined;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tparser.hooks.statement.tap(\n\t\t\t\t\t\t\t{ name: \"SideEffectsFlagPlugin\", stage: -100 },\n\t\t\t\t\t\t\tstatement => {\n\t\t\t\t\t\t\t\tif (sideEffectsStatement) return;\n\t\t\t\t\t\t\t\tif (parser.scope.topLevelScope !== true) return;\n\t\t\t\t\t\t\t\tswitch (statement.type) {\n\t\t\t\t\t\t\t\t\tcase \"ExpressionStatement\":\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t!parser.isPure(statement.expression, statement.range[0])\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tsideEffectsStatement = statement;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"IfStatement\":\n\t\t\t\t\t\t\t\t\tcase \"WhileStatement\":\n\t\t\t\t\t\t\t\t\tcase \"DoWhileStatement\":\n\t\t\t\t\t\t\t\t\t\tif (!parser.isPure(statement.test, statement.range[0])) {\n\t\t\t\t\t\t\t\t\t\t\tsideEffectsStatement = statement;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// statement hook will be called for child statements too\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"ForStatement\":\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t!parser.isPure(statement.init, statement.range[0]) ||\n\t\t\t\t\t\t\t\t\t\t\t!parser.isPure(\n\t\t\t\t\t\t\t\t\t\t\t\tstatement.test,\n\t\t\t\t\t\t\t\t\t\t\t\tstatement.init\n\t\t\t\t\t\t\t\t\t\t\t\t\t? statement.init.range[1]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: statement.range[0]\n\t\t\t\t\t\t\t\t\t\t\t) ||\n\t\t\t\t\t\t\t\t\t\t\t!parser.isPure(\n\t\t\t\t\t\t\t\t\t\t\t\tstatement.update,\n\t\t\t\t\t\t\t\t\t\t\t\tstatement.test\n\t\t\t\t\t\t\t\t\t\t\t\t\t? statement.test.range[1]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: statement.init\n\t\t\t\t\t\t\t\t\t\t\t\t\t? statement.init.range[1]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: statement.range[0]\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tsideEffectsStatement = statement;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// statement hook will be called for child statements too\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"SwitchStatement\":\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t!parser.isPure(statement.discriminant, statement.range[0])\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tsideEffectsStatement = statement;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// statement hook will be called for child statements too\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"VariableDeclaration\":\n\t\t\t\t\t\t\t\t\tcase \"ClassDeclaration\":\n\t\t\t\t\t\t\t\t\tcase \"FunctionDeclaration\":\n\t\t\t\t\t\t\t\t\t\tif (!parser.isPure(statement, statement.range[0])) {\n\t\t\t\t\t\t\t\t\t\t\tsideEffectsStatement = statement;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"ExportNamedDeclaration\":\n\t\t\t\t\t\t\t\t\tcase \"ExportDefaultDeclaration\":\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t!parser.isPure(statement.declaration, statement.range[0])\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tsideEffectsStatement = statement;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"LabeledStatement\":\n\t\t\t\t\t\t\t\t\tcase \"BlockStatement\":\n\t\t\t\t\t\t\t\t\t\t// statement hook will be called for child statements too\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"EmptyStatement\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"ExportAllDeclaration\":\n\t\t\t\t\t\t\t\t\tcase \"ImportDeclaration\":\n\t\t\t\t\t\t\t\t\t\t// imports will be handled by the dependencies\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tsideEffectsStatement = statement;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tparser.hooks.finish.tap(\"SideEffectsFlagPlugin\", () => {\n\t\t\t\t\t\t\tif (sideEffectsStatement === undefined) {\n\t\t\t\t\t\t\t\tparser.state.module.buildMeta.sideEffectFree = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst { loc, type } = sideEffectsStatement;\n\t\t\t\t\t\t\t\tmoduleGraph\n\t\t\t\t\t\t\t\t\t.getOptimizationBailout(parser.state.module)\n\t\t\t\t\t\t\t\t\t.push(\n\t\t\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\t\t\t`Statement (${type}) with side effects in source code at ${formatLocation(\n\t\t\t\t\t\t\t\t\t\t\t\tloc\n\t\t\t\t\t\t\t\t\t\t\t)}`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\tfor (const key of [\n\t\t\t\t\t\t\"javascript/auto\",\n\t\t\t\t\t\t\"javascript/esm\",\n\t\t\t\t\t\t\"javascript/dynamic\"\n\t\t\t\t\t]) {\n\t\t\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"SideEffectsFlagPlugin\", parserHandler);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcompilation.hooks.optimizeDependencies.tap(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"SideEffectsFlagPlugin\",\n\t\t\t\t\t\tstage: STAGE_DEFAULT\n\t\t\t\t\t},\n\t\t\t\t\tmodules => {\n\t\t\t\t\t\tconst logger = compilation.getLogger(\n\t\t\t\t\t\t\t\"webpack.SideEffectsFlagPlugin\"\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tlogger.time(\"update dependencies\");\n\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\tif (module.getSideEffectsConnectionState(moduleGraph) === false) {\n\t\t\t\t\t\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\t\t\t\t\t\t\t\tfor (const connection of moduleGraph.getIncomingConnections(\n\t\t\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\tconst dep = connection.dependency;\n\t\t\t\t\t\t\t\t\tlet isReexport;\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t(isReexport =\n\t\t\t\t\t\t\t\t\t\t\tdep instanceof\n\t\t\t\t\t\t\t\t\t\t\tHarmonyExportImportedSpecifierDependency) ||\n\t\t\t\t\t\t\t\t\t\t(dep instanceof HarmonyImportSpecifierDependency &&\n\t\t\t\t\t\t\t\t\t\t\t!dep.namespaceObjectAsContext)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t// TODO improve for export *\n\t\t\t\t\t\t\t\t\t\tif (isReexport && dep.name) {\n\t\t\t\t\t\t\t\t\t\t\tconst exportInfo = moduleGraph.getExportInfo(\n\t\t\t\t\t\t\t\t\t\t\t\tconnection.originModule,\n\t\t\t\t\t\t\t\t\t\t\t\tdep.name\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\texportInfo.moveTarget(\n\t\t\t\t\t\t\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\t\t\t\t\t\t\t({ module }) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tmodule.getSideEffectsConnectionState(moduleGraph) ===\n\t\t\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t\t\t({ module: newModule, export: exportName }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmoduleGraph.updateModule(dep, newModule);\n\t\t\t\t\t\t\t\t\t\t\t\t\tmoduleGraph.addExplanation(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdep,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"(skipped side-effect-free modules)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst ids = dep.getIds(moduleGraph);\n\t\t\t\t\t\t\t\t\t\t\t\t\tdep.setIds(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\texportName\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? [...exportName, ...ids.slice(1)]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: ids.slice(1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn moduleGraph.getConnection(dep);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// TODO improve for nested imports\n\t\t\t\t\t\t\t\t\t\tconst ids = dep.getIds(moduleGraph);\n\t\t\t\t\t\t\t\t\t\tif (ids.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\tconst exportInfo = exportsInfo.getExportInfo(ids[0]);\n\t\t\t\t\t\t\t\t\t\t\tconst target = exportInfo.getTarget(\n\t\t\t\t\t\t\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\t\t\t\t\t\t\t({ module }) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tmodule.getSideEffectsConnectionState(moduleGraph) ===\n\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tif (!target) continue;\n\n\t\t\t\t\t\t\t\t\t\t\tmoduleGraph.updateModule(dep, target.module);\n\t\t\t\t\t\t\t\t\t\t\tmoduleGraph.addExplanation(\n\t\t\t\t\t\t\t\t\t\t\t\tdep,\n\t\t\t\t\t\t\t\t\t\t\t\t\"(skipped side-effect-free modules)\"\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tdep.setIds(\n\t\t\t\t\t\t\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\t\t\t\t\t\t\ttarget.export\n\t\t\t\t\t\t\t\t\t\t\t\t\t? [...target.export, ...ids.slice(1)]\n\t\t\t\t\t\t\t\t\t\t\t\t\t: ids.slice(1)\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlogger.timeEnd(\"update dependencies\");\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n\n\tstatic moduleHasSideEffects(moduleName, flagValue, cache) {\n\t\tswitch (typeof flagValue) {\n\t\t\tcase \"undefined\":\n\t\t\t\treturn true;\n\t\t\tcase \"boolean\":\n\t\t\t\treturn flagValue;\n\t\t\tcase \"string\":\n\t\t\t\treturn globToRegexp(flagValue, cache).test(moduleName);\n\t\t\tcase \"object\":\n\t\t\t\treturn flagValue.some(glob =>\n\t\t\t\t\tSideEffectsFlagPlugin.moduleHasSideEffects(moduleName, glob, cache)\n\t\t\t\t);\n\t\t}\n\t}\n}\nmodule.exports = SideEffectsFlagPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}