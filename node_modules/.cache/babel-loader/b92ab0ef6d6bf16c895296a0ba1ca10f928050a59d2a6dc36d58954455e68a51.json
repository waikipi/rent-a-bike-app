{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst ContextElementDependency = require(\"./ContextElementDependency\");\nconst ImportMetaContextDependency = require(\"./ImportMetaContextDependency\");\nconst ImportMetaContextDependencyParserPlugin = require(\"./ImportMetaContextDependencyParserPlugin\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass ImportMetaContextPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"RequireContextPlugin\", (compilation, _ref) => {\n      let {\n        contextModuleFactory,\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(ImportMetaContextDependency, contextModuleFactory);\n      compilation.dependencyTemplates.set(ImportMetaContextDependency, new ImportMetaContextDependency.Template());\n      compilation.dependencyFactories.set(ContextElementDependency, normalModuleFactory);\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.importMetaContext !== undefined && !parserOptions.importMetaContext) return;\n        new ImportMetaContextDependencyParserPlugin().apply(parser);\n      };\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ImportMetaContextPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ImportMetaContextPlugin\", handler);\n    });\n  }\n}\nmodule.exports = ImportMetaContextPlugin;","map":{"version":3,"names":["ContextElementDependency","require","ImportMetaContextDependency","ImportMetaContextDependencyParserPlugin","ImportMetaContextPlugin","apply","compiler","hooks","compilation","tap","contextModuleFactory","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","importMetaContext","undefined","for","module","exports"],"sources":["C:/Users/galia/OneDrive/Escritorio/rent-a-bike-app/node_modules/webpack/lib/dependencies/ImportMetaContextPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst ContextElementDependency = require(\"./ContextElementDependency\");\nconst ImportMetaContextDependency = require(\"./ImportMetaContextDependency\");\nconst ImportMetaContextDependencyParserPlugin = require(\"./ImportMetaContextDependencyParserPlugin\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass ImportMetaContextPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"RequireContextPlugin\",\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportMetaContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportMetaContextDependency,\n\t\t\t\t\tnew ImportMetaContextDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tContextElementDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.importMetaContext !== undefined &&\n\t\t\t\t\t\t!parserOptions.importMetaContext\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew ImportMetaContextDependencyParserPlugin().apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ImportMetaContextPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ImportMetaContextPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ImportMetaContextPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,wBAAwB,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACtE,MAAMC,2BAA2B,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAC5E,MAAME,uCAAuC,GAAGF,OAAO,CAAC,2CAA2C,CAAC;;AAEpG;AACA;;AAEA,MAAMG,uBAAuB,CAAC;EAC7B;AACD;AACA;AACA;AACA;EACCC,KAAK,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,sBAAsB,EACtB,CAACD,WAAW,WAAoD;MAAA,IAAlD;QAAEE,oBAAoB;QAAEC;MAAoB,CAAC;MAC1DH,WAAW,CAACI,mBAAmB,CAACC,GAAG,CAClCX,2BAA2B,EAC3BQ,oBAAoB,CACpB;MACDF,WAAW,CAACM,mBAAmB,CAACD,GAAG,CAClCX,2BAA2B,EAC3B,IAAIA,2BAA2B,CAACa,QAAQ,EAAE,CAC1C;MACDP,WAAW,CAACI,mBAAmB,CAACC,GAAG,CAClCb,wBAAwB,EACxBW,mBAAmB,CACnB;MAED,MAAMK,OAAO,GAAG,CAACC,MAAM,EAAEC,aAAa,KAAK;QAC1C,IACCA,aAAa,CAACC,iBAAiB,KAAKC,SAAS,IAC7C,CAACF,aAAa,CAACC,iBAAiB,EAEhC;QAED,IAAIhB,uCAAuC,EAAE,CAACE,KAAK,CAACY,MAAM,CAAC;MAC5D,CAAC;MAEDN,mBAAmB,CAACJ,KAAK,CAACU,MAAM,CAC9BI,GAAG,CAAC,iBAAiB,CAAC,CACtBZ,GAAG,CAAC,yBAAyB,EAAEO,OAAO,CAAC;MACzCL,mBAAmB,CAACJ,KAAK,CAACU,MAAM,CAC9BI,GAAG,CAAC,gBAAgB,CAAC,CACrBZ,GAAG,CAAC,yBAAyB,EAAEO,OAAO,CAAC;IAC1C,CAAC,CACD;EACF;AACD;AAEAM,MAAM,CAACC,OAAO,GAAGnB,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}